{
  "init": {
    "room": "vilEntrance",
    "exec": [
      [
        "set",
        "@eggs",
        4
      ]
    ],
    "desc": "^Tale of the Fiery Dragon^||\"I am a mighty adventurer!?\", even to your own ears your words don't ooze with confidence. Stories of this village filled your childhood, Oh the games you'd played - swinging your stick at your friend who, flapping his arms, swooped at you as any fearsome dragon should.||As you grew you vowed that one day you would go to that village and see it with your own eyes... And now you're here... really here!|||||A Scratch Text Adventure brought to you by ^griffpatch^.|"
  },
  "rooms": {
    "shed": {
      "name": "shed",
      "x": 99,
      "y": 30,
      "scripts": {
        "findSpider": [
          [
            "say",
            "Yuck, they look so old and thick... Wait, there's something! Arrh!! A huge, black, hairy ^spider^! He looks like he's especially partial to flies as his web is literally full of old fly wings."
          ],
          [
            "trig",
            "cobweb"
          ],
          [
            "setObjectAttr",
            "spider",
            "room",
            "@room"
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "exam",
            "cobwebs"
          ],
          "exec": [
            "if",
            [
              "isTrig",
              "cobweb"
            ],
            [
              "say",
              "Yuck, they look so old and thick... and gosh, the number of dead fly wings!"
            ],
            [
              "exec",
              "rooms.shed.scripts.findSpider"
            ]
          ]
        },
        {
          "action": [
            "take",
            "cobwebs"
          ],
          "exec": [
            "if",
            [
              "isTrig",
              "cobweb"
            ],
            [
              "say",
              "They just get stuck to my hands, yuck!"
            ],
            [
              "exec",
              "rooms.shed.scripts.findSpider"
            ]
          ]
        }
      ],
      "walk": {
        "exit": "vegPatch"
      },
      "desc": "^The Shed^||It's not very nice in here, the air is hot and the ceiling is full of ^cobwebs^!||The only ^exit^ is back out the shed door."
    },
    "vilEntrance": {
      "afterEnter": [
        "if",
        [
          "getJSONAttr",
          "rooms.vilEntrance.first"
        ],
        [],
        [
          [
            "say",
            "|You see a handy looking ^map^ of the village poking out of a pocket in the ^archway^ so you pick it up."
          ],
          [
            "setJSONAttr",
            "rooms.vilEntrance.first",
            true
          ]
        ]
      ],
      "name": "Gates",
      "x": 0,
      "y": -67,
      "birds": true,
      "click": "Village Gates",
      "actions": [
        {
          "action": [
            "exam",
            "mountain"
          ],
          "exec": [
            "say",
            "The legends say that the fiery dragon lives in these mountains... I always said I would climb them and see for myself!"
          ]
        },
        {
          "action": [
            "exam",
            "arch"
          ],
          "exec": [
            "say",
            "It's made of thick dark timber and going on its charred, black condition, I assume it has been set on fire at least once in the past!"
          ]
        },
        {
          "action": [
            "exam",
            "village"
          ],
          "exec": [
            "say",
            "From here it looks quite idyllic and you can make out some kind of pool? Walk ^north^ to see it better!"
          ]
        },
        {
          "action": [
            "exam",
            "pool"
          ],
          "exec": [
            "say",
            "It's too far away, you'll have to move north."
          ]
        },
        {
          "action": [
            "exam",
            "sign"
          ],
          "exec": [
            "say",
            "It reads 'Village of the fiery DRAGON'. I'm not sure why they wrote dragon in uppercase, perhaps it's a very big dragon? Oh dear, why did I end up here!"
          ]
        },
        {
          "action": [
            "read",
            "sign"
          ],
          "exec": [
            "say",
            "It reads 'Village of the fiery DRAGON'. I'm not sure why they wrote dragon in uppercase, perhaps it's a very big dragon? Oh dear, why did I end up here!"
          ]
        },
        {
          "action": [
            "take",
            "sign"
          ],
          "exec": [
            "say",
            "You can't reach it."
          ]
        },
        {
          "action": [
            "eat",
            "sign"
          ],
          "exec": [
            "say",
            "You can't reach it."
          ]
        },
        {
          "action": [
            "eat",
            "arch"
          ],
          "exec": [
            "say",
            "You can barely get your teeth into it."
          ]
        },
        {
          "action": [
            "smell",
            "sign"
          ],
          "exec": [
            "say",
            "It's too far away."
          ]
        },
        {
          "action": [
            "eat",
            "mountain"
          ],
          "exec": [
            "say",
            "The mountain reminds you of Toblerone chocolates and your belly rumbles..."
          ]
        }
      ],
      "walk": {
        "s": "mountainFoot",
        "n": "square"
      },
      "desc": "^Village Gates^||You are standing in an ^archway^, a large ^sign^ reading 'Village of the Fiery DRAGON' is swinging above your head.||Through the arch to your north is the ^village square^, and a ^mountain path^ winds up the ^mountain^ to your south."
    },
    "shallows": {
      "name": "shallows",
      "x": 24,
      "y": 54,
      "actions": [
        {
          "action": [
            "n"
          ],
          "exec": [
            "say",
            "You attempt to swim out to sea but the waves prove far too strong for you, you soon tire and are pushed back in to the shallows."
          ]
        },
        {
          "action": [
            "swim"
          ],
          "exec": [
            "say",
            "You attempt to swim out to sea but the waves prove far too strong for you, you soon tire and are pushed back in to the shallows."
          ]
        }
      ],
      "walk": {
        "exit": "beach",
        "s": "beach",
        "n": "ocean"
      },
      "desc": "^The Shallows^||You are standing in the shallows of the ^Sea^. The water is pleasantly warm here but you are being buffeted back and forth by the ^waves^ and at times it's hard to keep your balance.||The ^Deep Ocean^ is to your north, and the ^Beach^ is back to your south."
    },
    "highStreet": {
      "name": "Street",
      "x": 1,
      "y": 3,
      "birds": true,
      "click": "High Street",
      "actions": [
        {
          "action": [
            "exam",
            "cobbles"
          ],
          "exec": [
            "say",
            "The cobbles are well worn from many years of use."
          ]
        },
        {
          "action": [
            "exam",
            "floor"
          ],
          "exec": [
            "say",
            "The cobbles are well worn from many years of use."
          ]
        },
        {
          "action": [
            "smell"
          ],
          "exec": [
            "say",
            "The mix of fish & rodent is not very appealing."
          ]
        },
        {
          "action": [
            "exam",
            "fishmonger"
          ],
          "exec": [
            "say",
            "I could see it better if I moved closer (it's erected on the pavement to your ^west^)."
          ]
        },
        {
          "action": [
            "exam",
            "shop"
          ],
          "exec": [
            "say",
            "I could see it better if I moved closer (it's to your east)."
          ]
        },
        {
          "action": [
            "exam",
            "castle"
          ],
          "exec": [
            "say",
            "Wow, the ^castle^ is an amazing sight! I'm sure I can get a better look as I move north of here."
          ]
        },
        {
          "action": [
            "exam",
            "vets"
          ],
          "exec": [
            "say",
            "It's the place where you bring your pet animals if they're not feeling well. Also it looks like they sell pet food and stuff."
          ]
        },
        {
          "action": [
            "walk",
            "castle"
          ],
          "exec": [
            "exec",
            "scripts.walkTo",
            "vilPath",
            "You set off north towards the castle..."
          ]
        }
      ],
      "walk": {
        "s": "square",
        "e": "vet",
        "w": "fishmongersStall",
        "n": "vilPath"
      },
      "desc": "^The High Street^||The cobbled village high street smells rather funky (not in a good way!) something between fish and wet hay?||To your east stands a ^veterinary clinic^, and a ^fishmongers^ is erected to your west. The ^Royal street^ leads off northwards towards the ^castle^ and the ^village square^ is to your south."
    },
    "giantMouseHole2": {
      "ring": true,
      "name": "hole",
      "x": -78,
      "y": 138,
      "actions": [
        {
          "action": [
            "exam",
            "straw"
          ],
          "exec": [
            "say",
            "The straw is lies flat behind the ^mouse^."
          ]
        },
        {
          "action": [
            "take",
            "straw"
          ],
          "exec": [
            "say",
            "I think I'll leave it be."
          ]
        },
        {
          "action": [
            "drop",
            "cat"
          ],
          "exec": [
            "say",
            "\"The cat flat refuses to be put down here!\""
          ]
        },
        {
          "action": [
            "cat",
            "straw"
          ],
          "exec": [
            "say",
            "\"The cat flat refuses to be put down here!\""
          ]
        },
        {
          "action": [
            "straw",
            "cat"
          ],
          "exec": [
            "say",
            "\"The cat flat refuses to be put down here!\""
          ]
        },
        {
          "action": [
            "throw",
            "cat"
          ],
          "exec": [
            "say",
            "\"The cat flat refuses to be put down here!\""
          ]
        },
        {
          "action": [
            "take",
            "cheese"
          ],
          "exec": [
            "say",
            "No way - That ^mouse^ needs it more than me!"
          ]
        },
        {
          "action": [
            "exam",
            "cheese"
          ],
          "exec": [
            "say",
            "The ^mouse^ is really enjoying that cheese!"
          ]
        }
      ],
      "walk": {
        "exit": "giantsCastle",
        "s": "giantsCastle"
      },
      "desc": "^The Giant Mouse Hole^||Inside the large mouse hole it's quite dark. A large ^pink mouse^ is squatting on it's back legs hungrily eating a ball of ^cheese^.||The ^exit^ is back to your south."
    },
    "giantsTable": {
      "ring": true,
      "name": "Table",
      "x": -78,
      "y": 138,
      "actions": [
        {
          "action": [
            "exam",
            "giant"
          ],
          "exec": [
            "say",
            "The giant is slumped over the far end of the huge table snoring loudly!"
          ]
        },
        {
          "action": [
            "exam",
            "legs"
          ],
          "exec": [
            "say",
            "I can still scramble down them if I'm careful!"
          ]
        },
        {
          "action": [
            "walk",
            "legs"
          ],
          "exec": [
            "exec",
            "scripts.walkTo",
            "giantsCastle"
          ]
        },
        {
          "action": [
            "climb",
            "legs"
          ],
          "exec": [
            "exec",
            "scripts.walkTo",
            "giantsCastle"
          ]
        }
      ],
      "walk": {
        "exit": "giantsCastle",
        "d": "giantsCastle"
      },
      "desc": "^The Giant's Table^||You are standing on a huge table top. The ^giant^ is lying snoring at the far end.||The only way ^down^ is to climb down the ^table leg^ again."
    },
    "witchCottage": {
      "afterEnter": [
        "if",
        [
          "isTrig",
          "witchGone"
        ],
        [
          "say",
          "|You hear the witch shuffling around in the back room and a few confused grunts..."
        ]
      ],
      "name": "Cottage",
      "x": -80,
      "y": -32,
      "walk": {
        "exit": "forest2"
      },
      "desc": "^The Dark Old Cottage^||You have to wait for your eyes to grow accustomed to the light (or lack of it!). At the centre of the cottage is a large ^bubbling cauldron^. Around the edges of the room there appears to be a selection of unnaturally ^huge vegetables^?||The only ^exit^ is the front door."
    },
    "shipwreck": {
      "move": "Swim",
      "name": "shipwreck",
      "x": 19,
      "y": 59,
      "actions": [
        {
          "action": [
            "walk",
            "shipwreck"
          ],
          "exec": [
            "exec",
            "scripts.walkTo",
            "shipsHold"
          ]
        },
        {
          "action": [
            "swim",
            "shipwreck"
          ],
          "exec": [
            "exec",
            "scripts.walkTo",
            "shipsHold"
          ]
        },
        {
          "action": [
            "walk",
            "hold"
          ],
          "exec": [
            "exec",
            "scripts.walkTo",
            "shipsHold"
          ]
        },
        {
          "action": [
            "swim",
            "hold"
          ],
          "exec": [
            "exec",
            "scripts.walkTo",
            "shipsHold"
          ]
        },
        {
          "action": [
            "walk",
            "hole"
          ],
          "exec": [
            "exec",
            "scripts.walkTo",
            "shipsHold"
          ]
        },
        {
          "action": [
            "swim",
            "hole"
          ],
          "exec": [
            "exec",
            "scripts.walkTo",
            "shipsHold"
          ]
        },
        {
          "action": [
            "exam",
            "shipwreck"
          ],
          "exec": [
            "say",
            "This ^ship^ must have been sunk a long time ago. It's rotting broken wood is covered in thousands of barnacles and colourful corals. A dark tear in the ships belly reveals what must be the ^ships hold^."
          ]
        },
        {
          "action": [
            "exam",
            "hold"
          ],
          "exec": [
            "say",
            "Schools of fish are swimming in and out of the dark tear in the ships belly."
          ]
        },
        {
          "action": [
            "exam",
            "fish"
          ],
          "exec": [
            "say",
            "Schools of fish are swimming in and out of the dark tear in the ships belly."
          ]
        }
      ],
      "walk": {
        "s": "deepOcean",
        "n": "deepOcean2"
      },
      "desc": "^The Shipwreck^||You have swum into the ominous presence of a towering ^shipwreck^. Schools of ^fish^ are a are swimming in and out of the shadows of its broken deck.||You can swim ^south^ towards land, continue ^north^ out to sea, or enter the ^hole^ in the dark ^shipwreck^."
    },
    "bog6": {
      "name": "Bog",
      "x": -130,
      "y": -25,
      "birds": true,
      "walk": {
        "exit": "bog1",
        "s": "bog2",
        "e": "bog7",
        "w": "bog2",
        "n": "bog2"
      },
      "desc": "^The Misty Bog^||The wet mist swirls heavily around you. It's hard to know which way is which!||You can travel ^north^, ^east^, ^south^ or ^west^."
    },
    "bog7": {
      "name": "Bog",
      "x": -130,
      "y": -25,
      "birds": true,
      "click": "Bog Beast",
      "walk": {
        "exit": "bog1",
        "s": "bog1",
        "e": "bog1",
        "w": "bog1",
        "n": "bog1"
      },
      "desc": "^The Centre of the Misty Bog^||You have broken out of the mist at to what must be the centre of the bog - But as you do so you are pounded by the earth shattering screech of a giant feathered ^bog beast^!||To ^exit^ the bog you can run in any direction!"
    },
    "bog4": {
      "name": "Bog",
      "x": -130,
      "y": -25,
      "birds": true,
      "walk": {
        "exit": "bog1",
        "s": "bog2",
        "e": "bog1",
        "w": "bog5",
        "n": "bog2"
      },
      "desc": "^The Misty Bog^||The wet mist swirls heavily around you. It's hard to know which way is which!||You can travel ^north^, ^east^, ^south^ or ^west^."
    },
    "castleCorridor": {
      "afterEnter": [
        "goal",
        "castle"
      ],
      "name": "Entrance",
      "x": -1,
      "y": 42,
      "actions": [
        {
          "action": [
            "exam",
            "armour"
          ],
          "exec": [
            "if",
            [
              "isTrig",
              "foundShield"
            ],
            [
              "say",
              "Wow, it's gleaming. It must be really heavy, can't imagine someone even trying to wear all that!"
            ],
            [
              [
                "say",
                "Wow, it's gleaming. It must be really heavy, can't imagine someone even trying to wear all that! The suit of armour is holding a large ^shield^."
              ],
              [
                "setObjectAttr",
                "shield",
                "room",
                "@room"
              ],
              [
                "trig",
                "foundShield"
              ]
            ]
          ]
        },
        {
          "action": [
            "exam",
            "chandeliers"
          ],
          "exec": [
            "say",
            "They're amazing, but far too high to reach."
          ]
        },
        {
          "action": [
            "exam",
            "chandelier"
          ],
          "exec": [
            "say",
            "They're amazing, but far too high to reach."
          ]
        },
        {
          "action": [
            "take",
            "chandelier"
          ],
          "exec": [
            "say",
            "They're far too high to reach."
          ]
        },
        {
          "action": [
            "take",
            "armour"
          ],
          "exec": [
            "if",
            [
              "isTrig",
              "foundShield"
            ],
            [
              "say",
              "I'd like to, but they are too heavy for me to carry!"
            ],
            [
              [
                "say",
                "I'd like to, but they are too heavy for me to carry! However, perhaps I could try the ^shield^ the armour is holding?"
              ],
              [
                "setObjectAttr",
                "shield",
                "room",
                "@room"
              ],
              [
                "trig",
                "foundShield"
              ]
            ]
          ]
        }
      ],
      "walk": {
        "exit": "castleGates",
        "s": "castleGates",
        "e": "castleJewels",
        "w": "castleStair",
        "n": "castleThrone"
      },
      "crown": true,
      "desc": "^The Entrance Hall of Castle^||You are in the main entrance hall of the most magnificent castle. A full ^suit of armour^ stands against one wall reflecting the light of a dozen burning chandeliers. There are many grand doors leading out of the room with a fancy sign above each.||The ^Throne Room^ is to your north, the ^Crown Jewels^ east, The ^Stairwell^ west, and the ^castle gates^ are south."
    },
    "castleJewels": {
      "guard": {
        "talk": {
          "getBack": [
            "|You climb back over the fence...",
            {
              "q": "These Jewels are amazing!",
              "a": "\"Yes they are!\""
            },
            {
              "q": "These Jewels must be priceless?",
              "a": "\"What... These ones?\" he points at the ones on display and laughs \"Heck no, these ones are fake... Obviously?\"",
              "exec": [
                "trig",
                "isFake"
              ]
            },
            {
              "q": "Where are the real Jewels?",
              "a": "The guards looks surprised, \"The real ones? Now why would I be telling you something like that!",
              "cond": [
                "isTrig",
                "isFake"
              ]
            },
            {
              "next": "done",
              "q": "Well, Bye then.",
              "a": "The guard grunts something, turns and leaves."
            }
          ],
          "init": "welcome",
          "welcome": [
            "|\"Excuse me!\" barks a guard from the doorway \"What do you think you are doing?\". He doesn't look very happy with you.",
            {
              "next": "getBack",
              "q": "I was just checking out these Jewels!",
              "a": "\"I see\" he relaxes a little, \"Well, if you would be so kind as to stay behind the chain I would appreciate it?\""
            },
            {
              "next": "getBack",
              "q": "Nothing...?",
              "a": "\"Is that right!?\" retorts the guard, \"Well you are not permitted to do anything, 'or' nothing on that side of the chain! Please get back behind it... NOW!\" he shouts."
            },
            {
              "next": "getBack",
              "q": "I'm sorry, is there a problem?",
              "a": "\"Well yes there is!\" huffs the guard, \"You are not permitted to pass that chain fence!\"\""
            },
            {
              "next": "getBack",
              "q": "This was a spot security check, well done!",
              "a": "The guard looks at you for a moment then replies \"A spot check? Of our castle security? We haven't had one of those before? But... well... excellent, thank you!\""
            }
          ]
        }
      },
      "name": "Jewels",
      "x": 14,
      "y": 38,
      "scripts": {
        "takeJewels": [
          [
            "say",
            "You carefully step over the chain link fence..."
          ],
          [
            "anyKey"
          ],
          [
            "talk",
            "rooms.castleJewels.guard.talk"
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "exam",
            "jewels"
          ],
          "exec": [
            "say",
            "There's a large golden ^crown^, a mighty ^scepter^ and a golden ^necklace^."
          ]
        },
        {
          "action": [
            "exam",
            "fence"
          ],
          "exec": [
            "say",
            "I expected more security than this!"
          ]
        },
        {
          "action": [
            "exam",
            "chain"
          ],
          "exec": [
            "say",
            "I expected more security than this!"
          ]
        },
        {
          "action": [
            "exam",
            "crown"
          ],
          "exec": [
            "say",
            "The crown is large and made of gold. Its rim is inlaid with many shining red gems!"
          ]
        },
        {
          "action": [
            "exam",
            "scepter"
          ],
          "exec": [
            "say",
            "It's like a huge golden Egg on a stick. Goodness knows what Kings use these for!"
          ]
        },
        {
          "action": [
            "exam",
            "necklace"
          ],
          "exec": [
            "say",
            "The necklace is made of heavy golden chain and must weigh a ton!"
          ]
        },
        {
          "action": [
            "take",
            "jewels"
          ],
          "exec": [
            "exec",
            "rooms.castleJewels.scripts.takeJewels"
          ]
        },
        {
          "action": [
            "take",
            "crown"
          ],
          "exec": [
            "exec",
            "rooms.castleJewels.scripts.takeJewels"
          ]
        },
        {
          "action": [
            "take",
            "scepter"
          ],
          "exec": [
            "exec",
            "rooms.castleJewels.scripts.takeJewels"
          ]
        },
        {
          "action": [
            "take",
            "necklace"
          ],
          "exec": [
            "exec",
            "rooms.castleJewels.scripts.takeJewels"
          ]
        }
      ],
      "walk": {
        "exit": "castleCorridor",
        "w": "castleCorridor"
      },
      "crown": true,
      "desc": "^Crown Jewels Exhibition Room^||You have entered the display room of the Crown Jewels. The ^jewels^ sit on small podiums behind a thin ^chain link fence^. There doesn't appear to be any guards around.||The ^exit^ is to your west."
    },
    "bog5": {
      "name": "Bog",
      "x": -130,
      "y": -25,
      "birds": true,
      "walk": {
        "exit": "bog1",
        "s": "bog2",
        "e": "bog1",
        "w": "bog2",
        "n": "bog6"
      },
      "desc": "^The Misty Bog^||The wet mist swirls heavily around you. It's hard to know which way is which!||You can travel ^north^, ^east^, ^south^ or ^west^."
    },
    "vilGarden": {
      "name": "garden",
      "x": 34,
      "y": 23,
      "birds": true,
      "click": "Village Garden",
      "actions": [
        {
          "action": [
            "exam",
            "tree"
          ],
          "exec": [
            "if",
            [
              "isTrig",
              "pokeOutTree"
            ],
            [
              "say",
              "It's an absolutely huge oak tree... There's no Pokemon's hanging around in its branches any longer though."
            ],
            [
              "say",
              "You gaze up at the branches of the tree and are surprised to see a giant ^Wild Pidgey^ perched on one of its huge branches!"
            ]
          ]
        },
        {
          "action": [
            "exam",
            "pidgey"
          ],
          "cond": [
            "isNotTrig",
            "pokeOutTree"
          ],
          "exec": [
            "say",
            "It's sitting high up in the branches of the huge ^Oak Tree^ pruning its feathers."
          ]
        },
        {
          "action": [
            "take",
            "pidgey"
          ],
          "cond": [
            "isNotTrig",
            "pokeOutTree"
          ],
          "exec": [
            "say",
            "It's sitting high up in the branches of the huge ^Oak Tree^, you can't reach it!"
          ]
        },
        {
          "action": [
            "walk",
            "tree"
          ],
          "exec": [
            "say",
            "You are standing right next to it, and there's no easy way to climb its wide trunk."
          ]
        },
        {
          "action": [
            "climb",
            "tree"
          ],
          "exec": [
            "say",
            "Now that wold be fun... except... really, it's not! You keep trying to climb the tree, but the trunk is so wide that you can't find anything to get a grip on."
          ]
        },
        {
          "action": [
            "u"
          ],
          "exec": [
            "say",
            "Now that wold be fun... except... really, it's not! You keep trying to climb the tree, but the trunk is so wide that you can't find anything to get a grip on."
          ]
        },
        {
          "action": [
            "exam",
            "stile"
          ],
          "exec": [
            "say",
            "It lies a little way off to the ^east^ of the gardens."
          ]
        }
      ],
      "walk": {
        "e": "stile",
        "w": "vilPath"
      },
      "desc": "^The Village Gardens^||You find yourself walking through the long grass of the village gardens. An ancient ^Oak Tree^ is growing right in the middle, and a white fence extends around the perimeter of the gardens.||To your east is a ^stile^, and the ^royal pathway^ lies to your west."
    },
    "bog2": {
      "name": "Bog",
      "x": -130,
      "y": -25,
      "birds": true,
      "walk": {
        "exit": "bog1",
        "s": "bog3",
        "e": "bog1",
        "w": "bog2",
        "n": "bog2"
      },
      "desc": "^The Misty Bog^||The wet mist swirls heavily around you. It's hard to know which way is which!||You can travel ^north^, ^east^, ^south^ or ^west^."
    },
    "bog3": {
      "name": "Bog",
      "x": -130,
      "y": -25,
      "birds": true,
      "walk": {
        "exit": "bog1",
        "s": "bog2",
        "e": "bog1",
        "w": "bog4",
        "n": "bog2"
      },
      "desc": "^The Misty Bog^||The wet mist swirls heavily around you. It's hard to know which way is which!||You can travel ^north^, ^east^, ^south^ or ^west^."
    },
    "witchBackRoom": {
      "afterEnter": [
        "timeout",
        1,
        [
          "if",
          [
            "equals",
            "@room",
            "witchBackRoom"
          ],
          [
            [
              "say",
              "|You can hear someone busying around in the other room! You better be quiet!!!"
            ],
            [
              "timeout",
              2,
              [
                "if",
                [
                  "equals",
                  "@room",
                  "witchBackRoom"
                ],
                [
                  [
                    "say",
                    "|Suddenly the sounds next door stop... Did someone hear you?"
                  ],
                  [
                    "timeout",
                    1,
                    [
                      "if",
                      [
                        "equals",
                        "@room",
                        "witchBackRoom"
                      ],
                      [
                        [
                          "say",
                          "|\"Hello? Is someone there...?\" comes a croaky voice from the other room..."
                        ],
                        [
                          "say",
                          "|You don't wait to be found out and jump straight back out the window!"
                        ],
                        [
                          "anyKey"
                        ],
                        [
                          "exec",
                          "scripts.walkTo",
                          "forest3"
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ],
      "name": "Cottage",
      "x": -80,
      "y": -32,
      "actions": [
        {
          "action": [
            "exam",
            "cupboard"
          ],
          "exec": [
            "if",
            [
              "isTrig",
              "hatIsOut"
            ],
            [
              "say",
              "Most of the cupboards are locked except for one that is wide open, but empty. A tattered ^magazine^ is hanging on a string from the open cupboards door."
            ],
            [
              [
                "say",
                "All the cupboards are locked up tight. A tattered ^magazine^ is hanging on a string from one of the doors."
              ],
              [
                "setObjectAttr",
                "magazine",
                "room",
                "@room"
              ]
            ]
          ]
        },
        {
          "action": [
            "exam",
            "bowl"
          ],
          "exec": [
            "say",
            "The ^cat bowl^ is empty, licked clean apparently!"
          ]
        },
        {
          "action": [
            "take",
            "bowl"
          ],
          "exec": [
            "say",
            "You give it a pull but it's stuck fast to the floor. Either by some strange magic spell... or more likely super glue."
          ]
        },
        {
          "action": [
            "use",
            "window"
          ],
          "exec": [
            [
              "set",
              "@room",
              "forest3"
            ],
            [
              "exec",
              "scripts.look"
            ]
          ]
        },
        {
          "action": [
            "walk",
            "window"
          ],
          "exec": [
            [
              "set",
              "@room",
              "forest3"
            ],
            [
              "exec",
              "scripts.look"
            ]
          ]
        },
        {
          "action": [
            "climb",
            "window"
          ],
          "exec": [
            [
              "set",
              "@room",
              "forest3"
            ],
            [
              "exec",
              "scripts.look"
            ]
          ]
        },
        {
          "action": [
            "walk",
            "forest"
          ],
          "exec": [
            [
              "set",
              "@room",
              "forest3"
            ],
            [
              "exec",
              "scripts.look"
            ]
          ]
        }
      ],
      "walk": {
        "exit": "forest3"
      },
      "desc": "^The Dark Old Cottage (Backroom)^||You have entered the backroom of the dark cottage. There are a number of ^cupboards^ around the walls and an open ^window^ back to the ^forest^. An empty ^cat bowl^ sits on the floor."
    },
    "cottage": {
      "name": "cottage",
      "x": 80,
      "y": 44,
      "click": "Cottage",
      "walk": {
        "exit": "vegPatch",
        "s": "vegPatch"
      },
      "desc": "^I know an Old Lady^||Since the door is open you walk in to the ^old cottage^. Gosh, it's really small in here, everything in one room.||The ^exit^ back to the 'vegetable patch' is to your south."
    },
    "bog1": {
      "name": "Bog",
      "x": -103,
      "y": -25,
      "birds": true,
      "click": "The Bog",
      "actions": [
        {
          "action": [
            "exam",
            "mist"
          ],
          "exec": [
            "say",
            "The mist is hugging the floor of the forest between the tree trunks and swirling over the little stream - Not sure I like it!"
          ]
        }
      ],
      "walk": {
        "e": "forest3",
        "w": "bog2"
      },
      "desc": "^The Misty Bog Begins^||You are standing at the beginnings of a ^large bog^. The earth is wet and ^mist^ is rolling thickly between the trees trunks.||The ^bog^ extends to your west. To your east lies the ^forest^."
    },
    "caveDragonPre": {
      "name": "Tunnel",
      "x": 7,
      "y": -105,
      "scripts": {
        "examGold": [
          [
            "say",
            "You approach the golden mound to take a closer look. The mound is formed from a great many semi-melted golden coins and trinkets. The centre is hollowed out and resembles a giant... nest! Indeed, as if to confirm the revelation, there at the centre is a single, almost prehistoric looking ^egg^!"
          ],
          [
            "trig",
            "foundNest"
          ],
          [
            "setObjectAttr",
            "egg1",
            "room",
            "@room"
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "exam",
            "gold"
          ],
          "exec": [
            "exec",
            "rooms.caveDragonPre.scripts.examGold"
          ]
        },
        {
          "action": [
            "exam",
            "mound"
          ],
          "exec": [
            "exec",
            "rooms.caveDragonPre.scripts.examGold"
          ]
        },
        {
          "action": [
            "take",
            "gold"
          ],
          "exec": [
            "exec",
            "rooms.caveDragonPre.scripts.examGold"
          ]
        },
        {
          "action": [
            "exam",
            "smoke"
          ],
          "exec": [
            "say",
            "The smoke is very heavy now and is circling around the roof of the cave."
          ]
        }
      ],
      "walk": {
        "exit": "cavern",
        "s": "cavern"
      },
      "desc": "^The Mountain Cave^||It's so dark now, you feel the shadows are playing tricks on your mind, yet the warmth back here in the cave surprises you. The ceiling of the cave swirls with a heavy ^smoke^, and at its centre is a mound of ^gold^?||The ^cave^ only leads back to your south."
    },
    "vet": {
      "name": "Vets",
      "x": 24,
      "y": -3,
      "click": "Veterinary Clinic",
      "actions": [
        {
          "action": [
            "exam",
            "counter"
          ],
          "exec": [
            "say",
            "It's a wooden counter with pictures of animal stuck all over it (with little bandages on various parts of their hairy or feathered bodies)."
          ]
        }
      ],
      "walk": {
        "exit": "highStreet",
        "w": "highStreet"
      },
      "desc": "^The Veterinary Clinic^||If I had a pet... this is where I'd bring 'em! The ^vet^ herself is standing behind a shop counter near the entrance smiling.||The ^exit^ is to your west."
    },
    "shipsHold": {
      "move": "Swim",
      "name": "hold",
      "x": 19,
      "y": 59,
      "scripts": {
        "unlock": [
          "if",
          [
            "isPresent",
            "cellKey"
          ],
          [
            [
              "say",
              "The key fits slots into the large key hole on in the door of the ^cell^, but try as you might you can't turn it. It looks like the lock is very corroded from years underwater... I don't think it will ever open again!"
            ]
          ],
          [
            "say",
            "You don't have a key that fits the lock on the ^cell^ door."
          ]
        ],
        "examSkeleton": [
          "if",
          [
            "equals",
            [
              "getObjectAttr",
              "cellKey",
              "room"
            ],
            "arm"
          ],
          [
            [
              "say",
              "The ^skeleton^ is slumped against the wall with his ^bony arm^ outstretched between the bars of his cell, almost like he was reaching out towards... Oh gosh look, he's reaching towards an ^iron key^ hanging on the wall not far from his cell! It was camouflaged by all the corrosion and detritus."
            ],
            [
              "setObjectAttr",
              "cellKey",
              "room",
              "@room"
            ]
          ],
          [
            "say",
            "The ^skeleton^ is slumped against the wall with his ^bony arm^ outstretched between the bars of his cell. "
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "take",
            "arm"
          ],
          "exec": [
            "say",
            "That could be 'handy'... But surprisingly the arm is still well attached to the rest of the skeleton."
          ]
        },
        {
          "action": [
            "pull",
            "arm"
          ],
          "exec": [
            "say",
            "Surprisingly the arm is still well attached to the rest of the skeleton."
          ]
        },
        {
          "action": [
            "take",
            "skeleton"
          ],
          "exec": [
            "say",
            "I don't want to carry around an old skeleton."
          ]
        },
        {
          "action": [
            "talk",
            "skeleton"
          ],
          "exec": [
            "say",
            "\"Papyrus... is that you...?\" - silence... apparently not."
          ]
        },
        {
          "action": [
            "exam",
            "arm"
          ],
          "exec": [
            "exec",
            "rooms.shipsHold.scripts.examSkeleton"
          ]
        },
        {
          "action": [
            "exam",
            "skeleton"
          ],
          "exec": [
            "exec",
            "rooms.shipsHold.scripts.examSkeleton"
          ]
        },
        {
          "action": [
            "exam",
            "cell"
          ],
          "exec": [
            "say",
            "The cell is small, but the ^iron bars^ are thick and black. The ^door^ is locked shut, and inside the cell an unfortunate ^skeleton^ is lying against the back wall."
          ]
        },
        {
          "action": [
            "exam",
            "cannon"
          ],
          "exec": [
            "say",
            "The cannons are jet black and knobbly to the touch, they each weigh a tonne!"
          ]
        },
        {
          "action": [
            "take",
            "cannon"
          ],
          "exec": [
            "say",
            "They're way too heavy to carry."
          ]
        },
        {
          "action": [
            "push",
            "cannon"
          ],
          "exec": [
            "say",
            "I can't even move them an inch!"
          ]
        },
        {
          "action": [
            "walk",
            "hole"
          ],
          "exec": [
            "exec",
            "scripts.walkTo",
            "shipwreck"
          ]
        },
        {
          "action": [
            "swim",
            "hole"
          ],
          "exec": [
            "exec",
            "scripts.walkTo",
            "shipwreck"
          ]
        },
        {
          "action": [
            "use",
            "key"
          ],
          "exec": [
            "exec",
            "rooms.shipsHold.scripts.unlock"
          ]
        },
        {
          "action": [
            "unlock"
          ],
          "exec": [
            "exec",
            "rooms.shipsHold.scripts.unlock"
          ]
        },
        {
          "action": [
            "open",
            "cell"
          ],
          "exec": [
            "exec",
            "rooms.shipsHold.scripts.unlock"
          ]
        },
        {
          "action": [
            "push",
            "cell"
          ],
          "exec": [
            "say",
            "The door of the cell is locked tightly shut!"
          ]
        }
      ],
      "walk": {
        "exit": "shipwreck"
      },
      "desc": "^The Ships Hold^||Yep, it's very dark in here, and quiet, except for the creak of ancient wood. Aligned up the inside of the ship in rows are heavy black ^cannons^, and at the far end what looks like a ^holding cell^ with black ^iron bars^.||The only ^exit^ is back out through the ^hole^ in the ship."
    },
    "stile": {
      "name": "Stile",
      "x": 66,
      "y": 27,
      "birds": true,
      "actions": [
        {
          "action": [
            "exam",
            "stile"
          ],
          "exec": [
            "say",
            "The stile is a simple step made of aging wood nailed to the white fence. I can use that to hop over to the fence in to the vegetable patch beyond."
          ]
        }
      ],
      "walk": {
        "e": "vegPatch",
        "w": "vilGarden"
      },
      "desc": "^The Stile^||You are standing next to an old wooden stile that separates the ^village gardens^ from a private ^vegetable patch^.||The ^vegetable patch^ is to your east, and the ^village gardens^ sprawl out to your west."
    },
    "shopDwarf": {
      "name": "Warbeard's",
      "x": 41,
      "y": -29,
      "scripts": {
        "goBackRoom": [
          "if",
          [
            "isTrig",
            "dwarfBackRoom"
          ],
          [
            [
              "say",
              "You walk through the curtain"
            ],
            [
              "wait",
              0.7
            ],
            [
              "set",
              "@room",
              "backroomDwarf"
            ],
            [
              "exec",
              "scripts.look"
            ]
          ],
          [
            "say",
            "\"Excuse me\" grunts Warbeard the ^dwarf^, \"You are not permitted back there.\"."
          ]
        ]
      },
      "click": "Warbeard's",
      "actions": [
        {
          "action": [
            "exam",
            "poster"
          ],
          "exec": [
            [
              "say",
              "All the posters appear to be of the same ^dragon^. Well, all except that one with a ^Pokemon^ on it."
            ],
            [
              "trig",
              "dwarfPoster"
            ]
          ]
        },
        {
          "action": [
            "exam",
            "pokemon"
          ],
          "exec": [
            "say",
            "It's a poster advertising some kind of pokemon training club?"
          ]
        },
        {
          "action": [
            "exam",
            "door"
          ],
          "exec": [
            "say",
            "Looks like some kind of storeroom back there."
          ]
        },
        {
          "action": [
            "exam",
            "backroom"
          ],
          "exec": [
            "say",
            "Looks like some kind of storeroom back there."
          ]
        },
        {
          "action": [
            "exam",
            "curtain"
          ],
          "exec": [
            "say",
            "The curtain is made of heavy semi-transparent strips of plastic. It looks like there might be some kind of storeroom back there."
          ]
        },
        {
          "action": [
            "e"
          ],
          "exec": [
            "exec",
            "rooms.shopDwarf.scripts.goBackRoom"
          ]
        },
        {
          "action": [
            "walk",
            "backroom"
          ],
          "exec": [
            "exec",
            "rooms.shopDwarf.scripts.goBackRoom"
          ]
        },
        {
          "action": [
            "walk",
            "curtain"
          ],
          "exec": [
            "exec",
            "rooms.shopDwarf.scripts.goBackRoom"
          ]
        }
      ],
      "walk": {
        "exit": "square",
        "e": "backroomDwarf",
        "w": "square"
      },
      "desc": "^Warbeard's Shop^||It's rather gloomy inside the shop, only brightened slightly by the many ^posters^ filling the walls. A bearded ^dwarf^ is seated at an old desk, behind whom you note a door to a ^backroom^ hung with the strips of a heavy plastic ^curtain^.||To your east is the ^backroom^, and west is the ^exit^ to the ^village square^."
    },
    "forest3": {
      "afterEnter": [
        "if",
        [
          "isNotTrig",
          "catArrive"
        ],
        [
          [
            "anyKey"
          ],
          [
            "trig",
            "catArrive"
          ],
          [
            "say",
            "|The cottage's back ^window^ squeaks open behind you..."
          ],
          [
            "anyKey"
          ],
          [
            "say",
            "|You turn to see a ^black cat^ drop silently to the ground. It trots primly past you (curling around your feet as it passes) and sits by the stream watching the tiny fish."
          ],
          [
            "setObjectAttr",
            "cat",
            "room",
            "@room"
          ]
        ]
      ],
      "name": "Forest",
      "x": -88,
      "y": -30,
      "birds": true,
      "scripts": {
        "walkBackRoom": [
          "if",
          [
            "isTrig",
            "witchGone"
          ],
          [
            "say",
            "I can see the witch through the window - she doesn't look in a good mood... I'd rather not disturb her!"
          ],
          [
            "exec",
            "scripts.walkTo",
            "witchBackRoom",
            "You climb through the back window and into the cottage."
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "exam",
            "cottage"
          ],
          "exec": [
            "say",
            "The back of the cottage looks strangely more robust than the front. The wooden beams look newer and not so twisted. There is a single dark ^window^ in the centre of the back wall."
          ]
        },
        {
          "action": [
            "walk",
            "cottage"
          ],
          "exec": [
            "say",
            "The back of the cottage has no door, but there is reasonably sized ^window^."
          ]
        },
        {
          "action": [
            "exam",
            "window"
          ],
          "exec": [
            "say",
            "The window is off the catch, presumably to allow that ^cat^ to come and go. Although inside the cottage is dark, you can see no one is moving about in the back room."
          ]
        },
        {
          "action": [
            "use",
            "window"
          ],
          "exec": [
            "exec",
            "rooms.forest3.scripts.walkBackRoom"
          ]
        },
        {
          "action": [
            "climb",
            "window"
          ],
          "exec": [
            "exec",
            "rooms.forest3.scripts.walkBackRoom"
          ]
        },
        {
          "action": [
            "walk",
            "window"
          ],
          "exec": [
            "exec",
            "rooms.forest3.scripts.walkBackRoom"
          ]
        },
        {
          "action": [
            "break",
            "window"
          ],
          "exec": [
            "say",
            "Really, there is no need, it's already open! I could just climb through."
          ]
        },
        {
          "action": [
            "exam",
            "mist"
          ],
          "exec": [
            "say",
            "The mist is hugging the floor of the forest between the tree trunks and swirling over the little stream - Not sure I like it!"
          ]
        },
        {
          "action": [
            "exam",
            "fishes"
          ],
          "exec": [
            "say",
            "The stream is full of tiny tiddler ^fishes^ that that ^cat^ likes to play with... However they're too small for him (or me) to catch."
          ]
        },
        {
          "action": [
            "exam",
            "fish"
          ],
          "exec": [
            "say",
            "The stream is full of tiny tiddler ^fishes^ that that ^cat^ likes to play with... However they're too small for him (or me) to catch."
          ]
        }
      ],
      "walk": {
        "e": "forest2",
        "w": "bog1"
      },
      "desc": "^The Forest Stream^||You are now at the rear of the old ^cottage^ which has a single dark ^window^. Trees overhang a bubbling ^stream^ that cuts through the otherwise silent forest, and a simple ^swing^ has been hung from one of them.||The cottage front is back to your ^east^, and a spooky ^mist^ is looming to your ^west^."
    },
    "forest2": {
      "name": "Forest",
      "x": -75,
      "y": -32,
      "birds": true,
      "click": "Creepy Cottage",
      "actions": [
        {
          "action": [
            "exam",
            "trees"
          ],
          "exec": [
            "say",
            "They're bark is dark and damp to the touch."
          ]
        },
        {
          "action": [
            "exam",
            "canopy"
          ],
          "exec": [
            "say",
            "High above your head the branches of the trees meet and thousands of leaves mingle to block out most of the light."
          ]
        },
        {
          "action": [
            "walk",
            "canopy"
          ],
          "exec": [
            "exec",
            "scripts.climbTree"
          ]
        },
        {
          "action": [
            "walk",
            "tree"
          ],
          "exec": [
            "exec",
            "scripts.climbTree"
          ]
        },
        {
          "action": [
            "u"
          ],
          "exec": [
            "exec",
            "scripts.climbTree"
          ]
        }
      ],
      "walk": {
        "w": "forest3",
        "n": "forest"
      },
      "desc": "^The Creepy Cottage^||You are deep in the dark forest. The trees here seem more twisted and the branches resemble elongated fingers. A ^cottage^ has been built here, but it looks tired and as old as the forest itself.||The forest continues to your ^north^ and ^west^."
    },
    "castleWall": {
      "name": "track",
      "x": 19,
      "y": 31,
      "actions": [
        {
          "action": [
            "exam",
            "coast"
          ],
          "exec": [
            "say",
            "You can see the sea from here, though still some way away. You see the sun glistening off the waves and the golden hue of the sand."
          ]
        },
        {
          "action": [
            "exam",
            "wall"
          ],
          "exec": [
            "say",
            "The ^castle walls^ is made of huge, thick stones all cemented together so many centuries ago. It looks pretty impenetrable, guess that would be a good idea for any village with a neighbouring dragon!"
          ]
        },
        {
          "action": [
            "exam",
            "gates"
          ],
          "exec": [
            "say",
            "The ^castle gates^ are back to your west."
          ]
        }
      ],
      "walk": {
        "w": "castleGates",
        "n": "beach"
      },
      "desc": "^Path around Castle Wall^||You are walking on a thin dusty track that skirts the ^castle wall^.||To your north lies the ^Coast^, to your west the ^Castle Gates^."
    },
    "square": {
      "talkFish": {
        "init": "welcome",
        "welcome": [
          "You crouch over the pool",
          {
            "q": "Hello little fishies!",
            "a": "The fish pay you no attention."
          },
          {
            "q": "Come here little fishy?",
            "a": "The fish somehow sensing your intent appear to actually be moving even further out of your reach!"
          },
          {
            "q": "Could you fetch me that ring?",
            "a": "One of the Piranha dips down to where the ^ring^ is nestled and gives it a nibble with it's teeth... then grinning up at you turns its back and swims off!",
            "cond": [
              "isNotTrig",
              "gotRing"
            ]
          },
          {
            "q": "Could you fetch me those coins?",
            "a": "The fish do not seem to understand what you want."
          },
          {
            "next": "done",
            "q": "Bye fish",
            "a": "These ^fish^ don't appreciate you anyway!"
          }
        ]
      },
      "afterEnter": [
        [
          "exec",
          "objects.cat.scripts.fishTick"
        ],
        [
          "goal",
          "village"
        ]
      ],
      "name": "Square",
      "x": 3,
      "y": -24,
      "birds": true,
      "scripts": {
        "dropCoinInPool": [
          "say",
          "A lot of people have done the same... but you know, I think I might need to keep hold of these coins!"
        ]
      },
      "click": "Village Square",
      "actions": [
        {
          "action": [
            "exam",
            "bench"
          ],
          "exec": [
            "say",
            "These are quality wooden benches, made with kiln dried premium teak by a someone by the name Jones... It says so on the little metal tag attached to each one. Shame about all that bird muck."
          ]
        },
        {
          "action": [
            "sit",
            "bench"
          ],
          "exec": [
            "say",
            "No thanks... These may be nice park benches, but too many birdies have been there before me."
          ]
        },
        {
          "action": [
            "use",
            "bench"
          ],
          "exec": [
            "say",
            "No thanks... These may be nice park benches, but too many birdies have been there before me."
          ]
        },
        {
          "action": [
            "sleep",
            "bench"
          ],
          "exec": [
            "say",
            "No thanks... These may be nice park benches, but too many birdies have been there before me."
          ]
        },
        {
          "action": [
            "take",
            "bench"
          ],
          "exec": [
            "say",
            "I can barely lift up one end! This is solid wood we're talking about."
          ]
        },
        {
          "action": [
            "eat",
            "bench"
          ],
          "exec": [
            "say",
            "I don't know about you, but park benches just don't agree with me."
          ]
        },
        {
          "action": [
            "break",
            "bench"
          ],
          "exec": [
            "say",
            "Ouch! They are made of really tough wood :("
          ]
        },
        {
          "action": [
            "kick",
            "bench"
          ],
          "exec": [
            "say",
            "Ouch! They are made of really tough wood :("
          ]
        },
        {
          "action": [
            "exam",
            "pool"
          ],
          "exec": [
            "say",
            "So pretty - The water is clean and swirling gently clockwise. It appears to contain... Gosh are they ^Piranha^ fish? At the bottom of the pool you can see glinting ^coins^, and... is that a ^ring^?"
          ]
        },
        {
          "action": [
            "take",
            "fish"
          ],
          "exec": [
            "say",
            "You try to grab one, but they are too fast, ouch... mouthy too!"
          ]
        },
        {
          "action": [
            "exam",
            "fish"
          ],
          "exec": [
            "say",
            "Hmm... nasty, yet exotic looking fishes those ^piranha^!"
          ]
        },
        {
          "action": [
            "talk",
            "fish"
          ],
          "exec": [
            "talk",
            "rooms.square.talkFish"
          ]
        },
        {
          "action": [
            "jump",
            "pool"
          ],
          "exec": [
            "say",
            "Not a chance! I don't want to be fish food!"
          ]
        },
        {
          "action": [
            "climb",
            "pool"
          ],
          "exec": [
            "say",
            "Not a chance! I don't want to be fish food!"
          ]
        },
        {
          "action": [
            "walk",
            "pool"
          ],
          "exec": [
            "say",
            "Not a chance! I don't want to be fish food!"
          ]
        },
        {
          "action": [
            "swim"
          ],
          "exec": [
            "say",
            "Not a chance! I don't want to be fish food!"
          ]
        },
        {
          "action": [
            "drink"
          ],
          "exec": [
            "say",
            "Would 'you' drink from a ^piranha^ infested pool?"
          ]
        },
        {
          "action": [
            "eat",
            "fish"
          ],
          "exec": [
            "say",
            "You try to grab one, but they are too fast, ouch... mouthy too!"
          ]
        },
        {
          "action": [
            "exam",
            "coin"
          ],
          "exec": [
            "say",
            "I expect people make a wish as they chuck them in... There's so many - I guess those ^piranhas^ guard them from any opportunistic thieves! :)"
          ]
        },
        {
          "action": [
            "exam",
            "ring"
          ],
          "exec": [
            "say",
            "Looks like someone dropped a little more than they intended."
          ]
        },
        {
          "action": [
            "take",
            "ring"
          ],
          "exec": [
            "say",
            "Are you kidding me! I'm not reaching my arm that deep into the water - Those piranha would gobble up my arm!"
          ]
        },
        {
          "action": [
            "take",
            "coin"
          ],
          "exec": [
            "say",
            "Are you kidding me! I'm not reaching my arm that deep into the water - Those piranha would gobble up my arm!"
          ]
        },
        {
          "action": [
            "exam",
            "castle"
          ],
          "exec": [
            "say",
            "Wow, now that is an amazing sight! I'm sure I can get a better look as I move north of here."
          ]
        },
        {
          "action": [
            "exam",
            "shop"
          ],
          "exec": [
            "say",
            "The shop has the wording \"^Warbeard's^\" pasted above the front door."
          ]
        },
        {
          "action": [
            "walk",
            "shop"
          ],
          "exec": [
            [
              "set",
              "@room",
              "shopDwarf"
            ],
            [
              "exec",
              "scripts.look"
            ]
          ]
        },
        {
          "action": [
            "drop",
            "coin"
          ],
          "cond": [
            "isTrig",
            "hasCoin"
          ],
          "exec": [
            "exec",
            "rooms.square.scripts.dropCoinInPool"
          ]
        },
        {
          "action": [
            "throw",
            "coin"
          ],
          "cond": [
            "isTrig",
            "hasCoin"
          ],
          "exec": [
            "exec",
            "rooms.square.scripts.dropCoinInPool"
          ]
        },
        {
          "action": [
            "use",
            "coin"
          ],
          "cond": [
            "isTrig",
            "hasCoin"
          ],
          "exec": [
            "exec",
            "rooms.square.scripts.dropCoinInPool"
          ]
        },
        {
          "action": [
            "cat",
            "pool"
          ],
          "cond": [
            "equals",
            "@room",
            "square"
          ],
          "exec": [
            "exec",
            "objects.cat.scripts.useCat"
          ]
        },
        {
          "action": [
            "cat",
            "fish"
          ],
          "cond": [
            "equals",
            "@room",
            "square"
          ],
          "exec": [
            "exec",
            "objects.cat.scripts.useCat"
          ]
        },
        {
          "action": [
            "fish",
            "cat"
          ],
          "cond": [
            "equals",
            "@room",
            "square"
          ],
          "exec": [
            "exec",
            "objects.cat.scripts.useCat"
          ]
        },
        {
          "action": [
            "pool",
            "cat"
          ],
          "cond": [
            "equals",
            "@room",
            "square"
          ],
          "exec": [
            "exec",
            "objects.cat.scripts.useCat"
          ]
        },
        {
          "action": [
            "bucket",
            "pool"
          ],
          "exec": [
            "exec",
            "objects.bucket.scripts.fillBucket"
          ]
        },
        {
          "action": [
            "pool",
            "bucket"
          ],
          "exec": [
            "exec",
            "objects.bucket.scripts.fillBucket"
          ]
        },
        {
          "action": [
            "fill",
            "bucket"
          ],
          "exec": [
            "exec",
            "objects.bucket.scripts.fillBucket"
          ]
        },
        {
          "action": [
            "bucket",
            "fish"
          ],
          "cond": [
            "isPresent",
            "bucket"
          ],
          "exec": [
            "say",
            "For some reason the ^fish^ just won't swim into your ^bucket^!"
          ]
        },
        {
          "action": [
            "cane",
            "pool"
          ],
          "cond": [
            "isPresent",
            "cane"
          ],
          "exec": [
            "say",
            "You thrust the ^garden cane^ in to the pool, but the ^fish^ are too fast for you."
          ]
        },
        {
          "action": [
            "cane",
            "fish"
          ],
          "cond": [
            "isPresent",
            "cane"
          ],
          "exec": [
            "say",
            "You thrust the ^garden cane^ in to the pool, but the ^fish^ are too fast for you."
          ]
        },
        {
          "action": [
            "cane",
            "coin"
          ],
          "cond": [
            "isPresent",
            "cane"
          ],
          "exec": [
            "say",
            "You are able to push the coins around a bit with the cane, but there's no way you could pick them up with it!"
          ]
        },
        {
          "action": [
            "cane",
            "ring"
          ],
          "cond": [
            "isPresent",
            "cane"
          ],
          "exec": [
            "say",
            "You carefully direct the cane at the hoop of the ring, but you just can't pick it up! If only you had some kind of hook on the end?"
          ]
        },
        {
          "action": [
            "wire",
            "ring"
          ],
          "cond": [
            "isPresent",
            "wire"
          ],
          "exec": [
            "say",
            "Such a good idea... but oh man, it's too short... I'd still get my hands bitten off! If only there was something I could attach the hook to to make it longer?"
          ]
        },
        {
          "action": [
            "wire",
            "fish"
          ],
          "cond": [
            "isPresent",
            "wire"
          ],
          "exec": [
            "say",
            "You jab at the fish with the wire hook but catch nothing."
          ]
        },
        {
          "action": [
            "fork",
            "pool"
          ],
          "cond": [
            "isPresent",
            "fork"
          ],
          "exec": [
            "say",
            "You thrust the ^garden fork^ in to the pool, but the ^fish^ are too fast for you."
          ]
        },
        {
          "action": [
            "fork",
            "fish"
          ],
          "cond": [
            "isPresent",
            "fork"
          ],
          "exec": [
            "say",
            "You thrust the ^garden fork^ in to the pool, but the ^fish^ are too fast for you."
          ]
        },
        {
          "action": [
            "fork",
            "coin"
          ],
          "cond": [
            "isPresent",
            "fork"
          ],
          "exec": [
            "say",
            "The pool is just a bit too deep for you to reach the bottom using the ^garden fork^."
          ]
        },
        {
          "action": [
            "fork",
            "ring"
          ],
          "cond": [
            "and",
            [
              "isPresent",
              "fork"
            ],
            [
              "isNotTrig",
              "gotRing"
            ]
          ],
          "exec": [
            "say",
            "Try as you might, the ^ring^ is just out of reach of your ^garden fork^!"
          ]
        },
        {
          "action": [
            "walk",
            "castle"
          ],
          "exec": [
            "exec",
            "scripts.walkTo",
            "highStreet",
            "You set off north towards the castle..."
          ]
        },
        {
          "action": [
            "exam",
            "gates"
          ],
          "exec": [
            "say",
            "It's made of thick dark timber and going on its charred, black condition, I assume it has been set on fire at least once in the past!"
          ]
        }
      ],
      "walk": {
        "s": "vilEntrance",
        "e": "shopDwarf",
        "w": "meadow",
        "n": "highStreet"
      },
      "desc": "^Village Square^||At the centre of the village square is a pleasant raised ^pool^ surrounded by a four wooden ^benches^.||To your north is the village ^high street^ (and beyond, the spires of a ^castle^), To your east a shop named ^Warbeard's^, To your south is the ^village gate^, and west lies a ^meadow^."
    },
    "deepOcean2": {
      "move": "Swim",
      "name": "ocean",
      "x": 19,
      "y": 59,
      "scripts": {
        "enterCastle": [
          "if",
          [
            "isTrig",
            "amKing"
          ],
          [
            "exec",
            "scripts.walkTo",
            "corralCastle",
            "The ^guard^'s eyes fix on the crown resting on your head, then he taps his spear on the ground twice and moves to the side allowing you to pass."
          ],
          [
            "if",
            [
              "isPresent",
              "merGuard"
            ],
            [
              [
                "say",
                "The ^merman guard^ is still blocking your way."
              ]
            ],
            [
              [
                "setObjectAttr",
                "merGuard",
                "room",
                "@room"
              ],
              [
                "say",
                "As you go to enter the ^castle^ a ^merman guard^ holding a long spear emerges from the entrance blocking your way."
              ]
            ]
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "exam",
            "castle"
          ],
          "exec": [
            "say",
            "You are surprised to see a ^Castle^ under the sea! It appears to be made from many beautifully coloured Corals. The entrance lies to your East."
          ]
        },
        {
          "action": [
            "exam",
            "shipwreck"
          ],
          "exec": [
            "say",
            "The ^shipwreck^ lies back to your south."
          ]
        },
        {
          "action": [
            "exam",
            "sharks"
          ],
          "exec": [
            "say",
            "You don't like the look of those sharks."
          ]
        },
        {
          "action": [
            "exam",
            "shark"
          ],
          "exec": [
            "say",
            "You don't like the look of those sharks."
          ]
        },
        {
          "action": [
            "e"
          ],
          "exec": [
            "exec",
            "rooms.deepOcean2.scripts.enterCastle"
          ]
        }
      ],
      "walk": {
        "s": "shipwreck",
        "e": "corralCastle"
      },
      "desc": "^The Deeper Ocean^||You are now far from land, deep deep under the ocean. Far above in the shimmering light you see the silhouette to two circling ^sharks^.||To your east is a ^Coral Castle^, and the ^shipwreck^ is to your south."
    },
    "fishmongersStall": {
      "name": "Fishmongers",
      "x": -17,
      "y": -3,
      "scripts": {
        "examDisplay": [
          "if",
          [
            "isNotTrig",
            "gotTail"
          ],
          [
            "if",
            [
              "isNotTrig",
              "seenTail"
            ],
            [
              [
                "say",
                "The display case has a large glass front with a thick wooden frame. Behind the glass you can see the large ^tail^ of a fish, it's a good 4 to 5 feet long and quite impressive... Shame it's just the tail! Hold on, did it just wiggle?"
              ],
              [
                "trig",
                "seenTail"
              ]
            ],
            [
              [
                "say",
                "Yep, there it goes again... It definitely moved... That's spooky!"
              ]
            ]
          ],
          [
            "say",
            "The display case is now empty."
          ]
        ]
      },
      "click": "Fishmongers",
      "actions": [
        {
          "action": [
            "exam",
            "plastic"
          ],
          "exec": [
            "say",
            "It's thick and waterproof."
          ]
        },
        {
          "action": [
            "exam",
            "stall"
          ],
          "exec": [
            "say",
            "I guess it gets the job done, but it could do with a little tender loving care ;)"
          ]
        },
        {
          "action": [
            "exam",
            "shop"
          ],
          "exec": [
            "say",
            "I guess it gets the job done, but it could do with a little tender loving care ;)"
          ]
        },
        {
          "action": [
            "exam",
            "counter"
          ],
          "exec": [
            "say",
            "The counter is large, and topped by a tray of melting white ^ice^. There is a small and rather sad looking selection of ^seafood^ on display."
          ]
        },
        {
          "action": [
            "exam",
            "case"
          ],
          "exec": [
            "exec",
            "rooms.fishmongersStall.scripts.examDisplay"
          ]
        },
        {
          "action": [
            "exam",
            "display"
          ],
          "exec": [
            "exec",
            "rooms.fishmongersStall.scripts.examDisplay"
          ]
        },
        {
          "action": [
            "exam",
            "tail"
          ],
          "exec": [
            "exec",
            "rooms.fishmongersStall.scripts.examDisplay"
          ]
        },
        {
          "action": [
            "exam",
            "fish"
          ],
          "strict": true,
          "exec": [
            "say",
            "Well, that one looks like a cod I think, and umm, a couple of herrings. Those over there are prawns. Not a big selection!"
          ]
        },
        {
          "action": [
            "exam",
            "seafood"
          ],
          "exec": [
            "say",
            "Well, that one looks like a cod I think, and umm, a couple of herrings. Those over there are prawns. Not a big selection!"
          ]
        },
        {
          "action": [
            "smell"
          ],
          "strict": true,
          "exec": [
            "say",
            "Oh my gosh... FISH!"
          ]
        },
        {
          "action": [
            "smell",
            "fish"
          ],
          "strict": true,
          "exec": [
            "say",
            "Oh my gosh... FISH!"
          ]
        },
        {
          "action": [
            "smell",
            "seafood"
          ],
          "exec": [
            "say",
            "Oh my gosh... FISH!"
          ]
        },
        {
          "action": [
            "eat",
            "fish"
          ],
          "strict": true,
          "exec": [
            "say",
            "Not a good plan eating raw seafood."
          ]
        },
        {
          "action": [
            "eat",
            "seafood"
          ],
          "exec": [
            "say",
            "Not a good plan eating raw seafood."
          ]
        },
        {
          "action": [
            "exam",
            "ice"
          ],
          "exec": [
            "say",
            "Frosty chunks of white ^ice^ keeping all the ^seafood^ fresh (mostly)."
          ]
        },
        {
          "action": [
            "eat",
            "ice"
          ],
          "exec": [
            "say",
            "Crunch crunch... ouch BRAIN FREEZE!!!"
          ]
        },
        {
          "action": [
            "take",
            "ice"
          ],
          "exec": [
            [
              "say",
              "You take a small chunk of cold ^ice^ from the ^counter^"
            ],
            [
              "setObjectAttr",
              "ice",
              "room",
              "inventory"
            ],
            [
              "timeout",
              8,
              [
                [
                  "if",
                  [
                    "isPresent",
                    "ice"
                  ],
                  [
                    "say",
                    "|The ice has melted."
                  ]
                ],
                [
                  "setObjectAttr",
                  "ice",
                  "room",
                  "bin"
                ]
              ]
            ]
          ]
        },
        {
          "action": [
            "take",
            "fish"
          ],
          "strict": true,
          "exec": [
            "say",
            "That would be stealing!"
          ]
        },
        {
          "action": [
            "take",
            "seafood"
          ],
          "exec": [
            "say",
            "That would be stealing!"
          ]
        }
      ],
      "walk": {
        "exit": "highStreet",
        "e": "highStreet"
      },
      "desc": "^The Fishmonger^||The fishmongers stall consists of a wooden frame covered in a plastic sheet. The fish ^counter^ stands between you and a weather-worn ^Fishmonger^. A heavy ^display case^ is mounted on the back wall.||The ^high street^ is back to your east."
    },
    "ocean": {
      "move": "Swim",
      "name": "ocean",
      "x": 19,
      "y": 59,
      "walk": {
        "exit": "shallows2",
        "s": "shallows2",
        "d": "deepOcean"
      },
      "desc": "^The Ocean^||You are now swimming on the surface of the ocean bobbing up and down with the waves. You can feel the pull of the depths below your powerful tail.||The ^shallows^ are back to your south, and the ^deep ocean^ is below you."
    },
    "castleThrone": {
      "afterEnter": [
        "exec",
        "objects.crown.scripts.quickRemove"
      ],
      "name": "Throne",
      "x": -2,
      "y": 49,
      "scripts": {
        "takeCheese": [
          "if",
          [
            "equals",
            [
              "getObjectAttr",
              "cheese",
              "room"
            ],
            "inventory"
          ],
          [
            "say",
            "I'm already holding enough cheese!"
          ],
          [
            [
              "say",
              "You pick a large smelly ^cheese^ off one of the platters."
            ],
            [
              "setObjectAttr",
              "cheese",
              "room",
              "inventory"
            ]
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "exam",
            "table"
          ],
          "exec": [
            "say",
            "The tables run the entire length of the magnificent hall and are loaded with platters of ^cheese^."
          ]
        },
        {
          "action": [
            "exam",
            "tables"
          ],
          "exec": [
            "say",
            "The tables run the entire length of the magnificent hall and are loaded with platters of ^cheese^."
          ]
        },
        {
          "action": [
            "exam",
            "cheese"
          ],
          "exec": [
            "say",
            [
              "getObjectAttr",
              "cheese",
              "detail"
            ]
          ]
        },
        {
          "action": [
            "smell",
            "cheese"
          ],
          "exec": [
            "say",
            [
              "getObjectAttr",
              "cheese",
              "smell"
            ]
          ]
        },
        {
          "action": [
            "eat",
            "cheese"
          ],
          "exec": [
            "say",
            [
              "getObjectAttr",
              "cheese",
              "eat"
            ]
          ]
        },
        {
          "action": [
            "take",
            "cheese"
          ],
          "exec": [
            "exec",
            "rooms.castleThrone.scripts.takeCheese"
          ]
        },
        {
          "action": [
            "take",
            "table"
          ],
          "exec": [
            "say",
            "I think I'd look a bit of a fool trying to lug one of those around!"
          ]
        },
        {
          "action": [
            "push",
            "table"
          ],
          "exec": [
            "say",
            "The table is far too heavy for one person to push."
          ]
        },
        {
          "action": [
            "eat",
            "table"
          ],
          "exec": [
            "say",
            "There's not presently anything worth eating on it sadly."
          ]
        },
        {
          "action": [
            "exam",
            "throne"
          ],
          "exec": [
            "say",
            "It's a very ornate golden throne with a King sitting on it!"
          ]
        },
        {
          "action": [
            "talk",
            "guard"
          ],
          "exec": [
            "say",
            "The guard does not even look around... I think when on duty they must refrain from talking to people?"
          ]
        },
        {
          "action": [
            "kick",
            "guard"
          ],
          "exec": [
            "say",
            "Now that wouldn't be very nice would it!"
          ]
        },
        {
          "action": [
            "break",
            "guard"
          ],
          "exec": [
            "say",
            "Now that wouldn't be very nice would it!"
          ]
        },
        {
          "action": [
            "push",
            "guard"
          ],
          "exec": [
            "say",
            "You give one of the guards a little push... He rocks back and forth and you hear him squeak under his breath \"Stop that!\"."
          ]
        },
        {
          "action": [
            "exam",
            "guard"
          ],
          "exec": [
            "say",
            "The guards are standing on either side of the King, facing forward and are trying very hard to stay motionless."
          ]
        },
        {
          "action": [
            "eat",
            "guard"
          ],
          "exec": [
            "say",
            "I think his armour is teeth-proof."
          ]
        }
      ],
      "walk": {
        "exit": "castleCorridor",
        "s": "castleCorridor"
      },
      "crown": true,
      "desc": "^The Throne Room^||You have entered the throne room. Two long ^tables^ run the length of this magnificent hall, and at the end (seated upon his ^throne^ between two ^guards^) is the ^King^ himself.||The only ^exit^ is to your south."
    },
    "vilPath": {
      "name": "Royal",
      "x": 0,
      "y": 17,
      "birds": true,
      "actions": [
        {
          "action": [
            "exam",
            "castle"
          ],
          "exec": [
            "say",
            "Wow, the ^castle^ is an amazing sight! I'm sure I can get a better look as I move north of here."
          ]
        },
        {
          "action": [
            "exam",
            "garden"
          ],
          "exec": [
            "say",
            "The garden looks a little wild, but is a breath of fresh air compared to the smell of the high-street! You can see a large ^tree^ growing in the distance."
          ]
        },
        {
          "action": [
            "exam",
            "tree"
          ],
          "exec": [
            "say",
            "I can't really make it out well from here, move to your east first please."
          ]
        },
        {
          "action": [
            "exam",
            "quarter"
          ],
          "exec": [
            "say",
            "I think it's called that because it's a quarter of a mile from here to the castle?"
          ]
        },
        {
          "action": [
            "exam",
            "royal"
          ],
          "exec": [
            "say",
            "I think it's called that because it's a quarter of a mile from here to the castle?"
          ]
        },
        {
          "action": [
            "exam",
            "mile"
          ],
          "exec": [
            "say",
            "I think it's called that because it's a quarter of a mile from here to the castle?"
          ]
        },
        {
          "action": [
            "w"
          ],
          "exec": [
            "say",
            "You can't go that way Your path is blocked by an iron fence."
          ]
        },
        {
          "action": [
            "walk",
            "castle"
          ],
          "exec": [
            "exec",
            "scripts.walkTo",
            "castleGates",
            "You set off north towards the castle..."
          ]
        }
      ],
      "walk": {
        "s": "highStreet",
        "e": "vilGarden",
        "n": "castleGates"
      },
      "desc": "^Royal Quarter Mile Street^||This long, straight street runs parallel to the ^village gardens^ and leads directly up towards the ^castle gates^. The cobbles are smooth and expertly cut to reflect the majesty of the castle itself||To your north are the ^castle gates^, the ^village gardens^ are to your east, and back south the ^high street^."
    },
    "giantsCastle": {
      "afterEnter": [
        "if",
        [
          "isNotTrig",
          "useRing"
        ],
        [
          [
            "anyKey"
          ],
          [
            "say",
            "|Suddenly the giant's chair scrapes back as he jumps to his feet \"I SMELL A CHILD!!!\" he roars, the power of his voice causing the dust to dance into a frenzy in the air around you. You turn and run from the castle as fast as your legs will take you!"
          ],
          [
            "anyKey"
          ],
          [
            "exec",
            "scripts.walkTo",
            "clouds"
          ]
        ],
        [
          "if",
          [
            "isTrig",
            "sleeping"
          ],
          [
            "say",
            "|The giant is still snoring!"
          ],
          [
            "say",
            "|The giant lifts his hand and scratches his nose."
          ]
        ]
      ],
      "ring": true,
      "name": "Castle",
      "x": -78,
      "y": 138,
      "scripts": {
        "climbTable": [
          "if",
          [
            "isTrig",
            "sleeping"
          ],
          [
            [
              "say",
              "You climb up the ^table leg^ and pull yourself up onto the table top."
            ],
            [
              "anyKey"
            ],
            [
              "exec",
              "scripts.walkTo",
              "giantsTable"
            ]
          ],
          [
            [
              "say",
              "You climb up the ^table leg^ and poke your head over the top of the table... You see an ^Emerald Egg^ between the ^giant^'s hands, but the giant also see's you! He jumps to his feet \"A CHILD!!!\" he roars... You leg it!"
            ],
            [
              "anyKey"
            ],
            [
              "exec",
              "scripts.walkTo",
              "clouds"
            ]
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "exam",
            "giant"
          ],
          "exec": [
            "if",
            [
              "isTrig",
              "sleeping"
            ],
            [
              "say",
              "The giant is slumped over the ^huge table^ snoring loudly!"
            ],
            [
              "say",
              "The giant is sitting at the ^huge table^ playing with something he has between his hands, I can't see what it is from here, but as he rotates it light is being reflected on the walls."
            ]
          ]
        },
        {
          "action": [
            "exam",
            "table"
          ],
          "exec": [
            "say",
            "Never have you seen a table this big? The four ^table legs^ are like four tree trunks... in fact looking closely, I think that's exactly what they are!"
          ]
        },
        {
          "action": [
            "exam",
            "legs"
          ],
          "exec": [
            "say",
            "The table legs are like four tree trunks... in fact looking closely, I think that's exactly what they are! I think I could climb up one to get onto the table."
          ]
        },
        {
          "action": [
            "walk",
            "legs"
          ],
          "exec": [
            "exec",
            "rooms.giantsCastle.scripts.climbTable"
          ]
        },
        {
          "action": [
            "climb",
            "legs"
          ],
          "exec": [
            "exec",
            "rooms.giantsCastle.scripts.climbTable"
          ]
        },
        {
          "action": [
            "walk",
            "table"
          ],
          "exec": [
            "exec",
            "rooms.giantsCastle.scripts.climbTable"
          ]
        },
        {
          "action": [
            "climb",
            "table"
          ],
          "exec": [
            "exec",
            "rooms.giantsCastle.scripts.climbTable"
          ]
        },
        {
          "action": [
            "u"
          ],
          "exec": [
            "exec",
            "rooms.giantsCastle.scripts.climbTable"
          ]
        }
      ],
      "walk": {
        "exit": "clouds",
        "s": "clouds",
        "e": "giantsBedroom",
        "u": "giantsTable",
        "n": "giantMouseHole"
      },
      "desc": "^The Giant's Castle^||The castle doors open directly into a grand hall. In the centre is a ^huge table^, each ^table leg^ is like a pillar of wood! Sat at the table is a very ^ugly giant^!||A large ^mouse hole^ is to your north, a ^bedroom^ to your east, and south the castle ^exit^."
    },
    "forestGlade": {
      "desc2": "^The Forest Glade^||The forest glade is now dominated by an gigantic ^beanstalk^ who's epic vined body reaches high up into the sky to the ^clouds^ above. The ^forest^ lies back to your south.",
      "name": "Glade",
      "x": -72,
      "y": -1,
      "birds": true,
      "click": "Forest Glade",
      "actions": [
        {
          "action": [
            "exam",
            "clouds"
          ],
          "exec": [
            "say",
            "The clouds are very puffy, yet solid in appearance, and you can't help but feel that there might be something up there! Gosh, it's hard to see, but isn't that the buttresses of a castle you keep glimpsing?"
          ]
        },
        {
          "action": [
            "take",
            "soil"
          ],
          "exec": [
            "say",
            "Nah..."
          ]
        },
        {
          "action": [
            "exam",
            "soil"
          ],
          "exec": [
            "say",
            "Just look at this soil! It's so rich looking and fertile looking. Here and there you can see the what's left of some large ^dead roots^"
          ]
        },
        {
          "action": [
            "exam",
            "roots"
          ],
          "exec": [
            "say",
            "They reminds you of remains some ancient prehistoric dinosaur, only it was a vegetable! What on earth did someone once grow here?"
          ]
        },
        {
          "action": [
            "take",
            "roots"
          ],
          "exec": [
            "say",
            "You can only see the parts that have broken the surface, there's no way you could get them out."
          ]
        },
        {
          "action": [
            "fork",
            "soil"
          ],
          "exec": [
            "say",
            "You give the soil a good turning over with the fork. Job well done!"
          ]
        }
      ],
      "walk": {
        "exit": "forest",
        "s": "forest"
      },
      "desc": "^The Forest Glade^||You have emerged from the forest into a pretty glade. The ^earth^ at your feet is a rich brown colour. You also note that high above you the ^clouds^ are looking a little unusual.||The ^forest^ lies back to your south."
    },
    "backroomDwarf": {
      "name": "Storeroom",
      "x": 41,
      "y": -29,
      "scripts": {
        "examBoard": [
          "if",
          [
            "isTrig",
            "moveBoxes"
          ],
          [
            "if",
            [
              "isTrig",
              "foundMap"
            ],
            [
              "say",
              "Only that note was on the board."
            ],
            [
              [
                "trig",
                "foundMap"
              ],
              [
                "say",
                "Hey look at that, there's an old peace of ^parchment^ pinned to the notice board."
              ],
              [
                "setObjectAttr",
                "bogMap",
                "room",
                "@room"
              ]
            ]
          ],
          [
            [
              "say",
              "The ^boxes^ are all piled up against it blocking your view..."
            ]
          ]
        ],
        "moveBoxes": [
          "if",
          [
            "isTrig",
            "moveBoxes"
          ],
          [
            "say",
            "I don't want to move any more ^boxes^."
          ],
          [
            [
              "trig",
              "moveBoxes"
            ],
            [
              "say",
              "You push the boxes aside fully revealing a large ^notice board^."
            ]
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "walk",
            "curtain"
          ],
          "exec": [
            [
              "set",
              "@room",
              "shopDwarf"
            ],
            [
              "exec",
              "scripts.look"
            ]
          ]
        },
        {
          "action": [
            "exam",
            "curtain"
          ],
          "exec": [
            "say",
            "That way leads back to ^Warbeard's^ store."
          ]
        },
        {
          "action": [
            "exam",
            "box"
          ],
          "exec": [
            "say",
            "The ^boxes^ are all piled up against the walls and on top of each other. Oh look here, there's a large ^notice board^ on the wall behind some of the ^boxes^."
          ]
        },
        {
          "action": [
            "exam",
            "shelf"
          ],
          "exec": [
            "say",
            "The shelves are dusty and contain various knick-knacks, but nothing particularly of interest to you."
          ]
        },
        {
          "action": [
            "exam",
            "board"
          ],
          "exec": [
            "exec",
            "rooms.backroomDwarf.scripts.examBoard"
          ]
        },
        {
          "action": [
            "read",
            "board"
          ],
          "exec": [
            "exec",
            "rooms.backroomDwarf.scripts.examBoard"
          ]
        },
        {
          "action": [
            "take",
            "board"
          ],
          "exec": [
            "say",
            "I can't, it's a permanent wall fixture"
          ]
        },
        {
          "action": [
            "move",
            "box"
          ],
          "exec": [
            "exec",
            "rooms.backroomDwarf.scripts.moveBoxes"
          ]
        },
        {
          "action": [
            "open",
            "box"
          ],
          "exec": [
            "say",
            "The ^boxes^ are all taped shut, I don't think I should open those."
          ]
        },
        {
          "action": [
            "look",
            "box"
          ],
          "exec": [
            "say",
            "The ^boxes^ are all taped shut, I don't think I should open those."
          ]
        },
        {
          "action": [
            "kick",
            "box"
          ],
          "exec": [
            "exec",
            "rooms.backroomDwarf.scripts.moveBoxes"
          ]
        },
        {
          "action": [
            "push",
            "box"
          ],
          "exec": [
            "exec",
            "rooms.backroomDwarf.scripts.moveBoxes"
          ]
        },
        {
          "action": [
            "pull",
            "box"
          ],
          "exec": [
            "exec",
            "rooms.backroomDwarf.scripts.moveBoxes"
          ]
        },
        {
          "action": [
            "take",
            "box"
          ],
          "exec": [
            "say",
            "I can't be carrying around large ^boxes^, but I could perhaps move them?"
          ]
        },
        {
          "action": [
            "eat",
            "box"
          ],
          "exec": [
            "say",
            "No thanks!"
          ]
        },
        {
          "action": [
            "w"
          ],
          "exec": [
            "exec",
            "rooms.shopDwarf.scripts.goBackRoom"
          ]
        }
      ],
      "walk": {
        "exit": "shopDwarf",
        "w": "shopDwarf"
      },
      "desc": "^Warbeard's Storeroom^||It's very musky in Warbeard's back storeroom & dust is hanging in the shafts of light penetrating through the ^curtain^ behind you. There are ^boxes^ piled up against the walls, and on ^shelves^.||The only ^exit^ is back to your west."
    },
    "forest": {
      "name": "Forest",
      "x": -72,
      "y": -26,
      "birds": true,
      "actions": [
        {
          "action": [
            "exam",
            "trees"
          ],
          "exec": [
            "say",
            "They're bark is dark and damp to the touch."
          ]
        },
        {
          "action": [
            "exam",
            "canopy"
          ],
          "exec": [
            "say",
            "High above your head the branches of the trees meet and thousands of leaves mingle to block out most of the light."
          ]
        },
        {
          "action": [
            "walk",
            "canopy"
          ],
          "exec": [
            "exec",
            "scripts.climbTree"
          ]
        },
        {
          "action": [
            "walk",
            "tree"
          ],
          "exec": [
            "exec",
            "scripts.climbTree"
          ]
        },
        {
          "action": [
            "u"
          ],
          "exec": [
            "exec",
            "scripts.climbTree"
          ]
        }
      ],
      "walk": {
        "exit": "meadow",
        "s": "forest2",
        "e": "meadow",
        "n": "forestGlade"
      },
      "desc": "^The Forest^||You are standing in a forest surrounded by many ^tall trees^. The thick ^canopy^ high above you is blocking out most of the light.||The forest continues to your ^north^ and ^south^, but to the east opens up to a ^meadow^."
    },
    "underBogBeast": {
      "name": "underBogBeast",
      "x": -130,
      "y": -25,
      "walk": {
        "exit": "bog1",
        "s": "bog7",
        "e": "bog7",
        "w": "bog7",
        "n": "bog7"
      },
      "desc": "^Under the Bog Beasts Belly^||You have fought your way right under the enormous ^bog beast^, Let's hope it doesn't sit down! It's large rubbery legs are like tree trunks to either side of you, and between them is a large nest scraped out of the earth.||Every direction would be an 'exit' from here."
    },
    "clouds": {
      "afterEnter": [
        "if",
        [
          "isNotTrig",
          "paperBall"
        ],
        [
          [
            "anyKey"
          ],
          [
            "say",
            "|As you stand in awe of the huge castle (and how did someone build a castle in a cloud anyhow), a gust of wind brings a 5 foot wide ball of scrunched up ^paper^ thundering down the path causing you to have to jump out of its way."
          ],
          [
            "trig",
            "paperBall"
          ],
          [
            "setObjectAttr",
            "paperBall",
            "room",
            "@room"
          ]
        ]
      ],
      "name": "clouds",
      "x": -78,
      "y": 138,
      "click": "Cloud",
      "actions": [
        {
          "action": [
            "exam",
            "castle"
          ],
          "exec": [
            "say",
            "Now when I said it was a huge ^castle^, I wasn't kidding... But not because oh the vastness of its many rooms, no... This ^castle^ was obviously built for someone MUCH bigger than an average human!"
          ]
        },
        {
          "action": [
            "exam",
            "clouds"
          ],
          "exec": [
            "say",
            "The ^clouds^ are indeed very solid, perhaps it's the altitude, or the temperature? Or maybe they got baked in the sun? It's a mystery to me!"
          ]
        },
        {
          "action": [
            "take",
            "clouds"
          ],
          "exec": [
            "say",
            "Hmmm, the solid ^cloud^ is just too solid, but the wispy ones are just vapor... Guess no ^cloud^ for me!"
          ]
        },
        {
          "action": [
            "exam",
            "beanstalk"
          ],
          "exec": [
            "say",
            "The ^beanstalk^ is poking up through a relatively small gap in the ^cloud^. It drops ^down^ for miles back to earth - Gosh I'm high!!"
          ]
        }
      ],
      "walk": {
        "d": "beanstalk",
        "n": "giantsCastle"
      },
      "desc": "^The Clouds^||You are standing on a very firm ^cloud^, wisps of vapour swirl about your feet. Looking up you see you are in the presence of a huge ^Castle^.||The ^Castle^ lies to your north, and the ^beanstalk^ winds back down below."
    },
    "shallows2": {
      "move": "Swim",
      "name": "shallows",
      "x": 24,
      "y": 54,
      "actions": [
        {
          "action": [
            "s"
          ],
          "exec": [
            [
              "say",
              "Before you climb out of the ^sea^ you have to quickly pull off your ^fish tail^ to regain your land legs!"
            ],
            [
              "anyKey"
            ],
            [
              "clearTrig",
              "wearTail"
            ],
            [
              "moveAllObjects",
              "shallows2",
              "shallows"
            ],
            [
              "exec",
              "scripts.walkTo",
              "beach"
            ]
          ]
        },
        {
          "action": [
            "remove",
            "tail"
          ],
          "exec": [
            [
              "say",
              "You pull off your ^fish tail^ to regain your land legs!"
            ],
            [
              "clearTrig",
              "wearTail"
            ],
            [
              "moveAllObjects",
              "shallows2",
              "shallows"
            ],
            [
              "set",
              "@room",
              "shallows"
            ]
          ]
        }
      ],
      "walk": {
        "exit": "beach",
        "s": "beach",
        "n": "ocean"
      },
      "desc": "^The Shallows^||You are swimming like a fish in the shallows of the ^Sea^. You find the buffeting waves no longer prove any problem to your giant fish tail, allowing you to power through the water as elegantly as a dolphin.||The ^Ocean^ is to your north, and the ^Beach^ is back to your south."
    },
    "caveEntrance": {
      "name": "Cave",
      "x": 7,
      "y": -105,
      "birds": false,
      "click": "Cave Entrance",
      "actions": [
        {
          "action": [
            "exam",
            "cave"
          ],
          "exec": [
            "say",
            "The rock around the entrance is well worn, and occasional wisps of a dark vapour escape the cave's mouth, rise and are lost in the air."
          ]
        },
        {
          "action": [
            "walk",
            "cave"
          ],
          "exec": [
            [
              "say",
              "Ok"
            ],
            [
              "wait",
              0.7
            ],
            [
              "set",
              "@room",
              "cavern"
            ],
            [
              "exec",
              "scripts.look"
            ]
          ]
        },
        {
          "action": [
            "eat",
            "cave"
          ],
          "exec": [
            "say",
            "And how exactly does one 'eat' a cave?"
          ]
        }
      ],
      "walk": {
        "s": "mountainPeak",
        "d": "mountainFoot",
        "u": "mountainPeak",
        "w": "cavern",
        "n": "mountainFoot"
      },
      "desc": "^A Cave Entrance^||You are now on the upper slopes of the mountain - It's getting a bit chilly up here! The mouth of a ^large cave^ penetrates deep into the mountain side.||^Up^ to your south is the ^mountain peak^, the ^cave^ is on your west, and the mountain path runs ^down^ to your north."
    },
    "castleThroneCloud": {
      "name": "Throne",
      "x": -2,
      "y": 49,
      "scripts": {
        "exitScript": [
          [
            "say",
            "As you walk out you see the king shouting at a guard \"Are you implying it was me you cretin! It was you, don't you think I recognise your smell after having you standing around me every day?\", the guard is squirming now, but is trying to avoid the conversation by suggesting that the room may now be clear and begins to usher the King back inside."
          ],
          [
            "anyKey"
          ],
          [
            "set",
            "@room",
            "castleCorridor"
          ],
          [
            "exec",
            "scripts.look"
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "s"
          ],
          "exec": [
            "exec",
            "rooms.castleThroneCloud.scripts.exitScript"
          ]
        },
        {
          "action": [
            "exit"
          ],
          "exec": [
            "exec",
            "rooms.castleThroneCloud.scripts.exitScript"
          ]
        },
        {
          "action": [
            "exam",
            "throne"
          ],
          "exec": [
            "say",
            "It's a very ornate golden throne with a fat red ^cushion^ placed on the seat."
          ]
        },
        {
          "action": [
            "use",
            "throne"
          ],
          "exec": [
            "say",
            "what a comfy ^cushion^! I could get used to this!"
          ]
        },
        {
          "action": [
            "use",
            "cushion"
          ],
          "exec": [
            "say",
            "what a comfy ^cushion^! I could get used to this!"
          ]
        },
        {
          "action": [
            "exam",
            "cushion"
          ],
          "exec": [
            "say",
            "The cushion is bright red with a golden tassel on each corner."
          ]
        },
        {
          "action": [
            "take",
            "cushion"
          ],
          "exec": [
            "if",
            [
              "isTrig",
              "cushion"
            ],
            [
              [
                "say",
                "I'd better now take it away, otherwise the King will know that his key is gone!"
              ]
            ],
            [
              [
                "trig",
                "cushion"
              ],
              [
                "say",
                "Wait, what's this under the cushion...? It's a ^golden key^! You pick up the key and return the cushion to the throne."
              ],
              [
                "setObjectAttr",
                "goldenKey",
                "room",
                "inventory"
              ],
              [
                "goal",
                "cushion"
              ]
            ]
          ]
        }
      ],
      "walk": {
        "exit": "castleCorridor",
        "s": "castleCorridor"
      },
      "crown": true,
      "desc": "^The Throne Room^||The throne room smells simply awful, consequently the king's ^throne^ sits empty.||The only ^exit^ is to your south."
    },
    "meadow": {
      "name": "Meadow",
      "x": -43,
      "y": -33,
      "birds": true,
      "actions": [
        {
          "action": [
            "exam",
            "flowers"
          ],
          "exec": [
            "say",
            "There's so may different types & colours, and the ^meadow^ is full of them. ^Bees^ are flying back and forth between them."
          ]
        },
        {
          "action": [
            "exam",
            "Meadow"
          ],
          "exec": [
            "say",
            "There's so may different types of flowers. ^Bees^ are flying back and forth between them."
          ]
        },
        {
          "action": [
            "take",
            "flower"
          ],
          "exec": [
            "say",
            "I'm not in the mood."
          ]
        },
        {
          "action": [
            "take",
            "flowers"
          ],
          "exec": [
            "say",
            "I'm not in the mood."
          ]
        },
        {
          "action": [
            "eat",
            "flowers"
          ],
          "exec": [
            "say",
            "You pick a flower and stuff it into your mouth."
          ]
        },
        {
          "action": [
            "exam",
            "bee"
          ],
          "exec": [
            "say",
            "What large buzzing bumble ^bees^!"
          ]
        },
        {
          "action": [
            "eat",
            "bee"
          ],
          "exec": [
            "say",
            "You slap a ^bee^ with your tongue as it passes by but it doesn't seem to want to stay in your mouth."
          ]
        },
        {
          "action": [
            "take",
            "bee"
          ],
          "exec": [
            [
              "say",
              "You snatch a ^bee^ from one of the ^flowers^ and it buzzes angrily from within your hand..."
            ],
            [
              "setObjectAttr",
              "bee",
              "room",
              "inventory"
            ],
            [
              "timeout",
              3,
              [
                [
                  "if",
                  [
                    "isHeld",
                    "bee"
                  ],
                  [
                    "say",
                    "|OUCH!!! The ^bee^ strung you, and angrily buzzes away."
                  ]
                ],
                [
                  "setObjectAttr",
                  "bee",
                  "room",
                  "bin"
                ]
              ]
            ]
          ]
        }
      ],
      "walk": {
        "e": "square",
        "w": "forest"
      },
      "desc": "^The Meadow^||You're standing in a meadow of knee high ^wild flowers^.||To your east you see the ^village square^, and a ^dark forest^ lies to your west."
    },
    "castleDungeon": {
      "desc2": "^Castle Dungeons^||It's cold and damp down here. A chilly wind is tugging the flame of your torch back towards the ^stairwell^. You can make out the iron bars of a ^dungeon cell^ in the north wall.||To your south the door to the king's ^treasury^ lies open, and the ^stairwell^ leads back up.",
      "name": "Dungeon",
      "x": -17,
      "dark": "^In the Dark^||You are standing in complete darkness except for the silhouette of the ^stairwell^ winding back up behind you.",
      "y": 40,
      "scripts": {
        "examCell": [
          "if",
          [
            "isTrig",
            "freeGuard"
          ],
          [
            "if",
            [
              "isTrig",
              "foundWire"
            ],
            [
              "say",
              "The cold dungeon cell door is now open and the ^guard^ has gone - A job well done in my opinion!"
            ],
            [
              [
                "say",
                "The cold dungeon cell door is now open and the ^guard^ has gone - You notice a piece of ^bent wire^ on the floor of the cell."
              ],
              [
                "trig",
                "foundWire"
              ],
              [
                "setObjectAttr",
                "wire",
                "room",
                "@room"
              ]
            ]
          ],
          [
            "if",
            [
              "isTrig",
              "foundWire"
            ],
            [
              "say",
              "The ^guard^ who was manhandled from the throne room is sitting behind the cold bars. The dungeon cell is carved roughly from the very rock the castle has been built upon. It's dark, cold and damp... Really not a nice place to be!"
            ],
            [
              "if",
              [
                "isTrig",
                "dungeon"
              ],
              [
                [
                  "say",
                  "The ^guard^ who was manhandled from the throne room is sitting behind the cold bars. You notice a thin piece of ^bent wire^ hanging out of the lock on the heavy bared door. Apparently the guard has been trying to escape, but it looks like his tool was not up to the job."
                ],
                [
                  "trig",
                  "foundWire"
                ],
                [
                  "setObjectAttr",
                  "wire",
                  "room",
                  "@room"
                ]
              ],
              [
                "say",
                "A row of iron bars separates you from the ^cell^ beyond. The cell itself is carved roughly from the very rock the castle has been built upon. It's dark, cold and damp... I really wouldn't want to end up in there!"
              ]
            ]
          ]
        ],
        "pushDoor": [
          "if",
          [
            "isNotTrig",
            "unlockTreasury"
          ],
          [
            "say",
            "This ^door^ is solid iron. It ain't going to budge until it's unlocked with a key!"
          ],
          [
            "say",
            "The ^door^ is already standing open! You can enter!"
          ]
        ],
        "unlockDoor": [
          "if",
          [
            "isPresent",
            "goldenKey"
          ],
          [
            [
              "say",
              "You turn the key in the lock of the iron door and hear a very satisfying clunk form the other side of the door. You give the door a heavy push - and it glides slowly open revealing the castle ^Treasury^."
            ],
            [
              "setJSONAttr",
              "rooms.castleDungeon.descAttr",
              "desc2"
            ],
            [
              "setObjectAttr",
              "goldenKey",
              "room",
              "bin"
            ],
            [
              "trig",
              "unlockTreasury"
            ]
          ],
          [
            "if",
            [
              "isPresent",
              "cellKey"
            ],
            [
              [
                "say",
                "You take the heavy ^iron key^ and push it into the ^dungeon cell^ lock. You give it a turn and stand back amazed as the door shudders and creeks open! I guess all these old cell locks share a common key!"
              ],
              [
                "trig",
                "freeGuard"
              ],
              [
                "setObjectAttr",
                "cellKey",
                "room",
                "bin"
              ],
              [
                "setObjectAttr",
                "guard",
                "room",
                "bin"
              ],
              [
                "anyKey"
              ],
              [
                "say",
                "The guard jumps up in surprise! \"You freed me!!!\" he exclaims joyously \"I can't believe it, I need to flee! The King will not like it when he finds I'm gone... God bless you!\". At this the guard dashes past you and up the spiral stairwell."
              ],
              [
                "goal",
                "guard"
              ]
            ],
            [
              "say",
              "You don't have any keys that fit locks in this room."
            ]
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "s"
          ],
          "cond": [
            "isNotTrig",
            "unlockTreasury"
          ],
          "exec": [
            "say",
            "The solid iron door is locked tight!"
          ]
        },
        {
          "action": [
            "n"
          ],
          "exec": [
            "say",
            "Your way is blocked by the iron bars of a dungeon cell."
          ]
        },
        {
          "action": [
            "exam",
            "dungeon"
          ],
          "exec": [
            "exec",
            "rooms.castleDungeon.scripts.examCell"
          ]
        },
        {
          "action": [
            "exam",
            "cell"
          ],
          "exec": [
            "exec",
            "rooms.castleDungeon.scripts.examCell"
          ]
        },
        {
          "action": [
            "exam",
            "bars"
          ],
          "exec": [
            "exec",
            "rooms.castleDungeon.scripts.examCell"
          ]
        },
        {
          "action": [
            "exam",
            "prison"
          ],
          "exec": [
            "exec",
            "rooms.castleDungeon.scripts.examCell"
          ]
        },
        {
          "action": [
            "exam",
            "door"
          ],
          "exec": [
            "say",
            "It's a cast ^iron door^, immensely thick, and no doubt stupidly heavy! There's a single keyhole to one side of the door."
          ]
        },
        {
          "action": [
            "push",
            "door"
          ],
          "exec": [
            "exec",
            "rooms.castleDungeon.scripts.pushDoor"
          ]
        },
        {
          "action": [
            "use",
            "door"
          ],
          "exec": [
            "exec",
            "rooms.castleDungeon.scripts.pushDoor"
          ]
        },
        {
          "action": [
            "open",
            "door"
          ],
          "exec": [
            "exec",
            "rooms.castleDungeon.scripts.pushDoor"
          ]
        },
        {
          "action": [
            "walk",
            "door"
          ],
          "exec": [
            "exec",
            "rooms.castleDungeon.scripts.pushDoor"
          ]
        },
        {
          "action": [
            "kick",
            "door"
          ],
          "exec": [
            "exec",
            "rooms.castleDungeon.scripts.pushDoor"
          ]
        },
        {
          "action": [
            "break",
            "door"
          ],
          "exec": [
            "exec",
            "rooms.castleDungeon.scripts.pushDoor"
          ]
        },
        {
          "action": [
            "walk",
            "stair"
          ],
          "exec": [
            [
              "set",
              "@room",
              "castleStair"
            ],
            [
              "exec",
              "scripts.look"
            ]
          ]
        },
        {
          "action": [
            "use",
            "stair"
          ],
          "exec": [
            [
              "set",
              "@room",
              "castleStair"
            ],
            [
              "exec",
              "scripts.look"
            ]
          ]
        },
        {
          "action": [
            "take",
            "wire"
          ],
          "cond": [
            "isNotTrig",
            "foundWire"
          ],
          "exec": [
            [
              "trig",
              "foundWire"
            ],
            [
              "say",
              "You look at the lock and see the ^wire^ still poking out, so you take it."
            ],
            [
              "setObjectAttr",
              "wire",
              "room",
              "inventory"
            ]
          ]
        },
        {
          "action": [
            "exam",
            "wire"
          ],
          "cond": [
            "isNotTrig",
            "foundWire"
          ],
          "exec": [
            "say",
            "The ^wire^ is poking out of the lock of the cell."
          ]
        },
        {
          "action": [
            "use",
            "key"
          ],
          "exec": [
            "exec",
            "rooms.castleDungeon.scripts.unlockDoor"
          ]
        },
        {
          "action": [
            "unlock"
          ],
          "exec": [
            "exec",
            "rooms.castleDungeon.scripts.unlockDoor"
          ]
        }
      ],
      "walk": {
        "exit": "castleStair",
        "s": "castleTreasury",
        "u": "castleStair"
      },
      "crown": true,
      "desc": "^Castle Dungeons^||It's cold and damp down here. A chilly wind is tugging the flame of your torch back towards the ^stairwell^. You can make out the iron bars of a ^dungeon cell^ in the north wall.||To your south is a heavy ^iron door^, and the ^stairwell^ leads back up."
    },
    "mountainPeak": {
      "name": "Peak",
      "x": 12,
      "y": -73,
      "birds": true,
      "click": "Mountain Peak",
      "actions": [
        {
          "action": [
            "exam",
            "views"
          ],
          "exec": [
            "say",
            "I can see the whole of the village far down below, and there's the castle. Far beyond all of that lies the sea!"
          ]
        }
      ],
      "walk": {
        "exit": "caveEntrance",
        "d": "caveEntrance",
        "n": "caveEntrance"
      },
      "desc": "^The Mountain Peak^||The pathway suddenly opens out and you find yourself walking out into the open of the mountains peak. The ^views^ from here are breathtaking!||There is only one path ^down^ from here (and that's to your north.)"
    },
    "vegPatch": {
      "name": "patch",
      "x": 89,
      "y": 26,
      "birds": true,
      "click": "Vegetable Patch",
      "actions": [
        {
          "action": [
            "exam",
            "patch"
          ],
          "exec": [
            "say",
            "The ^soil^ is dark brown and well turned over... Just right for growing vegetables I guess!"
          ]
        },
        {
          "action": [
            "exam",
            "cottage"
          ],
          "exec": [
            "say",
            "It's quite a small ^cottage^ but looks like it comes straight out of a picture postcard. You note the door is open - This town sure is friendly!"
          ]
        },
        {
          "action": [
            "exam",
            "soil"
          ],
          "exec": [
            "say",
            "The ^soil^ is dark brown and well turned over... Just right for growing vegetables I guess!"
          ]
        },
        {
          "action": [
            "fork",
            "patch"
          ],
          "cond": [
            "isPresent",
            "fork"
          ],
          "exec": [
            "say",
            "You give the ground a bit of a digging over... There, a job well done!"
          ]
        },
        {
          "action": [
            "fork",
            "soil"
          ],
          "cond": [
            "isPresent",
            "fork"
          ],
          "exec": [
            "say",
            "You give the ground a bit of a digging over... There, a job well done!"
          ]
        }
      ],
      "walk": {
        "w": "stile",
        "n": "cottage"
      },
      "desc": "^The Vegetable Patch^||You are standing in the ^vegetable patch^ neighbouring an old ^cottage^. There are rows of ravaged ^cabbages^ lined up beside a ^shed^.||The ^cottage^ is to your north, and the ^stile^ is to your west."
    },
    "beanstalk": {
      "name": "beanstalk",
      "x": -78,
      "y": 87,
      "actions": [
        {
          "action": [
            "exam",
            "beanstalk"
          ],
          "exec": [
            "say",
            "You are clinging on mighty tight now, and with good reason. Climbing to the clouds may have seemed like a good idea from down there, but right now you're starting to wonder whether you've perhaps gone a little mad!"
          ]
        },
        {
          "action": [
            "eat",
            "beanstalk"
          ],
          "exec": [
            "say",
            "That's the last thing on my mind right now!!!"
          ]
        },
        {
          "action": [
            "talk",
            "beanstalk"
          ],
          "exec": [
            "say",
            "\"Beanstalk... I'm trusting you! Don't let me down now!!!\""
          ]
        },
        {
          "action": [
            "exam",
            "clouds"
          ],
          "exec": [
            "say",
            "The clouds are very puffy, yet solid in appearance, and you can't help but feel that there might be something up there! Gosh, it's hard to see, but isn't that the buttresses of a castle you keep glimpsing?"
          ]
        },
        {
          "action": [
            "exam",
            "glade"
          ],
          "exec": [
            "say",
            "The ^glade^ is looking very far away suddenly *gulp* - was this really a wise idea to climb a ^beanstalk^ that stretches into the clouds?"
          ]
        }
      ],
      "walk": {
        "exit": "forestGlade",
        "d": "forestGlade",
        "u": "clouds"
      },
      "desc": "^The Beanstalk^||You are clinging to the hairs of a thick beanstalk vine high up in the sky, wisps of cloud are drifting past.||The ^beanstalk^ continues up to the ^clouds^ above, and down to a clearing in open ^glade^ of the forest below."
    },
    "castleGates": {
      "name": "castle",
      "x": -2,
      "y": 31,
      "birds": true,
      "click": "Castle Gates",
      "actions": [
        {
          "action": [
            "exam",
            "castle"
          ],
          "exec": [
            "say",
            "The castle really is huge, someone very important must live here. Also, it looks pretty impenetrable, guess that would be a good idea for any village with a neighbouring dragon!"
          ]
        },
        {
          "action": [
            "exam",
            "gates"
          ],
          "exec": [
            "say",
            "The ^gate^ is made of heavy timber and shows signs of charring."
          ]
        }
      ],
      "walk": {
        "s": "vilPath",
        "e": "castleWall",
        "n": "castleCorridor"
      },
      "desc": "^Castle Gates^||You are standing at the ^gates^ of a huge castle. A ^man^ is sitting on an old rug to one side.||The ^Entrance Hall^ of the castle is open to your north. A narrow ^dusty track^ skirts around the castle wall to your east, and to your south is ^royal street^."
    },
    "giantsBedroom": {
      "ring": true,
      "name": "Bedroom",
      "x": -78,
      "y": 138,
      "actions": [
        {
          "action": [
            "exam",
            "bed"
          ],
          "exec": [
            "if",
            [
              "isPresent",
              "cardboardBox"
            ],
            [
              "say",
              "The ^bed^ towers above you, the sheets hanging down in a very messy fashion..."
            ],
            [
              [
                "say",
                "The ^bed^ towers above you, the sheets hanging down in a very messy fashion... You notice under the bed is a large ^cardboard box^."
              ],
              [
                "setObjectAttr",
                "cardboardBox",
                "room",
                "giantsBedroom"
              ]
            ]
          ]
        },
        {
          "action": [
            "climb",
            "bed"
          ],
          "exec": [
            "say",
            "The bed is too high to climb onto and the legs too well polished."
          ]
        },
        {
          "action": [
            "walk",
            "bed"
          ],
          "exec": [
            "say",
            "The bed is too high to climb onto and the legs too well polished."
          ]
        },
        {
          "action": [
            "u"
          ],
          "exec": [
            "say",
            "The bed is too high to climb onto and the legs too well polished."
          ]
        }
      ],
      "walk": {
        "exit": "giantsCastle",
        "w": "giantsCastle"
      },
      "desc": "^The Giant's Bedroom^||The giant's bedroom is very bare. His ^bed^ is monstrously large!||Your only ^exit^ is back to your west."
    },
    "corralCastle": {
      "move": "Swim",
      "afterEnter": [
        "goal",
        "royalty"
      ],
      "name": "castle",
      "x": 19,
      "y": 59,
      "actions": [
        {
          "action": [
            "take",
            "corals"
          ],
          "exec": [
            "say",
            "I can't take them, they are fastened tightly to the walls of the castle."
          ]
        },
        {
          "action": [
            "take",
            "coral"
          ],
          "exec": [
            "say",
            "I can't take them, they are fastened tightly to the walls of the castle."
          ]
        },
        {
          "action": [
            "exam",
            "corals"
          ],
          "exec": [
            "say",
            "The corals are all brightly coloured and some are waving gently in the quiet currents within the spiralling castle."
          ]
        },
        {
          "action": [
            "exam",
            "coral"
          ],
          "exec": [
            "say",
            "The corals are all brightly coloured and some are waving gently in the quiet currents within the spiralling castle."
          ]
        },
        {
          "action": [
            "exam",
            "boulder"
          ],
          "exec": [
            "say",
            "It's really huge, but has been polished completely smooth so as to be like a ghostly mirror."
          ]
        },
        {
          "action": [
            "take",
            "boulder"
          ],
          "exec": [
            "say",
            "It's really huge and must weigh more than 5 or 10 trucks!"
          ]
        },
        {
          "action": [
            "eat",
            "boulder"
          ],
          "exec": [
            "say",
            "Don't be silly."
          ]
        },
        {
          "action": [
            "eat",
            "corals"
          ],
          "exec": [
            "say",
            "Do mer-folk eat corals? Maybe..."
          ]
        },
        {
          "action": [
            "smell",
            "corals"
          ],
          "exec": [
            "say",
            "Can I even smell under water? Hmm.. apparently I can... The corals smell of Nemo."
          ]
        }
      ],
      "walk": {
        "exit": "deepOcean2",
        "w": "deepOcean2"
      },
      "desc": "^The Coral Castle^||What an amazing ^castle^ this is! The inside is one huge cavernous space, the walls completely covered in red and white ^corals^ spiralling up, and up. The centre of the room is raised on a single huge smoothed ^boulder^, and standing atop of this is the ^king^ of the mer-people.||The only ^exit^ is west."
    },
    "caveDragon": {
      "afterEnter": [
        [
          "set",
          "@1",
          0
        ],
        [
          "if",
          [
            "isHeld",
            "goldenEgg"
          ],
          [
            [
              "add",
              "@1",
              1
            ],
            [
              "setObjectAttr",
              "goldenEgg",
              "room",
              "@room"
            ]
          ]
        ],
        [
          "if",
          [
            "isHeld",
            "amberEgg"
          ],
          [
            [
              "add",
              "@1",
              1
            ],
            [
              "setObjectAttr",
              "amberEgg",
              "room",
              "@room"
            ]
          ]
        ],
        [
          "if",
          [
            "isHeld",
            "emeraldEgg"
          ],
          [
            [
              "add",
              "@1",
              1
            ],
            [
              "setObjectAttr",
              "emeraldEgg",
              "room",
              "@room"
            ]
          ]
        ],
        [
          "if",
          [
            "isHeld",
            "diamondEgg"
          ],
          [
            [
              "add",
              "@1",
              1
            ],
            [
              "setObjectAttr",
              "diamondEgg",
              "room",
              "@room"
            ]
          ]
        ],
        [
          "if",
          [
            "equals",
            "@1",
            0
          ],
          [],
          [
            [
              "set",
              "@2",
              "@eggs"
            ],
            [
              "sub",
              "@2",
              "@1"
            ],
            [
              "if",
              [
                "equals",
                "@2",
                0
              ],
              [
                [
                  "say",
                  "|The ^dragon^ roars victoriously such that the cave and very mountain shake \"Child - You have returned all of my eggs!!!\"."
                ],
                [
                  "goal",
                  "eggs"
                ],
                [
                  "anyKey"
                ],
                [
                  "say",
                  "|As you place the remaining egg into her nest the dragon speaks \"I knew when we first spoke that you would succeed in this epic task of bravery and courage. I saw the good in your heart, and felt the ancient spirits of the Dragon Queens speaking to me.\""
                ],
                [
                  "anyKey"
                ],
                [
                  "say",
                  "|She turns to you \"Listen to me now\", you feel her heavy clawed hand rest upon your shoulder \"You do not fully understand what you have done. The people of my village become complacent, they no longer even remember that it is I who protect them, they think I am some tourist attraction?\" she laughs."
                ],
                [
                  "anyKey"
                ],
                [
                  "talk",
                  "rooms.caveDragon.talk",
                  "visit"
                ],
                [
                  "anyKey"
                ],
                [
                  "say",
                  "|The dragon lowers her body to the ground and you clamber up onto her back, \"Hold on tight...\" she bellows, and with a few leaps you are out in the bright sunlight. The dragon crouches and her wings rise powerfully on either side of you before, with unbelievable grace, she launches up into the sky. Within moments you are rushing through the clouds and hurtling northwards over the village."
                ],
                [
                  "anyKey"
                ],
                [
                  "say",
                  "|As the castle approaches the dragon's wings spread fully apart and the wind catches them like the sails of a ship, her rear legs reach forward and meet the ground causing the very castle to shake and then she rears up and roars \"KING???\"."
                ],
                [
                  "anyKey"
                ],
                [
                  "say",
                  "|There is a long silence. The dragon simply stands, huge and powerful at the gates of the castle."
                ],
                [
                  "anyKey"
                ],
                [
                  "say",
                  "|A small side-door in the castle wall squeak open and a hapless guard is visibly kicked into view looking terrified."
                ],
                [
                  "anyKey"
                ],
                [
                  "say",
                  "|\"Ummmm... Oh gosh... Ahhh\" fumbles the guard, \"His, umm majesty... has, ummm... Run away!\" he concludes."
                ],
                [
                  "anyKey"
                ],
                [
                  "say",
                  "|The dragon peers at the guard \"And I would expect nothing less of him!\" she laughs, \"And so... Child.\" At this she turns her head to you, \"You must now step into your true destiny. True of heart, clear of mind, trustworthy and strong - I appoint 'you' to rule in his place, as is my right as protector and keeper of the ancient village of the fiery dragon!!!\"."
                ],
                [
                  "anyKey"
                ],
                [
                  "goal",
                  "quest"
                ],
                [
                  "anyKey"
                ],
                [
                  "say",
                  "|"
                ],
                [
                  "listGoals"
                ],
                [
                  "anyKey"
                ],
                [
                  "say",
                  "||"
                ],
                [
                  "say",
                  "|||The End||"
                ],
                [
                  "gameover"
                ]
              ],
              [
                [
                  "if",
                  [
                    "equals",
                    "@eggs",
                    4
                  ],
                  [
                    [
                      "say",
                      [
                        "strJoin",
                        "|The ^dragon^ roars with joy as you approach \"Child!\" she announces, \"You have returned with ",
                        "@1",
                        " of my eggs!\""
                      ]
                    ]
                  ],
                  [
                    [
                      "say",
                      [
                        "strJoin",
                        "|The ^dragon^ rushes to greet you \"Child! Do I see ",
                        "@1",
                        " more of my eggs!?!\" she thunders in excitement."
                      ]
                    ]
                  ]
                ]
              ]
            ],
            [
              "sub",
              "@eggs",
              "@1"
            ],
            [
              "if",
              [
                "equals",
                "@1",
                1
              ],
              [
                "say",
                "|You carefully return the dragon's egg to her nest."
              ],
              [
                "say",
                "You carefully return the dragon's eggs to her nest."
              ]
            ],
            [
              "anyKey"
            ],
            [
              "say",
              [
                "strJoin",
                "|\"Now... just ",
                "@2",
                " more to find! I know you will do it and when you return I will be waiting, my adventuring prince!\""
              ]
            ],
            [
              "trig",
              "prince"
            ]
          ]
        ]
      ],
      "name": "Tunnel",
      "x": 7,
      "y": -105,
      "talk": {
        "visit": [
          "|You feel her claw squeeze as she pauses... Then relaxing she continues \"My village will continue to thrive now, but there are some who do not have a future here. Will you come with me to visit the so called ^King^ of MY village?\"",
          {
            "next": "done",
            "q": "Yes, I'll come!",
            "a": "\"Excellent!\" roars the dragon, \"Now, climb on my back!\""
          },
          {
            "q": "What right now...?",
            "a": "The dragon looks surprised \"Yes of course! There is no time to lose!\""
          },
          {
            "q": "What are you going to do?",
            "a": "The dragon beats its powerful wings, \"Restore Justice to my village!!\" she roars."
          }
        ]
      },
      "actions": [
        {
          "action": [
            "exam",
            "gold"
          ],
          "exec": [
            "exec",
            "rooms.caveDragonPre.scripts.examGold"
          ]
        },
        {
          "action": [
            "exam",
            "nest"
          ],
          "exec": [
            "exec",
            "rooms.caveDragonPre.scripts.examGold"
          ]
        },
        {
          "action": [
            "exam",
            "mound"
          ],
          "exec": [
            "exec",
            "rooms.caveDragonPre.scripts.examGold"
          ]
        },
        {
          "action": [
            "take",
            "gold"
          ],
          "exec": [
            "say",
            "You can't take them because they have long been fused together by some awesome heat."
          ]
        },
        {
          "action": [
            "take",
            "nest"
          ],
          "exec": [
            "say",
            "You can't take them because they have long been fused together by some awesome heat."
          ]
        },
        {
          "action": [
            "take",
            "egg"
          ],
          "exec": [
            "say",
            "I am absolutely not going to even think about taking that egg!!!"
          ]
        },
        {
          "action": [
            "exam",
            "smoke"
          ],
          "exec": [
            "say",
            "The smoke is very heavy now and is circling around the roof of the cave."
          ]
        }
      ],
      "walk": {
        "exit": "cavern",
        "s": "cavern"
      },
      "desc": "^The Mountain Cave^||You are in the dark recesses of the cave. The ^Dragon^'s golden ^nest^ is in the centre of the room containing the solitary ^egg^.||The ^cave^ only leads back to your south."
    },
    "cavern": {
      "name": "Cave",
      "x": 7,
      "y": -105,
      "actions": [
        {
          "action": [
            "exam",
            "smoke"
          ],
          "exec": [
            "say",
            "The thick smoke is bellowing out of the dark ^tunnel^ to your north and drifting relentlessly across the cave roof and out of the cave mouth to your ^east^."
          ]
        }
      ],
      "walk": {
        "exit": "caveEntrance",
        "e": "caveEntrance",
        "n": "caveDragonPre"
      },
      "desc": "^The Magical Cavern^||You have entered a huge cavern in the mountainside. The light is pouring in from the caves mouth but things quickly fall into the darkness of sparkling rocks. You can see ^Smoke^ making its way slowly across the cave roof from a ^dark tunnel^ deeper in the cave.||The ^tunnel^ is to your north, and the cave ^exit^ is east."
    },
    "giantMouseHole": {
      "ring": true,
      "name": "hole",
      "x": -78,
      "y": 138,
      "scripts": {
        "useCheese": [
          "if",
          [
            "isPresent",
            "cheese"
          ],
          [
            [
              "setObjectAttr",
              "cheese",
              "room",
              "bin"
            ],
            [
              "say",
              "You place the ^cheese^ onto the floor and roll it gently towards the shivering pile of ^straw^. \"Hey there?\" you whisper, \"It's ok... You're hungry right?\"."
            ],
            [
              "say",
              "|The ^straw^ stops shivering..."
            ],
            [
              "anyKey"
            ],
            [
              "say",
              "|The next thing that happens is a dainty, but large pink nose pokes out of the side of the ^straw^ pile. It wiggles back and forth sniffing the air, whiskers bouncing on either side. Then out pops the head, followed by the body of a very large ^mouse^."
            ],
            [
              "setObjectAttr",
              "mouseTail",
              "room",
              "bin"
            ],
            [
              "moveAllObjects",
              "giantMouseHole",
              "giantMouseHole2"
            ],
            [
              "setJSONAttr",
              "rooms.giantsCastle.walk.n",
              "giantMouseHole2"
            ],
            [
              "anyKey"
            ],
            [
              "exec",
              "scripts.walkTo",
              "giantMouseHole2"
            ]
          ],
          [
            "say",
            "What cheese...?"
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "exam",
            "straw"
          ],
          "exec": [
            "say",
            "The ^straw^ is quivering, I think there's something in there... my best guess would be a mouse!"
          ]
        },
        {
          "action": [
            "push",
            "straw"
          ],
          "exec": [
            "say",
            "You push the ^straw^ and it squeaks and shivers all the more violently!"
          ]
        },
        {
          "action": [
            "kick",
            "straw"
          ],
          "exec": [
            "say",
            "You kick the ^straw^ and it squeaks and shivers all the more violently!"
          ]
        },
        {
          "action": [
            "take",
            "straw"
          ],
          "exec": [
            "say",
            "You touch the ^straw^ and it shivers all the more violently!"
          ]
        },
        {
          "action": [
            "talk",
            "straw"
          ],
          "exec": [
            "say",
            "\"Hello...? Is there someone in there?\",|the shaking stops for a moment, and then a little voice squeaks \"so hungry...\" and the ^straw^ commences it's usual shiver once more."
          ]
        },
        {
          "action": [
            "drop",
            "cat"
          ],
          "exec": [
            "say",
            "\"The ^cat^ flat refuses to be put down here!\""
          ]
        },
        {
          "action": [
            "cat",
            "straw"
          ],
          "exec": [
            "say",
            "\"The ^cat^ flat refuses to be put down here!\""
          ]
        },
        {
          "action": [
            "straw",
            "cat"
          ],
          "exec": [
            "say",
            "\"The ^cat^ flat refuses to be put down here!\""
          ]
        },
        {
          "action": [
            "throw",
            "cat"
          ],
          "exec": [
            "say",
            "\"The ^cat^ flat refuses to be put down here!\""
          ]
        },
        {
          "action": [
            "use",
            "cheese"
          ],
          "exec": [
            "exec",
            "rooms.giantMouseHole.scripts.useCheese"
          ]
        },
        {
          "action": [
            "give",
            "cheese"
          ],
          "exec": [
            "exec",
            "rooms.giantMouseHole.scripts.useCheese"
          ]
        },
        {
          "action": [
            "drop",
            "cheese"
          ],
          "exec": [
            "exec",
            "rooms.giantMouseHole.scripts.useCheese"
          ]
        },
        {
          "action": [
            "throw",
            "cheese"
          ],
          "exec": [
            "exec",
            "rooms.giantMouseHole.scripts.useCheese"
          ]
        }
      ],
      "walk": {
        "exit": "giantsCastle",
        "s": "giantsCastle"
      },
      "desc": "^The Giant Mouse Hole^||Inside the large mouse hole it's quite dark, but you can see a mass of tangled ^straw^ that appears to be shivering.||The ^exit^ is back to your south."
    },
    "beach": {
      "name": "beach",
      "x": 26,
      "y": 52,
      "click": "Beach",
      "actions": [
        {
          "action": [
            "exam",
            "castle"
          ],
          "exec": [
            "say",
            "You can see the castle back to your south."
          ]
        },
        {
          "action": [
            "walk",
            "castle"
          ],
          "exec": [
            "exec",
            "scripts.walkTo",
            "castleWall"
          ]
        },
        {
          "action": [
            "exam",
            "beach"
          ],
          "exec": [
            "say",
            "The ^sand^ is really soft and warm to the touch - lovely *sigh*, I could happily spend all day here! That is if I wasn't a mighty adventurer of course!"
          ]
        },
        {
          "action": [
            "take",
            "beach"
          ],
          "exec": [
            "say",
            "You pick up a handful of ^sand^ and play with it between your fingers, but you don't feel the need to carry it around with you."
          ]
        },
        {
          "action": [
            "eat",
            "beach"
          ],
          "exec": [
            "say",
            "The ^sand^ tastes a little salty and is very gritty... yes in fact, cough, spit... yuck! I wish I hadn't done that!"
          ]
        },
        {
          "action": [
            "throw",
            "beach"
          ],
          "exec": [
            "say",
            "You pick up a handful of ^sand^ and throw it. The sand fans out in the air, some blowing back in to your face so you have to turn your head to avoid getting it in your eyes - Careful now!"
          ]
        },
        {
          "action": [
            "exam",
            "ocean"
          ],
          "exec": [
            "say",
            "The ^waves^ are crashing on to the beach with some vigour even though the coastal wind is not that strong today."
          ]
        },
        {
          "action": [
            "walk",
            "ocean"
          ],
          "exec": [
            [
              "set",
              "@room",
              "shallows"
            ],
            [
              "exec",
              "scripts.look"
            ]
          ]
        },
        {
          "action": [
            "walk",
            "water"
          ],
          "exec": [
            [
              "set",
              "@room",
              "shallows"
            ],
            [
              "exec",
              "scripts.look"
            ]
          ]
        },
        {
          "action": [
            "fork",
            "beach"
          ],
          "cond": [
            "isPresent",
            "fork"
          ],
          "exec": [
            "say",
            "Forks and sand don't really make for very good holes sadly..."
          ]
        }
      ],
      "walk": {
        "s": "castleWall",
        "n": "shallows"
      },
      "desc": "^The Beach^||Your feet are warmed by the sun baked ^sand^ that stretches off around you down to meet the energetic ^waves^ of the ^sea^.||You can go north into the ^shallows^ of the sea, or back south up the ^dusty track^ towards the ^Castle^."
    },
    "castleTreasury": {
      "name": "Treasury",
      "x": -17,
      "dark": "In the Dark||It's completely dark...",
      "y": 40,
      "actions": [
        {
          "action": [
            "exam",
            "table"
          ],
          "exec": [
            "say",
            "The ^table^ is rectangular and very solid looking, pretty much just a giant block of stone."
          ]
        }
      ],
      "walk": {
        "exit": "castleDungeon",
        "n": "castleDungeon"
      },
      "crown": true,
      "desc": "^The Treasury^||You are standing in an impressively secure room hewn out the very rock (it unnervingly reminds you of some giant ancient tomb). A hefty ^table^ commands the centre of the room.||The only ^exit^ is located back to your north."
    },
    "castleStair": {
      "desc2": "^Castle Stairwell^||A hard stone ^stairwell^ winds downwards into the darkness. The castle's inviting ^entrance hall^ is to your east.",
      "name": "Stair",
      "x": -17,
      "y": 40,
      "actions": [
        {
          "action": [
            "exam",
            "stair"
          ],
          "exec": [
            "say",
            "They're cold slabs of cut rock and they wind downward in to the darkness of the castle's dungeons *gulp*."
          ]
        },
        {
          "action": [
            "exam",
            "torch"
          ],
          "cond": [
            "isNotTrig",
            "gotTorch"
          ],
          "exec": [
            "say",
            "It's a flaming torch... I'm glad of the light!"
          ]
        },
        {
          "action": [
            "exam",
            "dark"
          ],
          "exec": [
            "say",
            "It's a bit spooky :("
          ]
        },
        {
          "action": [
            "shout"
          ],
          "exec": [
            "say",
            "Your voice echos back up to you from the darkness."
          ]
        },
        {
          "action": [
            "walk",
            "stair"
          ],
          "exec": [
            [
              "set",
              "@room",
              "castleDungeon"
            ],
            [
              "exec",
              "scripts.look"
            ]
          ]
        },
        {
          "action": [
            "use",
            "stair"
          ],
          "exec": [
            [
              "set",
              "@room",
              "castleDungeon"
            ],
            [
              "exec",
              "scripts.look"
            ]
          ]
        },
        {
          "action": [
            "take",
            "torch"
          ],
          "cond": [
            "isNotTrig",
            "gotTorch"
          ],
          "exec": [
            [
              "setJSONAttr",
              "rooms.castleStair.descAttr",
              "desc2"
            ],
            [
              "setObjectAttr",
              "torch",
              "room",
              "inventory"
            ],
            [
              "trig",
              "gotTorch"
            ],
            [
              "say",
              "You carefully remove the torch from its wall bracket."
            ]
          ]
        }
      ],
      "walk": {
        "exit": "castleCorridor",
        "d": "castleDungeon",
        "e": "castleCorridor"
      },
      "crown": true,
      "desc": "^Castle Stairwell^||A ^torch^ burning on the wall is all that illuminates a hard stone ^stairwell^ winding ^downward^ into the darkness.||The ^entrance hall^ is east, and the ^stairwell^ leads ^down^."
    },
    "mountainFoot": {
      "name": "Mountain",
      "x": -1,
      "y": -127,
      "birds": true,
      "actions": [
        {
          "action": [
            "walk",
            "mountain"
          ],
          "exec": [
            "exec",
            "scripts.walkTo",
            "caveEntrance"
          ]
        }
      ],
      "walk": {
        "s": "caveEntrance",
        "d": "vilEntrance",
        "u": "caveEntrance",
        "n": "vilEntrance"
      },
      "desc": "^Lower Mountain Slopes^||You are standing on a path up the lower slopes of a ^mountain^.||To your north lies the ^gates^ of the village, or the path continues ^up^ the ^mountain^ to your south."
    },
    "deepOcean": {
      "move": "Swim",
      "name": "ocean",
      "x": 19,
      "y": 59,
      "walk": {
        "exit": "ocean",
        "u": "ocean",
        "n": "shipwreck"
      },
      "desc": "^The Deep Ocean^||You are now swimming deep under the ocean near the ocean bed, light rays are playing across the sandy floor around you.||You can swim up to the ^ocean surface^, or continue north towards a ^shipwreck^"
    }
  },
  "dictionary": [
    [
      "inv",
      "inventory",
      "items"
    ],
    [
      "n",
      "north"
    ],
    [
      "e",
      "east"
    ],
    [
      "s",
      "south"
    ],
    [
      "w",
      "west"
    ],
    [
      "u",
      "up",
      "upwards"
    ],
    [
      "d",
      "down",
      "downward",
      "downwards"
    ],
    [
      "Hello",
      "hi",
      "hey"
    ],
    [
      "exam",
      "examine",
      "describe",
      "look at"
    ],
    [
      "smell",
      "sniff"
    ],
    [
      "taste",
      "lick"
    ],
    [
      "bee",
      "bees"
    ],
    [
      "eat",
      "consume",
      "nibble",
      "devour",
      "munch",
      "swallow",
      "ingest"
    ],
    [
      "break",
      "smash",
      "destroy",
      "bash",
      "punch",
      "crush",
      "hit",
      "squash"
    ],
    [
      "stamp",
      "step on",
      "jump on"
    ],
    [
      "take",
      "get",
      "pick up",
      "snatch"
    ],
    [
      "drop",
      "put down",
      "discard",
      "place"
    ],
    [
      "throw",
      "lob",
      "chuck"
    ],
    [
      "lift",
      "pull up"
    ],
    [
      "pull",
      "drag"
    ],
    [
      "look"
    ],
    [
      "goals",
      "goal",
      "achievements",
      "achieve",
      "ach",
      "mission",
      "task",
      "tasks"
    ],
    [
      "walk",
      "go",
      "run",
      "crawl",
      "roll",
      "enter",
      "go in",
      "go inside",
      "jump in"
    ],
    [
      "in",
      "inside"
    ],
    [
      "fish",
      "piranha",
      "fishes",
      "piranhas"
    ],
    [
      "dummy",
      "carpet lifting"
    ],
    [
      "arch",
      "archway"
    ],
    [
      "push",
      "shove"
    ],
    [
      "coin",
      "coins",
      "money"
    ],
    [
      "garden",
      "gardens"
    ],
    [
      "shout",
      "call"
    ],
    [
      "dark",
      "darkness"
    ],
    [
      "talk",
      "ask"
    ],
    [
      "pokeball"
    ],
    [
      "tree",
      "oak"
    ],
    [
      "cane",
      "canes",
      "pole",
      "poles"
    ],
    [
      "beans",
      "bean"
    ],
    [
      "exit",
      "leave",
      "go out",
      "escape"
    ],
    [
      "cobwebs",
      "cobweb",
      "web",
      "webs"
    ],
    [
      "dwarf",
      "warbeard"
    ],
    [
      "stair",
      "stairwell",
      "stairs",
      "staircase",
      "steps",
      "step"
    ],
    [
      "lady",
      "woman",
      "women",
      "her"
    ],
    [
      "man",
      "men",
      "him"
    ],
    [
      "give",
      "hand"
    ],
    [
      "vet",
      "veterinarian"
    ],
    [
      "vets",
      "Veterinary",
      "Clinic"
    ],
    [
      "seed",
      "seeds",
      "bird seed",
      "pidgey seed"
    ],
    [
      "pidgey",
      "bird"
    ],
    [
      "box",
      "boxes"
    ],
    [
      "board",
      "notice"
    ],
    [
      "shelf",
      "shelves"
    ],
    [
      "backroom",
      "storeroom"
    ],
    [
      "bench",
      "benches"
    ],
    [
      "cabbage",
      "cabbages"
    ],
    [
      "bunny",
      "rabbit"
    ],
    [
      "guard",
      "guards"
    ],
    [
      "poster",
      "posters"
    ],
    [
      "beach",
      "coast",
      "sand"
    ],
    [
      "ocean",
      "sea",
      "waves"
    ],
    [
      "wire",
      "hook",
      "hooked"
    ],
    [
      "cupboard",
      "cupboards"
    ],
    [
      "beast",
      "chicken",
      "bog beast"
    ],
    [
      "clouds",
      "cloud"
    ],
    [
      "soil",
      "earth",
      "ground"
    ],
    [
      "roots",
      "root"
    ],
    [
      "tree",
      "trees"
    ],
    [
      "legs",
      "leg",
      "table leg",
      "table legs"
    ],
    [
      "wait",
      "pause",
      "do nothing",
      "linger"
    ],
    [
      "wear",
      "put on"
    ],
    [
      "remove",
      "take off"
    ],
    [
      "shipwreck",
      "ship",
      "boat",
      "wreck"
    ],
    [
      "cannon",
      "cannons"
    ],
    [
      "phone",
      "mobile"
    ],
    [
      "gates",
      "gate"
    ]
  ],
  "objects": {
    "shed": {
      "take": "I may be strong, but seriously...?",
      "pre": "a",
      "name": "shed",
      "eat": "Perhaps a little too tough for my teeth.",
      "detail": "It's an old, yet sturdily build shed with a ^door^ and single ^window^ on the front.",
      "title": "garden ^shed^",
      "list": false,
      "smell": "Smells of old wood and wood preserving paint.",
      "scripts": {
        "openShed": [
          "if",
          [
            "isTrig",
            "shedOpen"
          ],
          [
            "say",
            "The ^shed door^ is already open"
          ],
          [
            "say",
            "You try the ^door^, but it's locked. It looks like you'll be needing a key? The shed also has a ^window^."
          ]
        ],
        "openWindow": [
          "if",
          [
            "isTrig",
            "shedKey"
          ],
          [
            "say",
            "It's already open"
          ],
          [
            [
              "say",
              "Hey look at that, the shed window is slightly ajar. You push is open and can now see a ^key^ is hanging just inside!"
            ],
            [
              "setObjectAttr",
              "shedKey",
              "room",
              "@room"
            ],
            [
              "trig",
              "shedKey"
            ]
          ]
        ],
        "enterShed": [
          "if",
          [
            "isTrig",
            "shedOpen"
          ],
          [
            [
              "set",
              "@room",
              "shed"
            ],
            [
              "exec",
              "scripts.look"
            ]
          ],
          [
            "say",
            "You try the ^door^, but it's locked. It looks like you'll be needing a key? The shed also has a ^window^."
          ]
        ],
        "unlockShed": [
          "if",
          [
            "isPresent",
            "shedKey"
          ],
          [
            "if",
            [
              "isTrig",
              "shedOpen"
            ],
            [
              "say",
              "The ^shed door^ is already unlocked!"
            ],
            [
              [
                "say",
                "The key fits perfectly. You give it a twist and the ^shed door^ creaks open."
              ],
              [
                "trig",
                "shedOpen"
              ],
              [
                "setObjectAttr",
                "shedKey",
                "room",
                "bin"
              ]
            ]
          ],
          [
            "say",
            "Sorry, I don't have a key that can open the ^shed door^."
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "walk",
            "shed"
          ],
          "exec": [
            "exec",
            "objects.shed.scripts.enterShed"
          ]
        },
        {
          "action": [
            "walk",
            "door"
          ],
          "exec": [
            "exec",
            "objects.shed.scripts.enterShed"
          ]
        },
        {
          "action": [
            "use",
            "door"
          ],
          "exec": [
            "exec",
            "objects.shed.scripts.enterShed"
          ]
        },
        {
          "action": [
            "shed"
          ],
          "strict": true,
          "exec": [
            "exec",
            "objects.shed.scripts.enterShed"
          ]
        },
        {
          "action": [
            "exam",
            "window"
          ],
          "exec": [
            "exec",
            "objects.shed.scripts.openWindow"
          ]
        },
        {
          "action": [
            "open",
            "window"
          ],
          "exec": [
            "exec",
            "objects.shed.scripts.openWindow"
          ]
        },
        {
          "action": [
            "push",
            "window"
          ],
          "exec": [
            "exec",
            "objects.shed.scripts.openWindow"
          ]
        },
        {
          "action": [
            "exam",
            "door"
          ],
          "exec": [
            "if",
            [
              "isTrig",
              "shedOpen"
            ],
            [
              "say",
              "Yay, the ^door^ is now unlocked, I'm free to enter the ^shed^"
            ],
            [
              "say",
              "The ^door^ is locked... I think I need a key."
            ]
          ]
        },
        {
          "action": [
            "break",
            "door"
          ],
          "exec": [
            "say",
            "It's to strong!"
          ]
        },
        {
          "action": [
            "kick",
            "door"
          ],
          "exec": [
            "say",
            "Ouch my foot! The door is far too strong!"
          ]
        },
        {
          "action": [
            "push",
            "door"
          ],
          "exec": [
            "exec",
            "objects.shed.scripts.openShed"
          ]
        },
        {
          "action": [
            "pull",
            "door"
          ],
          "exec": [
            "exec",
            "objects.shed.scripts.openShed"
          ]
        },
        {
          "action": [
            "open",
            "door"
          ],
          "exec": [
            "exec",
            "objects.shed.scripts.openShed"
          ]
        },
        {
          "action": [
            "open",
            "door"
          ],
          "exec": [
            "exec",
            "objects.shed.scripts.openShed"
          ]
        },
        {
          "action": [
            "unlock"
          ],
          "exec": [
            "exec",
            "objects.shed.scripts.unlockShed"
          ]
        },
        {
          "action": [
            "use",
            "key"
          ],
          "exec": [
            "exec",
            "objects.shed.scripts.unlockShed"
          ]
        }
      ],
      "room": "vegPatch"
    },
    "bee": {
      "pre": "an",
      "name": "bee",
      "detail": "This ^bee^ looks angry! I'm not sure it likes being held!",
      "title": "angry ^bee^",
      "actions": [
        {
          "action": [
            "eat",
            "bee"
          ],
          "exec": [
            [
              "say",
              "You try to push the ^bee^ into your mouth but it stings you and buzzes away angrily."
            ],
            [
              "setObjectAttr",
              "bee",
              "room",
              "bin"
            ]
          ]
        },
        {
          "action": [
            "talk",
            "bee"
          ],
          "exec": [
            "say",
            "\"Hello little ^bee^!\" you say, but the ^bee^ just buzzes angrily!"
          ]
        }
      ]
    },
    "oldLady2": {
      "take": "I could perhaps almost manage to lift her, but I don't feel like carrying her round.",
      "pre": "an",
      "name": "lady",
      "eat": "Well, it would make an interesting ending to the rhyme :)",
      "talk": {
        "init": "welcome",
        "welcome": [
          "The old lady beams at you \"Hello sweet child!\"",
          {
            "q": "How are you feeling now?",
            "a": "\"Oh much, much better thank you.\""
          },
          {
            "q": "How's your belly?",
            "a": "She rubs her belly \"Well, the buzzing has surely stopped!\""
          },
          {
            "q": "No more wriggle, jiggle & tickle inside you?",
            "a": "\"Why would you ask such a thing? How absurd\" she laughs... \"No I'm just peachy!\""
          },
          {
            "next": "done",
            "q": "Bye for now!",
            "a": "\"Take care my dear!\""
          }
        ]
      },
      "detail": "She's sitting in an old arm chair with a large smile on her face!",
      "title": "^old Lady^ (smiling)",
      "smell": "Oooh - old lady smell!"
    },
    "ring": {
      "pre": "the",
      "name": "ring",
      "eat": "After all that effort, you want to just eat it?",
      "detail": "It has an inscription on it \"One ^ring^ to rule them all, one ring to find them, One ring to bring them all and this one ain't that ring, sorry\". On the reverse side it reads \"However, this ring is still a great, perhaps very great, but at least ok-ish ^ring^.\"",
      "title": "^Ring^",
      "scripts": {
        "useRing": [
          "if",
          [
            "isTrig",
            "useRing"
          ],
          [
            "say",
            "You are already wearing it!"
          ],
          [
            [
              "trig",
              "useRing"
            ],
            [
              "say",
              "You slip the ^ring^ onto your index-finger. As you do so you feel a sensation like wet slugs kissing your earlobes... (Yeah, quite an odd feeling to be sure!). You know Something has changed, but what!?!"
            ],
            [
              "timeout",
              12,
              [
                "if",
                [
                  "isTrig",
                  "useRing"
                ],
                [
                  [
                    "anyKey"
                  ],
                  [
                    "say",
                    "|That's weird, the ^ring^ is starting to make your finger itch!"
                  ]
                ]
              ]
            ]
          ]
        ],
        "ringOff": [
          "if",
          [
            "isNotTrig",
            "useRing"
          ],
          [
            "say",
            "You are not wearing it!"
          ],
          [
            "if",
            [
              "getJSONAttr",
              [
                "strJoin",
                "rooms.",
                "@room",
                ".ring"
              ]
            ],
            [
              "say",
              "You know... I don't think this would be a safe place to remove the ring!"
            ],
            [
              [
                "clearTrig",
                "useRing"
              ],
              [
                "say",
                "You remove the ^ring^ from four finger, and instantly feel a lot more normal!"
              ]
            ]
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "use",
            "ring"
          ],
          "exec": [
            "exec",
            "objects.ring.scripts.useRing"
          ]
        },
        {
          "action": [
            "wear",
            "ring"
          ],
          "exec": [
            "exec",
            "objects.ring.scripts.useRing"
          ]
        },
        {
          "action": [
            "ring",
            "on"
          ],
          "exec": [
            "exec",
            "objects.ring.scripts.useRing"
          ]
        },
        {
          "action": [
            "ring",
            "off"
          ],
          "exec": [
            "exec",
            "objects.ring.scripts.ringOff"
          ]
        },
        {
          "action": [
            "remove",
            "ring"
          ],
          "exec": [
            "exec",
            "objects.ring.scripts.ringOff"
          ]
        },
        {
          "action": [
            "exam",
            "ring"
          ],
          "cond": [
            "isTrig",
            "useRing"
          ],
          "exec": [
            "say",
            "You are wearing the ^ring^ on your finger."
          ]
        },
        {
          "action": [
            "drop",
            "ring"
          ],
          "cond": [
            "isTrig",
            "useRing"
          ],
          "exec": [
            "say",
            "You can't unless you first remove the ^ring^ from your finger."
          ]
        },
        {
          "action": [
            "throw",
            "ring"
          ],
          "cond": [
            "isTrig",
            "useRing"
          ],
          "exec": [
            "say",
            "You can't unless you first remove the ^ring^ from your finger."
          ]
        }
      ]
    },
    "ice": {
      "pre": "some",
      "name": "ice",
      "talk": {
        "init": "welcome",
        "welcome": [
          "The ice looks friendly enough...",
          {
            "q": "Hello?",
            "a": "The ice melts a little under your breath."
          },
          {
            "q": "Do you want to build a snowman?",
            "a": "The ice doesn't look impressed."
          },
          {
            "q": "Ice ice baby!",
            "a": "I'm not 100% sure, but I feel the melting ice did attempt what could be interpreted as a dance move... but it could be just melting further."
          },
          {
            "next": "done",
            "q": "See you later!",
            "a": "The ice doesn't seem to agree and continues to melt"
          }
        ]
      },
      "detail": "The ^ice^ is cold wet and melting fast!",
      "title": "melting ^ice^",
      "actions": [
        {
          "action": [
            "eat",
            "ice"
          ],
          "exec": [
            [
              "say",
              "Crunch, crunch... can't get enough of this tasty ice!"
            ],
            "setObjectAttr",
            "ice",
            "room",
            "bin"
          ]
        },
        {
          "action": [
            "smell",
            "ice"
          ],
          "exec": [
            [
              "say",
              "Smells a little fishy still"
            ],
            "setObjectAttr",
            "ice",
            "room",
            "bin"
          ]
        },
        {
          "action": [
            "ice",
            "bucket"
          ],
          "cond": [
            "isPresent",
            "bucket"
          ],
          "exec": [
            "say",
            "Nah, I don't want ice in my bucket"
          ]
        },
        {
          "action": [
            "bucket",
            "ice"
          ],
          "cond": [
            "isPresent",
            "bucket"
          ],
          "exec": [
            "say",
            "Nah, I don't want ice in my bucket"
          ]
        }
      ]
    },
    "dragon": {
      "take": "Are you completely mad???",
      "pre": "the",
      "name": "dragon",
      "eat": "You take the dragon between your fingers and pop it into you mouth... yum... tastes like chicken!||With a start you wake from your little day-dream... gosh, why is it you are always thinking of food?",
      "talk": {
        "init": "welcome",
        "take": false,
        "mission": [
          "The dragon's eyes widen, \"Oh child\" she says, \"I knew your heart was good... this was meant to be. You must search out my Four Eggs and return them to me. If this task you can complete then great power I can bestow upon you.\"",
          {
            "next": "done",
            "q": "Right, I'm off to find them!",
            "a": "\"The ancient spirits of the Fiery Dragon's go with you child...\" the ^dragon^ whispers.",
            "exec": [
              [
                "setJSONAttr",
                "objects.dragon.talk.init",
                "return"
              ],
              [
                "exec",
                "scripts.newGoal",
                "eggs"
              ]
            ]
          }
        ],
        "welcome": [
          "|The dragon lifts its head and looks down upon you, its voice thunders off the cave walls \"SO HERE YOU ARE!?! DID YOU THINK I COULD BE FOOLED AGAIN? NO, IT IS YOU WHO ARE THE FOOL TO HAVE RETURNED ONCE MORE FOR MY REMAINING EGG!",
          {
            "next": "story",
            "q": "Wait dragon, I didn't take your eggs!",
            "a": "The dragon throws its head back and laughs deeply \"REALLY...???\". Then it lowers slowly and looks at you closely... \"No, you speak true, I see your heart does not intend harm.\"",
            "exec": [
              "exec",
              "objects.dragon.scripts.initDragonRoom"
            ]
          },
          {
            "next": "story",
            "q": "I'm sorry dragon, I was just looking!",
            "a": "The dragon throws its head back and laughs deeply \"REALLY...???\". Then it lowers slowly and looks at you closely... \"No, you speak true, I see your heart does not intend harm.\"",
            "exec": [
              "exec",
              "objects.dragon.scripts.initDragonRoom"
            ]
          }
        ],
        "return": [
          "The dragon greets you \"Welcome back child.\"",
          {
            "q": "How many eggs were taken?",
            "a": "The dragon's expression changes to a look of deep sadness, \"4 of my beautiful eggs\", please find them, and return them to me!"
          },
          {
            "q": "What will you give me?",
            "a": "The dragon laughs, then smiling says \"Child, If you return my precious ^eggs^, as I know you will, then I will bless you with exactly what you deserve!\""
          },
          {
            "q": "Adventuring Prince?",
            "a": "The dragon smiles, \"Yes!\" she says, \"You are my adventuring Prince!\" she laughs happily... \"You will succeed in finding my eggs because you have a true heart!\"",
            "cond": [
              "isTrig",
              "prince"
            ]
          },
          {
            "next": "done",
            "q": "I must go!",
            "a": "\"Of course! Hurry now and let the ancient spirits of the Fiery Dragons go with you child...\" she replies."
          }
        ],
        "story": [
          "The dragon breaths deeply.",
          {
            "q": "Why don't you visit the village?",
            "a": "The dragon laughs angrily - \"And leave this, my last precious egg for wicked people to steal from me? I can never leave this cave again.\""
          },
          {
            "q": "How many eggs were taken?",
            "a": "\"FOUR EGGS!\" the dragon's voice is heavy with rage. You fear for what she might do, but she see's your expression and calms, \"Yes, Four of my Five beautiful eggs were stolen from me.\"."
          },
          {
            "q": "Who took your eggs",
            "a": "The dragon turns her head away, \"I do not know...\". \"But whoever it was...\", she turns her head back, her eyes glistening and she doesn't need to finish her sentence."
          },
          {
            "next": "mission",
            "q": "I will help find your eggs!",
            "exec": [
              [
                "setJSONAttr",
                "objects.dragon.talk.init",
                "mission"
              ],
              [
                "trig",
                "missionEgg"
              ]
            ]
          }
        ]
      },
      "detail": "What an amazing creature... The ^dragon^'s scales are bright green with a hint of red around its face and forearms. Its wings are drawn up across its back and its tail is thick and powerful. However the most striking thing is its face which is both beautiful and terrifying all at the same time.",
      "title": "^Fiery Dragon^",
      "smell": "All I can smell is brimstone.",
      "scripts": {
        "initDragonRoom": [
          [
            "set",
            "@room",
            "caveDragon"
          ],
          [
            "setJSONAttr",
            "objects.dragon.talk.init",
            "story"
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "talk",
            "dragon"
          ],
          "exec": [
            "talk",
            "objects.dragon.talk"
          ]
        }
      ],
      "room": "caveDragon"
    },
    "acorn": {
      "pre": "an",
      "name": "acorn",
      "eat": "Really? I'm not a squirrel you know!",
      "detail": "It's small and shiny.",
      "title": "^Acorn^"
    },
    "goldenEgg": {
      "pre": "a",
      "afterTake": [
        "goal",
        "eggKing"
      ],
      "name": "egg",
      "eat": "This ^egg^ is a keeper!",
      "detail": "It's a large golden egg. It's obviously been highly polished, but you are amazed at the intricate patterns all over the surface, like tiny golden scales.",
      "title": "^Golden Egg^",
      "smell": "To be honest, the egg doesn't really smell of anything in particular.",
      "full": "Golden Egg"
    },
    "beanPlant": {
      "pre": "an",
      "name": "plant",
      "title": "old ^plant^ growing up some garden ^canes^",
      "scripts": {
        "takeCane": [
          [
            "say",
            "You pull out one of the garden canes."
          ],
          [
            "trig",
            "foundBeans"
          ],
          [
            "setObjectAttr",
            "beans",
            "room",
            "@room"
          ],
          [
            "setObjectAttr",
            "cane",
            "room",
            "inventory"
          ]
        ],
        "examPlant": [
          "if",
          [
            "isTrig",
            "foundBeans"
          ],
          [
            "say",
            "The plant is growing up some long garden ^canes^, the plant is long past its best and is all but dead."
          ],
          [
            [
              "say",
              "The plant is growing up some long garden ^canes^, the plant is long past its best and is all but dead, but around its base you can see a few old ^beans^ lying on the soil where they must have fallen."
            ],
            [
              "trig",
              "foundBeans"
            ],
            [
              "setObjectAttr",
              "beans",
              "room",
              "@room"
            ],
            [
              "setObjectAttr",
              "cane",
              "room",
              "@room"
            ]
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "plant"
          ],
          "cond": [
            "isNotTrig",
            "foundBeans"
          ],
          "exec": [
            "exec",
            "objects.beanPlant.scripts.examPlant"
          ]
        },
        {
          "action": [
            "take",
            "cane"
          ],
          "cond": [
            "isNotTrig",
            "foundBeans"
          ],
          "exec": [
            "exec",
            "objects.beanPlant.scripts.takeCane"
          ]
        },
        {
          "action": [
            "exam",
            "cane"
          ],
          "cond": [
            "isNotTrig",
            "foundBeans"
          ],
          "exec": [
            "exec",
            "objects.beanPlant.scripts.examPlant"
          ]
        },
        {
          "action": [
            "exam",
            "plant"
          ],
          "exec": [
            "exec",
            "objects.beanPlant.scripts.examPlant"
          ]
        },
        {
          "action": [
            "eat",
            "plant"
          ],
          "exec": [
            "say",
            "There's nothing left to eat on this plant..."
          ]
        },
        {
          "action": [
            "take",
            "plant"
          ],
          "exec": [
            "exec",
            "objects.beanPlant.scripts.examPlant"
          ]
        }
      ],
      "room": "vegPatch"
    },
    "cheese": {
      "pre": "a",
      "name": "cheese",
      "detail": "It's a very fine, but very smelly, hard ^cheese^ - I bet this would bring all the mice running from a mile around!!!",
      "title": "^large cheese^",
      "smell": "Wow... what a pong! I bet this would bring all the mice running from a mile around!!!",
      "actions": [
        {
          "action": [
            "eat",
            "cheese"
          ],
          "exec": [
            "say",
            "You take a small bite, but gosh it's strong. I think I'll try not to eat too much of that!"
          ]
        },
        {
          "action": [
            "talk",
            "cheese"
          ],
          "exec": [
            [
              "say",
              "Hi cheese...? "
            ],
            [
              "anyKey"
            ],
            [
              "say",
              "|There's no response."
            ]
          ]
        },
        {
          "action": [
            "push",
            "cheese"
          ],
          "exec": [
            "say",
            "The cheese rolls..."
          ]
        }
      ]
    },
    "paperBall": {
      "take": "It's a FIVE FOOT tall ball of ^paper^, it's like the same size as you... I can't take it!",
      "pre": "a",
      "name": "paper",
      "title": "huge ball of ^paper^",
      "scripts": {
        "pushBall": [
          "if",
          [
            "equals",
            "@room",
            "clouds"
          ],
          [
            [
              "say",
              "You give the ^paper ball^ a shove and it begins to roll again... oops right off the edge of the cloud!"
            ],
            [
              "setObjectAttr",
              "paperBall",
              "room",
              "forestGlade"
            ]
          ],
          [
            "say",
            "You give the ^paper ball^ a shove but it just stays put now as its stuck in the earth after its long fall."
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "exam",
            "paper"
          ],
          "exec": [
            [
              "say",
              "Who could scrunch up a sheet of ^paper^ that large!?! You notice it has writing on it but you are not strong enough to unfold it, however by following around the creases you are able to make out some of the words:"
            ],
            [
              "anyKey"
            ],
            [
              "say",
              "|\"Bread, Butter, Cheese, Milk x2,"
            ],
            [
              "anyKey"
            ],
            [
              "say",
              "Jar of Pickles, 2 bars of Chocolate,"
            ],
            [
              "anyKey"
            ],
            [
              "say",
              "3 Children, and a bag of frozen garden peas.\""
            ],
            [
              "anyKey"
            ],
            [
              "say",
              "|Don't know about you... but that bit about children has me a tad worried...?"
            ]
          ]
        },
        {
          "action": [
            "push",
            "paper"
          ],
          "exec": [
            "exec",
            "objects.paperBall.scripts.pushBall"
          ]
        },
        {
          "action": [
            "kick",
            "paper"
          ],
          "exec": [
            "exec",
            "objects.paperBall.scripts.pushBall"
          ]
        },
        {
          "action": [
            "break",
            "paper"
          ],
          "exec": [
            "exec",
            "objects.paperBall.scripts.pushBall"
          ]
        }
      ]
    },
    "mouse": {
      "take": "Ya right... You do realise this is a ^giant^ mouse?",
      "pre": "a",
      "name": "mouse",
      "eat": "That giant ^mouse^ is more likely to eat me!",
      "talk": {
        "init": "welcome",
        "hiding": [
          "The mouse squeaks... \"Oh dear, oh dear... I have had a happy life living here in this castle, but recently things have changed for the worse.\" the mouse signs, \". I've been too scared to come out of my hole to find food!",
          {
            "next": "notOut",
            "q": "What changed?"
          },
          {
            "next": "notOut",
            "q": "What are you scared of?"
          }
        ],
        "notOut": [
          "The mouse looks panicky, \"It's the giant! That thing he has on the table? Ever since he got that shiny little thing he has been spending all his time sitting at his table. He hardly ever leaves it alone! So I just can't get out!\"",
          {
            "q": "What has he got on the table?",
            "a": "Squeak! \"I don't really know what it is, but he seams to really love it... He stares at it all day long!\""
          },
          {
            "next": "welcome",
            "q": "Does the giant never sleep?",
            "a": "\"Hardly ever no!\" the mouse exclaims, \"But when he needs to he get out that music... ummm, music, string buddy thing of his and he says 'play me firework' and then he's finally asleep! But he hasn't done that for days now!\"",
            "silent": true,
            "exec": [
              "trig",
              "firework"
            ]
          }
        ],
        "welcome": [
          "The mouse looks up at you over the ball of cheese.",
          {
            "q": "You were really hungry!",
            "a": "The mouse scrunches up his face, \"Oh gosh yes\" he squeaks, \"So! Hungry!\""
          },
          {
            "next": "hiding",
            "q": "Why were you hiding in the straw?"
          },
          {
            "q": "Why does the giant like 'firework'?",
            "a": "The mouse looks puzzled, \"I don't know! I like the tune, but it seems to just send the giant to sleep!\".",
            "cond": [
              "isTrig",
              "firework"
            ]
          },
          {
            "next": "done",
            "q": "Thanks, bye!",
            "a": "\"Bye\" squeaks the mouse."
          }
        ]
      },
      "detail": "The ^mouse^ (like everything up in this cloud) is very large, around about the same height as yourself. He's sitting up on his haunches and tucking in hungrily to the ball of ^cheese^ your brought him.",
      "title": "^giant mouse^",
      "list": false,
      "smell": "Smells like a rodent! No surprise there.",
      "room": "giantMouseHole2"
    },
    "manRags": {
      "take": "No thanks, no offence meant, but he could do with a bath, poor guy!",
      "pre": "a",
      "name": "man",
      "eat": "No way... even 'if' he had a bath first!",
      "talk": {
        "thanks": [
          "|\"Oh Sir, God bless you - God bless You!!!\" he says over and over.",
          {
            "q": "Don't mention it",
            "a": "He looks at you with widened eyes, \"You are too kind Sir...\""
          },
          {
            "q": "What's your story?",
            "a": "He looks up, \"Me sir...? I've just fallen on hard times is all, but thank you for this coin, it means a lot!\" he waves the shiny coin at you in thanks.",
            "cond": [
              "isNotTrig",
              "hardTimes1"
            ],
            "exec": [
              "trig",
              "hardTimes1"
            ]
          },
          {
            "next": "story1",
            "q": "Hard times?",
            "cond": [
              "isTrig",
              "hardTimes1"
            ]
          },
          {
            "next": "done",
            "q": "Bye."
          }
        ],
        "init": "welcome",
        "lost": [
          "\"We lost it - Didn't we my precious!?!\" he mutters",
          {
            "q": "Where did you lose it?",
            "a": "\"We knows that we do! But it's unreachable... It's gone forever... At the bottom of a piranha infested pool!\" he shouts... \"It's LOST!!!\""
          },
          {
            "q": "It really made you un-smell-able?",
            "a": "He nodded vigorously, \"Yess-s-s-s, it was... wonderful... it was my love, my joy... my precious-s-s!!!\""
          },
          {
            "q": "Did you just change personality?",
            "a": "He looks at you quizzically and then grunts \"I don't know what you're talking about - Gollem Gollem!\"."
          },
          {
            "next": "done",
            "q": "Bye then!",
            "a": "\"Gollem... Gollem...\" he coughs"
          }
        ],
        "story1": [
          "\"Yes Sir\" he nods, \"Real hard. You see... I hate baths! Silly I know, but I can't stand them... showers, washing! They're not for me.\"",
          {
            "next": "story2",
            "q": "Yeah me too!",
            "a": "The man grins a little, \"Hah, well the problem is people started to avoid getting to close to me because. Well, I started to smell rather...\" he chuckles, \"rather bad!\"."
          },
          {
            "next": "story2",
            "q": "Doesn't that make you rather smelly?",
            "a": "The man looks down, \"Yes, well Sir, that is the sad truth.\""
          }
        ],
        "story2": [
          "\"However, many years ago the solution to my predicament presented itself! A was able to acquire (from a passing Sorcerer) a magic ring of great power!\"",
          {
            "next": "lost",
            "q": "Wow, what did it do?",
            "a": "\"It made me invisible!!!\" he grinned, \"completely INVISIBLE TO THE NOSE! - Yes it was a ring of un-smell-ability. One of a kind it was.\" he slumped down looking glum. Then muttered \"But we lost it didn't we my precious.\"",
            "silent": true,
            "exec": [
              "setJSONAttr",
              "objects.manRags.talk.init",
              "lost"
            ]
          }
        ],
        "welcome": [
          "\"Could you spare a coin sir?'\" the man mutters (a bad odour is blowing around him)",
          {
            "next": "done",
            "q": "Yes of course, hold on...",
            "a": "He looks up with excitement in his eyes... (use the action 'give ^coin^')",
            "cond": [
              "isTrig",
              "hasCoin"
            ]
          },
          {
            "q": "What's your story?",
            "a": "He looks up, \"Me sir...? I've just fallen on hard times is all. Could you spare us a coin?\" he lifts his hands towards you.",
            "cond": [
              "isNotTrig",
              "hardTimes1"
            ],
            "exec": [
              "trig",
              "hardTimes1"
            ]
          },
          {
            "q": "Hard times?",
            "a": "\"Yes Sir\" he nods, \"Real hard. How about a coin for my story sir...? What do you say, yes...?\"",
            "cond": [
              "isTrig",
              "hardTimes1"
            ]
          },
          {
            "next": "done",
            "q": "I'm sorry, I don't have any money...",
            "a": "He doesn't look up but rolls off the usual \"God bless you sir, Good day.\""
          }
        ]
      },
      "title": "^Man^ in rags",
      "list": false,
      "smell": "I can smell him from here... he could really do with a bath!!!",
      "actions": [
        {
          "action": [
            "give",
            "coin"
          ],
          "exec": [
            "if",
            [
              "isTrig",
              "hasCoin"
            ],
            [
              "if",
              [
                "getObjectAttr",
                "manRags",
                "happy"
              ],
              [
                "say",
                "The man looks up at you, \"That is very kind sir, but I won't take any more of your coin.\""
              ],
              [
                [
                  "say",
                  "You hand the man a coin and his eyes light up with joy..."
                ],
                [
                  "if",
                  [
                    "isPresent",
                    "coins2"
                  ],
                  [
                    "swapObject",
                    "coins2",
                    "coin"
                  ],
                  [
                    [
                      "setObjectAttr",
                      "coin",
                      "room",
                      "bin"
                    ],
                    [
                      "clearTrig",
                      "hasCoin"
                    ]
                  ]
                ],
                [
                  "setJSONAttr",
                  "objects.manRags.talk.init",
                  "thanks"
                ],
                [
                  "setObjectAttr",
                  "manRags",
                  "happy",
                  true
                ],
                [
                  "goal",
                  "beggar"
                ],
                [
                  "anyKey"
                ],
                [
                  "talk",
                  "objects.manRags.talk"
                ]
              ]
            ],
            [
              "say",
              "You can't... You have no coins to give him."
            ]
          ]
        },
        {
          "action": [
            "exam",
            "man"
          ],
          "exec": [
            "if",
            [
              "getObjectAttr",
              "manRags",
              "happy"
            ],
            [
              [
                "say",
                "The man is wrapped in a dirty, ragged cloak and is rather on the smelly side."
              ]
            ],
            [
              [
                "say",
                "The man is wrapped in a dirty, ragged cloak and is rather on the smelly side. Without him looking up you hear him mutter \"Could you spare a coin sir?\"."
              ],
              [
                "exec",
                "scripts.newGoal",
                "beggar"
              ]
            ]
          ]
        }
      ],
      "room": "castleGates"
    },
    "birdSeed": {
      "pre": "some",
      "name": "seed",
      "eat": "You nibble one of the ^seed^s, yum - pretty nice, but I think I'll keep the rest for the birds :)",
      "detail": "A quality grain of ^bird seed^ bought from the best Vet clinic in the village!",
      "title": "^Bird Seed^",
      "smell": "They have a sweet, earthy smell",
      "scripts": {
        "dropSeed": [
          "if",
          [
            "equals",
            "@room",
            "vilGarden"
          ],
          [
            [
              "say",
              "Cautiously, aware that the large ^Wild Pidgey^ in the tree above you is paying close attention, you throw the seed to the ground... In a hail of leaves, branches, and general oak foliage the ^Wild Pidgey^ rockets to the earth and begins to peck hungrily at the seed."
            ],
            [
              "setObjectAttr",
              "wildPidgey",
              "room",
              "@room"
            ],
            [
              "setObjectAttr",
              "acorn",
              "room",
              "@room"
            ],
            [
              "setObjectAttr",
              "birdSeed",
              "room",
              "bin"
            ],
            [
              "trig",
              "pokeOutTree"
            ]
          ],
          [
            "if",
            [
              "equals",
              "@room",
              "bog7"
            ],
            [
              [
                "say",
                "Cautiously, you scatter a some of the ^bird seed^ on the ground in front of you. The huge ^chicken^ simply stares at you unblinkingly and bobs his head - Apparently it's not hungry."
              ]
            ],
            [
              [
                "set",
                "@1",
                [
                  "getJSONAttr",
                  [
                    "strJoin",
                    "rooms.",
                    "@room",
                    ".birds"
                  ]
                ]
              ],
              [
                "if",
                "@1",
                [
                  "say",
                  "You scatter a few seeds on the floor and a few nearby birds slap down and greedily peck them up."
                ],
                [
                  "say",
                  "I don't think this is the place to feed birds!"
                ]
              ]
            ]
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "drop",
            "seed"
          ],
          "exec": [
            "exec",
            "objects.birdSeed.scripts.dropSeed"
          ]
        },
        {
          "action": [
            "use",
            "seed"
          ],
          "exec": [
            "exec",
            "objects.birdSeed.scripts.dropSeed"
          ]
        }
      ]
    },
    "witchCottageObj": {
      "take": "Pick up a cottage? How am I supposed to do that!",
      "name": "cottage",
      "eat": "Does it look like a gingerbread cottage? No, this is wood... I shall not be eating it.",
      "detail": "The ^cottage^ is a puzzle of shadows. Made of the same dark wood as the forest and looks ancient. The roof is sagging deeply but somehow still is bearing up. You notice the front door is ajar, and you have the strangest feeling that the darkness stillness within is urging you to enter...?",
      "list": false,
      "smell": "Smells of old damp wood.",
      "actions": [
        {
          "action": [
            "walk",
            "cottage"
          ],
          "exec": [
            [
              "set",
              "@room",
              "witchCottage"
            ],
            [
              "exec",
              "scripts.look"
            ]
          ]
        }
      ],
      "room": "forest2"
    },
    "hat": {
      "pre": "a",
      "name": "hat",
      "eat": "You begin by eating the rim, then slowly work your way up the edges until the finally poke the last tip of the ^hat^ into your mouth... Delicious!!! I always wanted to eat a hat. Wait a minute... how come it's still here? What kind of magic is this!!!",
      "detail": "It's a very dark, pointy black ^hat^ with a wide rim. It has witch written all over it! (metaphorically speaking of course).",
      "title": "large ^black hat^"
    },
    "cellKey": {
      "pre": "an",
      "name": "key",
      "eat": "The key to a healthy diet? I don't think so ;)",
      "detail": "Its a large black key, corroded from years underwater. Still, it looks functional. It has some writing on it: 'Iron Will, Barleyport'.",
      "title": "^iron key^",
      "smell": "Not sure... it just smells of the sea.",
      "room": "arm",
      "full": "iron key"
    },
    "magicHarp": {
      "take": "The ^golden harp^ is too big for me to carry, but I can probably push it around as it's on wheels.",
      "pre": "a",
      "name": "harp",
      "talk": {
        "init": "welcome",
        "welcome": [
          "The ^harp^ hums expectantly.",
          {
            "next": "done",
            "q": "Please play 'Firework'?",
            "cond": [
              "and",
              [
                "isTrig",
                "firework"
              ],
              [
                "equals",
                "@room",
                "giantsCastle"
              ]
            ],
            "exec": [
              [
                "say",
                "The harp bursts into a beautiful rendition of 'firework'."
              ],
              [
                "anyKey"
              ],
              [
                "say",
                "The giant starts to tap his foot..."
              ],
              [
                "anyKey"
              ],
              [
                "say",
                "Then his head starts to nod..."
              ],
              [
                "anyKey"
              ],
              [
                "say",
                "Now he's snoring!!! Yes!"
              ],
              [
                "trig",
                "sleeping"
              ]
            ]
          },
          {
            "next": "done",
            "q": "Please play for me?",
            "cond": [
              "equals",
              "@room",
              "giantsCastle"
            ],
            "exec": [
              [
                "say",
                "The harp begins to play..."
              ],
              [
                "anyKey"
              ],
              [
                "say",
                "The giant starts to tap his foot... Then suddenly jumps to his feet in surprise \"Harp!?!\" he shouts, \"Who got you out?\". He turns round and sees you!!! You run our of the castle as fast as you can!"
              ],
              [
                "anyKey"
              ],
              [
                "setObjectRoom",
                "harp",
                "giantsBedroom"
              ],
              [
                "exec",
                "scripts.walkTo",
                "clouds"
              ]
            ]
          },
          {
            "q": "Can you speak?",
            "a": "The harp hums expectantly..."
          },
          {
            "q": "Please play 'Firework' for me?",
            "a": "The harp bursts into a beautiful rendition of 'firework' which you enjoy thoroughly.",
            "cond": [
              "and",
              [
                "isTrig",
                "firework"
              ],
              [
                "notEquals",
                "@room",
                "giantsCastle"
              ]
            ]
          },
          {
            "q": "Please play for me?",
            "a": "The harp magically plays a tune. Wow that was cool!",
            "cond": [
              "notEquals",
              "@room",
              "giantsCastle"
            ]
          },
          {
            "next": "done",
            "q": "Good bye!"
          }
        ]
      },
      "title": "^golden harp^",
      "scripts": {
        "pushHarp": [
          "if",
          [
            "equals",
            "@room",
            "giantsBedroom"
          ],
          [
            [
              "say",
              "You lift one end of the ^harp^ and push it back into the ^main hall^."
            ],
            [
              "anyKey"
            ],
            [
              "setObjectAttr",
              "magicHarp",
              "room",
              "giantsCastle"
            ],
            [
              "exec",
              "scripts.walkTo",
              "giantsCastle"
            ]
          ],
          [
            "say",
            "I don't want to move it any more than this."
          ]
        ],
        "examBox": [
          "if",
          [
            "isTrig",
            "examBox"
          ],
          [
            "say",
            "There's nothing else in the box"
          ],
          [
            [
              "say",
              "You pull open the box's lid and find within it a ^magic harp^!"
            ],
            [
              "setObjectAttr",
              "harp",
              "room",
              "@room"
            ]
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "exam",
            "harp"
          ],
          "exec": [
            [
              "say",
              "The ^harp^ is made of shining gold and stands at about the same height as yourself. You move your hands over the strips and the harp lets out a kind of harmonic giggle!"
            ],
            [
              "anyKey"
            ],
            [
              "say",
              ""
            ],
            [
              "talk",
              "objects.magicHarp.talk"
            ]
          ]
        },
        {
          "action": [
            "push",
            "harp"
          ],
          "exec": [
            "exec",
            "objects.magicHarp.scripts.pushHarp"
          ]
        },
        {
          "action": [
            "pull",
            "harp"
          ],
          "exec": [
            "exec",
            "objects.magicHarp.scripts.pushHarp"
          ]
        },
        {
          "action": [
            "move",
            "harp"
          ],
          "exec": [
            "exec",
            "objects.magicHarp.scripts.pushHarp"
          ]
        },
        {
          "action": [
            "use",
            "harp"
          ],
          "exec": [
            [
              "say",
              "You move your hands over the strips and the harp lets out a kind of harmonic giggle!"
            ],
            [
              "anyKey"
            ],
            [
              "say",
              ""
            ],
            [
              "talk",
              "objects.magicHarp.talk"
            ]
          ]
        },
        {
          "action": [
            "play",
            "harp"
          ],
          "exec": [
            [
              "say",
              "You move your hands over the strips and the harp lets out a kind of harmonic giggle!"
            ],
            [
              "anyKey"
            ],
            [
              "say",
              ""
            ],
            [
              "talk",
              "objects.magicHarp.talk"
            ]
          ]
        }
      ]
    },
    "bunny": {
      "pre": "a",
      "name": "bunny",
      "eat": "Eat this cute... urm... fat... bunny rabbit? No way!",
      "talk": {
        "init": "default",
        "default": [
          "The bunny's nose twitches and he looks a little tense.",
          {
            "q": "Hey little bunny!",
            "a": "\"*twitch*\""
          },
          {
            "next": "eat",
            "q": "Did you eat all those cabbages?"
          },
          {
            "q": "Are you hungry?",
            "a": "The bunny looks panicked and tries to scramble away, only he's too bloated and can't go anywhere!"
          },
          {
            "next": "done",
            "q": "Bye...",
            "a": "The bunny relaxes."
          }
        ],
        "eat": [
          "The bunny guiltily tries to avoid your gaze.",
          {
            "q": "You did didn't you!",
            "a": "The rabbits ears flap over its face and it turns it's back on you"
          },
          {
            "q": "Just how much did you eat?",
            "a": "There is a loud silence from the rabbit..."
          },
          {
            "next": "done",
            "q": "Do you want a trip to the vet?",
            "a": "The rabbit relaxes a little, perhaps that is a good idea!"
          }
        ]
      },
      "detail": "This ^bunny^ is so fat that his fur is pulled taught around his body like a balloon, in fact his belly is so rounded that his little paws don't touch the ground! I think he's eaten too many of those ^cabbages^!",
      "title": "^fat bunny^",
      "smell": "Smells... smells... oh so bad actually, like a flatulent cabbage!",
      "scripts": {
        "giveBunny": [
          "if",
          [
            "isPresent",
            "vet"
          ],
          [
            [
              "say",
              "You place the ^bunny^ carefully on the counter top,. \"Are yes...\" says the vet as she moves her hands up the rabbits flanks (The rabbit's ears are flat on its back and its hind legs begin to scrabble about on the counter). \"There there its ok bunny.\" at this she turns back to you."
            ],
            [
              "say",
              "|\"I think this bunny has just over eaten? I shouldn't worry, it will soon sort itself out, I expect all he needs is a little massage and...\" she gentle ^pushes^ on the ^bunny^'s belly."
            ],
            [
              "anyKey"
            ],
            [
              "say",
              "|The ^bunny^'s eyes bulge, its ears spring up, and then the tip of its tiny white tail goes ballistic. A silent, yet overpoweringly strong smell fills the room. The vet holds her nose and blinks \"Yes... I believe that this rabbit has been on the cabbage! Gosh look at that, I can actually see a green ^cloud^! Be careful not to do that in public, it's a real room clearer!\" The vet quickly hands the ^bunny^ back to you."
            ],
            [
              "exec",
              "objects.bunny.scripts.pushRabbit2"
            ]
          ],
          [
            "say",
            "I don't want to do that."
          ]
        ],
        "pushRabbit2": [
          [
            "if",
            [
              "isPresent",
              "king"
            ],
            [
              [
                "anyKey"
              ],
              [
                "set",
                "@room",
                "castleThroneCloud"
              ],
              [
                "say",
                "|The King and his guards suddenly turn green in the face and begin to panic as they try to hold their mouths and noses. Gasping and with muffled shouts they dash madly out of the room!"
              ]
            ]
          ],
          [
            "if",
            [
              "isPresent",
              "witch"
            ],
            [
              [
                "anyKey"
              ],
              [
                "say",
                "|The ^witch^'s gaze follows the green cloud as it drifts around her cottage. Then she raises herself up on her tiptoes inhaling deeply \"Ahhh!!\" She cackles, \"What a delightful aroma!\"."
              ]
            ]
          ],
          [
            "if",
            [
              "isPresent",
              "goldenMan"
            ],
            [
              [
                "anyKey"
              ],
              [
                "say",
                "|The ^golden man^'s eyes close and he starts to sway around... But you are impressed that he somehow holds his position."
              ]
            ]
          ],
          [
            "if",
            [
              "isPresent",
              "dwarf"
            ],
            [
              [
                "anyKey"
              ],
              [
                "say",
                "|The ^dwarf^ begins to cough and waft his hand about his face. \"That's not a good smell...\" he grunts, then looking up \"But I've smelt worse!!!\" he chuckles."
              ]
            ]
          ],
          [
            "if",
            [
              "isPresent",
              "manRags"
            ],
            [
              [
                "anyKey"
              ],
              [
                "say",
                "|The ^man^ looks up impressed... \"Would you smell that!?! It's even more potent than me!\"."
              ]
            ]
          ],
          [
            "if",
            [
              "isPresent",
              "dragon"
            ],
            [
              [
                "anyKey"
              ],
              [
                "say",
                "|The ^dragon^ draws back her head quickly, her nostrils contracting - \"Child...? Why have you contaminated my cave with this... this smell?\" she questions."
              ]
            ]
          ],
          [
            "if",
            [
              "isPresent",
              "merGuard"
            ],
            [
              [
                "anyKey"
              ],
              [
                "say",
                "|The ^merman guard^ watches the cloud float around in the water... He doesn't seem overly bothered by it."
              ]
            ]
          ],
          [
            "if",
            [
              "isPresent",
              "merGuard"
            ],
            [
              [
                "anyKey"
              ],
              [
                "say",
                "|The ^merman guard^ watches the cloud float around in the water... He doesn't seem overly bothered by it."
              ]
            ]
          ],
          [
            "if",
            [
              "isPresent",
              "merKing"
            ],
            [
              [
                "anyKey"
              ],
              [
                "say",
                "|The ^king^ looks a little surprised by the floating cloud... But he seems to accept it and turn back to you with an amused expression on his face."
              ]
            ]
          ],
          [
            "if",
            [
              "isPresent",
              "fishmonger"
            ],
            [
              [
                "anyKey"
              ],
              [
                "say",
                "|The ^fishmonger^ puts his hand over his face - \"Gosh, you trying to kill me child?\" he mumbles through his fingers."
              ]
            ]
          ],
          [
            "if",
            [
              "equals",
              "@room",
              "giantsCastle"
            ],
            [
              [
                "anyKey"
              ],
              [
                "say",
                "|The smell doesn't appear to have any impact on the ^giant^... I guess he's just finely tuned to the smell of human?\"."
              ]
            ]
          ],
          [
            "setObjectAttr",
            "rabbitCloud",
            "room",
            "@room"
          ],
          [
            "timeout",
            3,
            [
              [
                "if",
                [
                  "isPresent",
                  "rabbitCloud"
                ],
                [
                  "say",
                  "|Oh thank goodness, the smelly green cloud has gone! I can breath again!"
                ]
              ],
              [
                "setObjectAttr",
                "rabbitCloud",
                "room",
                "bin"
              ]
            ]
          ]
        ],
        "pushRabbit": [
          [
            "say",
            "You give the ^bunny^'s tummy a gentle push... The ^bunny^ squirms, eyes bulge, and then lets out a silent but very... VERY... deadly fart! Oh my gosh it brings water to your eyes! Seriously, this bunny has eaten WAY too much cabbage, you can actually see a vivid green fart ^cloud^ hovering about you!"
          ],
          [
            "exec",
            "objects.bunny.scripts.pushRabbit2"
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "push",
            "bunny"
          ],
          "exec": [
            "exec",
            "objects.bunny.scripts.pushRabbit"
          ]
        },
        {
          "action": [
            "use",
            "bunny"
          ],
          "exec": [
            "exec",
            "objects.bunny.scripts.pushRabbit"
          ]
        },
        {
          "action": [
            "squeeze",
            "bunny"
          ],
          "exec": [
            "exec",
            "objects.bunny.scripts.pushRabbit"
          ]
        },
        {
          "action": [
            "give",
            "bunny"
          ],
          "exec": [
            "exec",
            "objects.bunny.scripts.giveBunny"
          ]
        },
        {
          "action": [
            "kick",
            "bunny"
          ],
          "exec": [
            "say",
            "No way! Poor little fella!"
          ]
        },
        {
          "action": [
            "break",
            "bunny"
          ],
          "exec": [
            "say",
            "No way! Poor little fella!"
          ]
        }
      ],
      "room": "vegPatch"
    },
    "crown": {
      "pre": "the",
      "name": "crown",
      "eat": "Yeah right... Who does that?",
      "detail": "The crown is large and made of solid gold. Its rim is inlaid with many shining red gems!",
      "title": "Kings ^Crown^",
      "smell": "Smells expensive!",
      "scripts": {
        "quickRemove": [
          "if",
          [
            "isTrig",
            "wearCrown"
          ],
          [
            [
              "say",
              "You quickly remember and snatch the ^crown^ off your head!"
            ],
            [
              "clearTrig",
              "wearCrown"
            ]
          ]
        ],
        "removeCrown": [
          "if",
          [
            "isTrig",
            "wearCrown"
          ],
          [
            [
              "say",
              "You remove the crown"
            ],
            [
              "clearTrig",
              "wearCrown"
            ]
          ],
          [
            "say",
            "You are not wearing it."
          ]
        ],
        "wearCrown": [
          "if",
          [
            "isTrig",
            "wearCrown"
          ],
          [
            "say",
            "You are already wearing it!"
          ],
          [
            [
              "if",
              [
                "getJSONAttr",
                [
                  "strJoin",
                  "rooms.",
                  "@room",
                  ".crown"
                ]
              ],
              [
                [
                  "say",
                  "Not in here, the King would have my head!"
                ]
              ],
              [
                [
                  "trig",
                  "wearCrown"
                ],
                [
                  "say",
                  "You place the crown on your head."
                ]
              ]
            ]
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "wear",
            "crown"
          ],
          "exec": [
            "exec",
            "objects.crown.scripts.wearCrown"
          ]
        },
        {
          "action": [
            "use",
            "crown"
          ],
          "exec": [
            "exec",
            "objects.crown.scripts.wearCrown"
          ]
        },
        {
          "action": [
            "remove",
            "crown"
          ],
          "exec": [
            "exec",
            "objects.crown.scripts.removeCrown"
          ]
        }
      ],
      "room": "castleTreasury"
    },
    "goldenMan": {
      "take": "That's not really an option since you discovered he was actually a man after all...",
      "pre": "the",
      "name": "man",
      "eat": "Cannibalism isn't my thing.",
      "talk": {
        "init": "welcome",
        "welcome": [
          "The golden man looks at you and blinks...",
          {
            "next": "done",
            "q": "Can you spray something for me?",
            "cond": [
              "isTrig",
              "spray"
            ],
            "exec": [
              "say",
              "He blinks and holds out his hands as if asking you to give him something to spray."
            ]
          },
          {
            "q": "Hi there!",
            "a": "..."
          },
          {
            "q": "Why are you... gold?",
            "a": "..."
          },
          {
            "next": "surprised",
            "q": "Wow... You really surprised me!"
          },
          {
            "q": "Nice urm, makeup!",
            "a": "..."
          },
          {
            "next": "done",
            "q": "Well, it was nice talking at you.",
            "a": "He winks..."
          }
        ],
        "surprised": [
          "A little smile creeps on to the corner of his mouth.",
          {
            "next": "done",
            "q": "Can you spray something for me?",
            "exec": [
              "say",
              "He blinks and holds out his hands as if asking you to give him something to spray."
            ]
          },
          {
            "q": "So, do you come up here often?",
            "a": "He blinks once."
          },
          {
            "q": "Do you want to talk?",
            "a": "He blinks twice."
          },
          {
            "q": "You don't speak?",
            "a": "He blinks once."
          },
          {
            "q": "How do you get so... golden?",
            "a": "He reaches into his golden coat and pulls out a canister which he proceeds to shake in front of your face. You read the label \"Golden Spray Paint\".",
            "exec": [
              "trig",
              "spray"
            ]
          },
          {
            "next": "done",
            "q": "Well, it was nice talking at you.",
            "a": "He winks..."
          }
        ]
      },
      "detail": "It appears to be one of those street artists who like to cover themselves in paint and pretend to be a statue! This one is completely golden...",
      "title": "^Golden Man^",
      "smell": "He smells strongly of paint - Not sure how he can stand that all day long!",
      "actions": [
        {
          "action": [
            "talk",
            "statue"
          ],
          "exec": [
            "say",
            "Apparently there is no Statue here at all, but a golden man!"
          ]
        },
        {
          "action": [
            "exam",
            "statue"
          ],
          "exec": [
            "say",
            "Apparently there is no Statue here at all... but a golden man!"
          ]
        },
        {
          "action": [
            "give",
            "fork"
          ],
          "cond": [
            "isPresent",
            "fork"
          ],
          "exec": [
            [
              "say",
              "The ^golden man^ takes the ^garden fork^ in his hands, flips it over looking at it, then pulls the canister of golden spray paint out his coat and sprays slowly and skillfully from the ^fork^s handle to its prongs. He then hands it back to you."
            ],
            [
              "swapObject",
              "fork",
              "goldenFork"
            ]
          ]
        },
        {
          "action": [
            "give",
            "hat"
          ],
          "cond": [
            "isPresent",
            "hat"
          ],
          "exec": [
            [
              "say",
              "The ^golden man^ takes the ^witches hat^ in his hands, flips it over looking at it, then pulls the canister of golden spray paint out his coat and sprays the hat slowly and skillfully inside and out. He then hands it back to you."
            ],
            [
              "swapObject",
              "hat",
              "goldenHat"
            ]
          ]
        },
        {
          "action": [
            "give",
            "@1"
          ],
          "exec": [
            "say",
            "The ^golden man^ blinks twice at you and pushes it away."
          ]
        }
      ]
    },
    "vet": {
      "take": "I think people bring their problems to her, not take her to their problems!",
      "pre": "a",
      "name": "vet",
      "eat": "I don't eat people on Fridays... and I'm pretty sure it's a Friday today!",
      "talk": {
        "buyFood": [
          "\"Yes of course, what would you like to buy?\"",
          {
            "q": "Dog Food?",
            "a": "\"That will be four coins for a tin... Oh, you can't afford it? I'm sorry, perhaps next time?\""
          },
          {
            "q": "Cat Food?",
            "a": "\"I'm sorry we are completely out of cat food\" she laughs, \"That old lady from the woods, her cat is such a greedy thing, she's always buying up all my stock! I am sorry.\""
          },
          {
            "q": "Bird Seed?",
            "exec": [
              "if",
              [
                "isTrig",
                "gotSeed"
              ],
              [
                "say",
                "\"Only one bag per customer per day I'm afraid\" she says."
              ],
              [
                "if",
                [
                  "isTrig",
                  "hasCoin"
                ],
                [
                  [
                    "trig",
                    "gotSeed"
                  ],
                  [
                    "say",
                    "\"That will be one coin for a bag?\" she reaches under the counter and takes out a bag of seed. You hand her a single coin in exchanges for the bird ^seed^."
                  ],
                  [
                    "if",
                    [
                      "isPresent",
                      "coins2"
                    ],
                    [
                      "swapObject",
                      "coins2",
                      "coin"
                    ],
                    [
                      [
                        "setObjectAttr",
                        "coin",
                        "room",
                        "bin"
                      ],
                      [
                        "clearTrig",
                        "hasCoin"
                      ]
                    ]
                  ],
                  [
                    "setObjectAttr",
                    "birdSeed",
                    "room",
                    "inventory"
                  ],
                  [
                    "anyKey"
                  ],
                  [
                    "say",
                    "\"|Do you want anything else?\""
                  ]
                ],
                [
                  "say",
                  "That will be one coin for a bag?\" she reaches under the counter and takes out a bag of seed. But you don't have any coins so she returns it to her stock. \"Oh well, come back when you have some coins ok?\" she smiles."
                ]
              ]
            ]
          },
          {
            "q": "Dehydrated Dragon Food?",
            "a": "The vet looks sad \"Oh, I'm terribly sorry, we aren't stocking any dragon food at the moment, what with the dragon having stopped coming to the village, the demand is just not there.\"."
          },
          {
            "next": "welcome",
            "q": "Umm, nothing thank you",
            "a": "She smiles, \"No problem\".",
            "silent": true
          }
        ],
        "init": "welcome",
        "welcome": [
          "\"Welcome my dear to my Veterinary Clinic\" greets the Vet, \"Can I be of help to you at all?\"",
          {
            "q": "Can you take a look at this bunny?",
            "cond": [
              "isPresent",
              "bunny"
            ],
            "exec": [
              "exec",
              "objects.bunny.scripts.giveBunny"
            ]
          },
          {
            "q": "How's business?",
            "a": "She smiles, \"Well it's a little slow, but we're doing OK.\""
          },
          {
            "q": "What services do you provide?",
            "a": "\"Oh well\" she begins, \"We provide a comprehensive range of treatments for any sick or injured animals for a very competitive price.\" she looks over to the far wall where there are some boxes, \"and, we also sell plenty of animal food.\"",
            "exec": [
              "trig",
              "sellFood"
            ]
          },
          {
            "next": "buyFood",
            "q": "Can I buy some animal food?",
            "repeat": true,
            "cond": [
              "isTrig",
              "sellFood"
            ]
          },
          {
            "next": "done",
            "q": "Good Bye.",
            "a": "\"Thank you, come again soon.\" answers the vet."
          }
        ]
      },
      "detail": "The ^Veterinarian^ is a tall, kind looking lady wearing a well fitted white tunic with a thin belt.",
      "title": "^Lady Vet^",
      "list": false,
      "smell": "I can't get close enough, but I can imagine she might smell like a bit of animal... due to her job I mean!",
      "room": "vet"
    },
    "pokeballFull": {
      "pre": "an",
      "name": "pokeball",
      "eat": "You give it a quick lick - Yuck! I'm not sure where this thing has been, but it has left a bad taste in your mouth!",
      "detail": "It's an occupied ^Pokeball^... It's home to that huge Wild Pidgey!",
      "title": "^Occupied Pokeball^",
      "smell": "Smells metallic.",
      "actions": [
        {
          "action": [
            "open",
            "pokeball"
          ],
          "exec": [
            "say",
            "I think I'd better leave it closed until I can return it to that ^Dwarf^!"
          ]
        },
        {
          "action": [
            "shake",
            "pokeball"
          ],
          "exec": [
            "say",
            "You give the ball a quick shake... Nothing rattles... I really don't understand how these things work *grin*."
          ]
        },
        {
          "action": [
            "throw",
            "pokeball"
          ],
          "exec": [
            "say",
            "No way, it's already occupied and I don't want to lose it!"
          ]
        }
      ]
    },
    "piranha": {
      "pre": "a",
      "name": "Piranha",
      "title": "^Flapping Piranha^",
      "actions": [
        {
          "action": [
            "exam",
            "fish"
          ],
          "exec": [
            "say",
            "Oh dear... this ^Piranha^ is not going to last long out of water!!!"
          ]
        },
        {
          "action": [
            "eat",
            "fish"
          ],
          "exec": [
            "say",
            "It's too wiggly to keep a hold of!"
          ]
        },
        {
          "action": [
            "smell",
            "fish"
          ],
          "exec": [
            "say",
            "Nice fresh ^fish^..."
          ]
        },
        {
          "action": [
            "take",
            "fish"
          ],
          "exec": [
            "say",
            "It's too wiggly to keep a hold of! Perhaps if I had something to put the ^Piranha^ in?"
          ]
        },
        {
          "action": [
            "fish",
            "bucket"
          ],
          "exec": [
            "exec",
            "objects.bucket.scripts.fishBucket"
          ]
        },
        {
          "action": [
            "bucket",
            "fish"
          ],
          "exec": [
            "exec",
            "objects.bucket.scripts.fishBucket"
          ]
        }
      ]
    },
    "king": {
      "take": "\"Get your hands off us you filthy cretin!!!\" shouts the king... \"Guards!!!!\" - I think you better leave him alone.",
      "pre": "the",
      "name": "king",
      "eat": "Cannibalism isn't my thing, and I don't make exceptions even for royalty!",
      "talk": {
        "init": "welcome",
        "whatDragon": [
          "\"The Dragon, Our Dragon! Has she been seen?\" the King thunders causing both his guards to flinch, then he finishes in barely a whisper, \"and is she coming back?\".",
          {
            "next": "questions",
            "q": "I haven't seen her.",
            "a": "\"No?\" The king slumps back in his throne with a sigh, \"Well that's a relief\" he catches himself, \"I mean that's terrible! Isn't it lads\" he turns to his guards, then back to you \"After all our village depends on that... Dragon\" he gives a little high pitched laugh, then sighs sadly \"Yes, we need her don't we...\""
          },
          {
            "next": "newsCave",
            "q": "Yes, She was up in her cave!",
            "cond": [
              "isTrig",
              "missionEgg"
            ]
          }
        ],
        "iHaveNews": [
          "The king sits bold upright: \"Excellent - At last! So tell us everything, leave nothing out!\".",
          {
            "q": "Someone has stolen her eggs!",
            "a": "The King looks worried \"Her eggs you say...\" he pauses, \"Oh dear... oh goodness! Umm, How did this... happen!",
            "cond": [
              "isTrig",
              "missionEgg"
            ],
            "exec": [
              "exec",
              "objects.king.scripts.guardAway"
            ]
          },
          {
            "q": "The dragon has stopped coming...?",
            "a": "\"Well... Yes...?!? I KNOW THAT!?!\" the king splutters,"
          },
          {
            "next": "questions",
            "q": "Actually I don't have any news",
            "a": "\"What? No more news? Oh goodness gracious...\".",
            "silent": true
          }
        ],
        "questions": [
          "\"So what do you want with us?\" the king enquires.",
          {
            "q": "Why does the village need the dragon?",
            "a": "\"Oh, That ferocious... terrifying dragon!\" the king muses, \"She's what made our village so popular with all the tourists, but now, they've stopped coming, since the dragon...\" he pauses, \"since the dragon disappeared.\"."
          },
          {
            "q": "When was the dragon last seen?",
            "exec": [
              "if",
              [
                "isNotTrig",
                "dungeon"
              ],
              [
                [
                  "say",
                  "The king looks a little uneasy, \"umm, well I'm not sure...\"."
                ],
                [
                  "exec",
                  "objects.king.scripts.guardAway"
                ]
              ],
              [
                "say",
                "|The King looks relieved... \"Well.. Good... I think that's clear! We certainly don't remember when the ^dragon^ was last seen!\""
              ]
            ]
          },
          {
            "next": "done",
            "q": "Bye.",
            "a": "\"Yes quite! Well, bring me news, I need news.\" he turns away."
          }
        ],
        "newsCave": [
          "The king sits bold upright, \"You went to her cave!\" he splutters, \"Really!... and what did you find?\"",
          {
            "next": "questions",
            "q": "Someone has stolen her eggs!",
            "a": "The King looks worried \"Her eggs you say...\" he pauses, \"Oh dear... oh goodness! Umm, How did this... happen!|",
            "exec": [
              "exec",
              "objects.king.scripts.guardAway"
            ]
          }
        ],
        "welcome": [
          "The king fixes you with a solid yet worried gaze. \"Do you come with news of the Dragon?\" he enquires dryly.",
          {
            "next": "questions",
            "q": "Sorry, no news.",
            "a": "The king slumps back in his chair. \"So what do you want with us?\"",
            "silent": true
          },
          {
            "next": "iHaveNews",
            "q": "I Have News!!"
          },
          {
            "next": "whatDragon",
            "q": "What Dragon...?"
          }
        ]
      },
      "detail": "The ^King^ is rather plump with a puffy red face that right now is looking rather forlorn. Over his sagging shoulders is draped a heavy, scarlet robe.",
      "title": "^King^",
      "list": false,
      "smell": "A king never emits any odour at all, did you not know this?",
      "scripts": {
        "guardAway": [
          "if",
          [
            "isNotTrig",
            "dungeon"
          ],
          [
            [
              "say",
              "One of the ^guards^ turns to speak \"Well, your majesty I believe it was...\"."
            ],
            [
              "anyKey"
            ],
            [
              "say",
              "|The ^king^ jumps up interrupting him \"WELL, IMAGINE THAT, time for the change of the ^guard^ already!\". A barrage of angry arm waving brings a fresh pair of guards racing into the room. They grab the outspoken ^guard^ and quickly manhandle him out of the ^king^s presence!"
            ],
            [
              "anyKey"
            ],
            [
              "setObjectAttr",
              "guard",
              "room",
              "castleDungeon"
            ],
            [
              "trig",
              "dungeon"
            ]
          ]
        ]
      },
      "room": "castleThrone"
    },
    "goldenKey": {
      "pre": "a",
      "name": "key",
      "eat": "Well, that would keep it nicely hidden, but I think it's quite safe here in my pocket.",
      "detail": "Its quite heavy and golden in colour. It must open something quite important!",
      "title": "^golden key^",
      "smell": "Not sure... it just smells of key really.",
      "full": "golden key"
    },
    "fishTank": {
      "take": "It's too heavy.",
      "pre": "a",
      "name": "tank",
      "eat": "Eat a fish tank?",
      "detail": "It's a fish tank, full of water, but completely empty.",
      "title": "^Fish Tank^",
      "smell": "Fish fish fish... that's all I smell!",
      "room": "fishmonger"
    },
    "egg1b": {
      "take": "I am absolutely not going to even think about taking that egg!!!",
      "pre": "a",
      "name": "egg",
      "eat": "You know what... I don't think the Dragon would appreciate me eating her egg.",
      "detail": "It's a huge ruby coloured ^egg^, at least a foot high and standing vertically in the golden ^nest^. The colour is astonishingly vibrant even in this dark light, perhaps it even glowed? The texture is also amazing as it is roughened in a lattice pastern, perhaps resembling scales.",
      "title": "huge ^ruby egg^",
      "smell": "To be honest, the egg doesn't really smell of anything in particular.",
      "room": "caveDragon",
      "full": "ruby egg"
    },
    "shedKey": {
      "pre": "a",
      "name": "key",
      "eat": "Not sure that's a good idea. It is rusty after all.",
      "detail": "Its a rusty old key... I think it's a shed key?",
      "title": "^rusty old key^",
      "smell": "Not sure... it just smells of key really.",
      "full": "old key"
    },
    "bucketPiranha": {
      "pre": "a",
      "name": "bucket",
      "detail": "It's a live Piranha in a plastic ^bucket^.",
      "title": "^bucket of Piranha^",
      "smell": "Smells a bit fishy!"
    },
    "bucket": {
      "pre": "a",
      "useWith": true,
      "name": "bucket",
      "eat": "You grab the bucket between your teeth but all you gain is a mouthful of sand... yuck!",
      "detail": "It's a bright blue plastic ^bucket^ with a picture of a rainbow painted on the side. It's one of those ones that are shaped like a sand castle.",
      "title": "^bucket^",
      "smell": "You can smell... crabs?",
      "scripts": {
        "fishBucket": [
          "if",
          [
            "isPresent",
            "bucket"
          ],
          [
            "say",
            "It won't help, the fish will still die out of water!"
          ],
          [
            "if",
            [
              "isPresent",
              "bucketSeaWater"
            ],
            [
              "say",
              "Oh no - Piranha's can't survive in salt water!"
            ],
            [
              "if",
              [
                "isPresent",
                "bucketWater"
              ],
              [
                [
                  "say",
                  "You scoop up the flapping ^Piranha^ and plop it into your ^bucket^ of water... phew!"
                ],
                [
                  "swapObject",
                  "bucketWater",
                  "bucketPiranha"
                ],
                [
                  "setObjectAttr",
                  "piranha",
                  "room",
                  "bin"
                ],
                [
                  "trig",
                  "catFish",
                  2
                ]
              ],
              [
                "say",
                "I don't see a bucket?"
              ]
            ]
          ]
        ],
        "fillBucket2": [
          "if",
          [
            "equals",
            "@room",
            "square"
          ],
          [
            "if",
            [
              "equals",
              "@1",
              "bucketWater"
            ],
            [
              "say",
              "The bucket is already full of fresh water"
            ],
            [
              [
                "swapObject",
                "@1",
                "bucketWater"
              ],
              [
                "say",
                "You fill the bucket with fresh water from the pool."
              ]
            ]
          ],
          [
            "say",
            "I can't do that."
          ]
        ],
        "fillBucket": [
          "if",
          [
            "isPresent",
            "bucket"
          ],
          [
            "exec",
            "objects.bucket.scripts.fillBucket2",
            "bucket"
          ],
          [
            "if",
            [
              "isPresent",
              "bucketSeaWater"
            ],
            [
              "exec",
              "objects.bucket.scripts.fillBucket2",
              "bucketSeaWater"
            ],
            [
              "if",
              [
                "isPresent",
                "bucketWater"
              ],
              [
                "exec",
                "objects.bucket.scripts.fillBucket2",
                "bucketWater"
              ],
              [
                "say",
                "I don't see a bucket?"
              ]
            ]
          ]
        ]
      },
      "room": "beach"
    },
    "wire": {
      "pre": "a piece of",
      "useWith": true,
      "name": "wire",
      "eat": "I don't want to end up hooked like a fish!",
      "detail": "It's a piece of ^wire^ that's been bent into the shape of a ^hook^.",
      "title": "^Bent Wire^",
      "smell": "Careful where you point that thing!"
    },
    "pokeball": {
      "pre": "a",
      "name": "pokeball",
      "eat": "You give it a quick lick - Yuck! I'm not sure where this thing has been, but it has left a bad taste in your mouth!",
      "detail": "It's a real life ^Pokeball^! Now I just need to find that ^Wild Pidgey^ and throw the ball at it? Simple right.",
      "title": "^Pokeball^",
      "smell": "Smells metallic.",
      "scripts": {
        "throwPokeball": [
          "if",
          [
            "isPresent",
            "wildPidgey"
          ],
          [
            [
              "say",
              "The ^Pokeball^ leaves your hand and whistles through the air in a graceful arc, bouncing off the birds head and then jolts open... A flash of light forces you to look shield your eyes as the Pidgey is sucked helplessly into the ball."
            ],
            [
              "goal",
              "pokemon"
            ],
            [
              "anykey"
            ],
            [
              "say",
              "|The ^Occupied Pokeball^ is nestled in the grass at the foot of the oak tree."
            ],
            [
              "setObjectAttr",
              "pokeball",
              "room",
              "bin"
            ],
            [
              "setObjectAttr",
              "wildPidgey",
              "room",
              "bin"
            ],
            [
              "setObjectAttr",
              "pokeballFull",
              "room",
              "@room"
            ]
          ],
          [
            "if",
            [
              "equals",
              "@room",
              "vilGarden"
            ],
            [
              [
                "say",
                "You stretch back with the ^Pokeball^ and hurl it up in to the branches of the oak tree, but the ^Pidgey^ is just too high up and the ^pokeball^ falls back to the ground at your feet. The ^Pidgey^ looks down at you and then begins pruning its feathers...|If only there was some way I could lure it down out of the tree?"
              ],
              [
                "setObjectAttr",
                "pokeball",
                "room",
                "@room"
              ]
            ],
            [
              "say",
              "There's no Pokemon around here to throw it at, and I don't want to waste it!"
            ]
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "throw",
            "pokeball"
          ],
          "exec": [
            "exec",
            "objects.pokeball.scripts.throwPokeball"
          ]
        },
        {
          "action": [
            "throw",
            "ball"
          ],
          "exec": [
            "exec",
            "objects.pokeball.scripts.throwPokeball"
          ]
        },
        {
          "action": [
            "use",
            "pokeball"
          ],
          "exec": [
            "exec",
            "objects.pokeball.scripts.throwPokeball"
          ]
        },
        {
          "action": [
            "use",
            "ball"
          ],
          "exec": [
            "exec",
            "objects.pokeball.scripts.throwPokeball"
          ]
        },
        {
          "action": [
            "catch",
            "pokeball"
          ],
          "exec": [
            "exec",
            "objects.pokeball.scripts.throwPokeball"
          ]
        }
      ]
    },
    "phone": {
      "pre": "your",
      "name": "phone",
      "talk": {
        "init": "welcome",
        "cost": [
          "\"It's your mother\" announces a familiar voice, \"I hope you are looking after that phone! You know it cost us a small fortune to buy it for you?\"",
          {
            "next": "done",
            "q": "Yes mother...",
            "a": "\"We only want to know you are safe\" she continues, \"So please look after it, and \" she pauses... \"Don't chew it ok...? Love you!\" *click*."
          }
        ],
        "eat": [
          "|You flip open the phone and say:",
          {
            "next": "cost",
            "q": "Hello...?"
          }
        ],
        "welcome": [
          "You flip open your phone"
        ]
      },
      "detail": "It's the ^mobile phone^ your mum gave you as you left on your mighty adventure.",
      "title": "^mobile phone^",
      "actions": [
        {
          "action": [
            "eat",
            "phone"
          ],
          "exec": [
            [
              "say",
              "You give the ^phone^ a quick chew... Your mum would tell you to take the phone out your mouth and stop chewing things! Still... she's not here! (You chew it a bit harder for good measure)... Just then the ^phone rings^"
            ],
            [
              "anyKey"
            ],
            [
              "talk",
              "objects.phone.talk",
              "eat"
            ]
          ]
        }
      ]
    },
    "merGuard": {
      "take": "I can't carry a merman guard - that would be ridiculous!",
      "pre": "the",
      "name": "guard",
      "talk": {
        "init": "welcome",
        "whoLives": [
          "The ^guard^ stares quizzical at you and says \"His highness, the mighty king bubbles the second.\", then he adds,\"But how can any mer-person not know this?",
          {
            "q": "Oh, I'm not from around here!",
            "a": "\"Yes, that is clear!\" he retorts."
          },
          {
            "q": "Who is this King?",
            "a": "\"He is the ruler of this Ocean\" he says sternly, \"We all respect and obey the King, we bow to his keen insight and wisdom, why King Bubbles is... he is... He is our King!\""
          },
          {
            "q": "King bubbles...? What sort of name is that!",
            "a": "The ^guard^ gapes at you, \"Are you mad? Bubbles is a very well respected mer-name!\""
          },
          {
            "next": "welcome",
            "q": "Oh - 'THAT' King Bubbles!",
            "a": "The merman's shoulders relax a little, \"Good.\" he mutters.",
            "silent": true
          }
        ],
        "notRoyal": [
          "The guard replies \"Because the King does not mix with common citizens like yourself of course!\" the guard manages a small laugh then returns to his stern expression.",
          {
            "q": "How fortunate, because I AM royalty!",
            "a": "The guard frowns, \"It is as plain as the spear in my hand that you, citizen, are not royalty. Just look at you?\" he looks you up and down, \"You're plain mer-person from your head to the tip of your tail!"
          },
          {
            "q": "Why only royalty?",
            "a": "\"It's just Castle policy.\""
          },
          {
            "q": "Pretty Please let me in?",
            "a": "The guard steps forward and prods you with a webbed finger \"Listen citizen, you ain't getting in here ok?\""
          },
          {
            "next": "welcome",
            "q": "Ok, I get it, only royalty.",
            "a": "The guards lips force a smile \"Thank the great white whale, it's finally sunk in!\"",
            "exec": [
              "exec",
              "scripts.newGoal",
              "royalty"
            ]
          }
        ],
        "enter": [
          "\"No.\" answers the guard forcefully.",
          {
            "q": "No?",
            "a": "\"That is what I said... No.\""
          },
          {
            "q": "Please, may I enter?",
            "a": "\"That is better citizen!\" the merman bows, then standing up straight he adds \"But I am sorry, I still am not permitted to let you pass.\""
          },
          {
            "q": "Really?",
            "a": "he frowns, then says \"Was I unclear...? I'm sorry - No citizen, you may not enter.\""
          },
          {
            "next": "notRoyal",
            "q": "Why can't I enter?"
          }
        ],
        "welcome": [
          "The ^merman guard^ faces you solidly.",
          {
            "q": "Hi there!",
            "a": "\"Good day to you citizen\" answers the guard.",
            "cond": [
              "isNotTrig",
              "wearCrown"
            ]
          },
          {
            "q": "Hello my fine guard!",
            "a": "The guards gaze moves up to your crown, then he answers \"Welcome, your highness.\" he bows.",
            "cond": [
              "isTrig",
              "wearCrown"
            ],
            "exec": [
              "trig",
              "amKing"
            ]
          },
          {
            "next": "whoLives",
            "q": "Who lives in this Castle?"
          },
          {
            "next": "enter",
            "q": "Can I enter the castle?",
            "cond": [
              "isNotTrig",
              "wearCrown"
            ]
          },
          {
            "next": "done",
            "q": "Can I enter the castle?",
            "a": "\"Of course you can your highness\" replies the guard (he can't keep his eyes off your crown), \"Any royal member of the sea-people is permitted to enter.\"",
            "cond": [
              "isTrig",
              "wearCrown"
            ],
            "exec": [
              [
                "trig",
                "amKing"
              ],
              [
                "anyKey"
              ],
              [
                "exec",
                "scripts.walkTo",
                "corralCastle"
              ]
            ]
          },
          {
            "next": "done",
            "q": "Goodbye.",
            "a": "\"Safe journey citizen...\" the merman tilts his spear at you.",
            "cond": [
              "isNotTrig",
              "wearCrown"
            ]
          },
          {
            "next": "done",
            "q": "Goodbye.",
            "a": "\"Safe journey your highness.\" the merman tilts his spear and bows low.",
            "cond": [
              "isTrig",
              "wearCrown"
            ],
            "exec": [
              "trig",
              "amKing"
            ]
          }
        ]
      },
      "detail": "The ^guard^ has short thick hair, keen eyes & a muscular body, he's holding a long spear planted on the ground in front of him, and his tail glints as he slowly sweeps it back and forth.",
      "title": "^Merman Guard^ holding a spear",
      "actions": [
        {
          "action": [
            "talk",
            "merman"
          ],
          "exec": [
            "talk",
            "objects.merGuard.talk"
          ]
        }
      ]
    },
    "cane": {
      "pre": "a",
      "useWith": true,
      "name": "cane",
      "eat": "Do I look like a Panda?",
      "detail": "It's a nice long bamboo ^garden cane^, hollow at both ends.",
      "title": "^garden cane^",
      "smell": "Hmm... Smells of garden!",
      "scripts": {
        "caneWire": [
          [
            "say",
            "You push one end of the ^wire^ hard down into the end of the ^garden cane^ to create a very fine ^hooked cane^"
          ],
          [
            "swapObject",
            "cane",
            "hookingCane"
          ],
          [
            "setObjectAttr",
            "wire",
            "room",
            "bin"
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "cane",
            "wire"
          ],
          "cond": [
            "isPresent",
            "wire"
          ],
          "exec": [
            "exec",
            "objects.cane.scripts.caneWire"
          ]
        },
        {
          "action": [
            "wire",
            "cane"
          ],
          "cond": [
            "isPresent",
            "wire"
          ],
          "exec": [
            "exec",
            "objects.cane.scripts.caneWire"
          ]
        }
      ]
    },
    "bucketWater": {
      "pre": "a",
      "useWith": true,
      "name": "bucket",
      "detail": "It's a bright blue plastic ^bucket^ full of water.",
      "title": "^bucket of water^",
      "smell": "You can smell nice fresh water",
      "actions": [
        {
          "action": [
            "bucket",
            "pool"
          ],
          "exec": [
            "exec",
            "objects.bucket.scripts.useBucketPool",
            "bucketWater"
          ]
        },
        {
          "action": [
            "pool",
            "bucket"
          ],
          "exec": [
            "exec",
            "objects.bucket.scripts.useBucketPool",
            "bucketWater"
          ]
        }
      ]
    },
    "scepterHandle": {
      "take": "You know... I don't want to carry that around. It's heavy, and griffpatch told me I didn't need it.",
      "pre": "the",
      "name": "handle",
      "eat": "For some reason your teeth can't seem to get a grip!",
      "detail": "It's the handle of the Scepter that I broke!",
      "title": "broken ^Scepter Handle^",
      "smell": "To be honest, the egg doesn't really smell of anything in particular."
    },
    "coin": {
      "pre": "a",
      "name": "coin",
      "eat": "Did your Mother never teach you not to put coins in your mouth?",
      "detail": "The coin is in mint condition, oh so shiny like its been polished up.",
      "title": "^Coin^",
      "smell": "It has that weird metallic smell that tends to rub off on your fingers after holding them for too long."
    },
    "appleCore": {
      "pre": "an",
      "name": "core",
      "detail": "The apple core is starting to brown around the edges.",
      "title": "^apple core^",
      "actions": [
        {
          "action": [
            "eat",
            "core"
          ],
          "exec": [
            [
              "say",
              "Really...? Well if you're sure - *munch munch*"
            ],
            [
              "setGoal",
              "apple"
            ],
            [
              "setObjectAttr",
              "appleCore",
              "room",
              "bin"
            ]
          ]
        }
      ]
    },
    "shield": {
      "pre": "a",
      "name": "shield",
      "eat": "Tempting! But not today :)",
      "detail": "It's a hefty metal ^shield^. There's a strap on the back for my arm.",
      "title": "^Shield^"
    },
    "goldenFork": {
      "pre": "a",
      "name": "fork",
      "eat": "I could perhaps eat things with it...? But even that would be a little on the impracticable side!",
      "detail": "The ^Garden Fork^ is now a ^Golden Fork^. It looks real mint - Who wouldn't want one!",
      "title": "^Golden Fork^",
      "smell": "It smells a little odd now, I think it's the paint?"
    },
    "bogMap": {
      "pre": "a",
      "name": "parchment",
      "eat": "I don't think I want to eat this rather important looking ^parchment^!",
      "detail": "On the ^parchment^ is drawn the picture of pair of shoes over what looks like a rope hanging from a tree, then the words: \"^west^, ^west^, ^south^\" then,  \"^west^, ^west^, ^north^\", and finally \"^east^\" concluding with a large black cross?",
      "title": "^parchment^",
      "actions": [
        {
          "action": [
            "read",
            "parchment"
          ],
          "exec": [
            "say",
            [
              "getJSONAttr",
              "objects.bogMap.detail"
            ]
          ]
        }
      ]
    },
    "guard": {
      "take": "Sadly he's locked up in the castle dungeons and you can't reach him.",
      "pre": "an",
      "name": "guard",
      "eat": "Cannibalism isn't my thing!",
      "talk": {
        "init": "welcome",
        "shouldNot": [
          "The imprisoned guard shuffles away from you.",
          {
            "next": "whatFound",
            "q": "What did the king take?",
            "exec": [
              [
                "say",
                "The guards thinks for a moment, then comes back to the bars and says \"Well what have I got to lose now! Listen, a year back stories started circulating that our famous dragon was hording gold back up in the mountains, our King got wind of this and decided he'd like to 'see' that gold."
              ],
              [
                "andKey"
              ],
              [
                "say",
                "|So one day he puts together a party to venture up in to the mountains (me included of course). Off we set southwards out of the village gates, and in no time we find dragon's cave! We were mighty scared to enter, but the King ordered us in..."
              ],
              [
                "anyKey"
              ]
            ]
          },
          {
            "next": "done",
            "q": "Sorry to have disturbed you"
          }
        ],
        "scepter": [
          "\"Have you seen the Crown Jewels?\" he replies, \"The Egg 'IS' the Scepter - He had it mounted on a golden staff. The real crown jewels are kept locked behind that solid ^iron door^, just there!\" He points to the door to your south.||Hey, wanna know where he keeps his key?",
          {
            "next": "welcome",
            "q": "Yes please!",
            "a": "The imprisoned guard leans right up as close as he can get and whispers \"He's sitting on it! He hides it under the cushion of his throne!\"",
            "silent": true,
            "exec": [
              "exec",
              "scripts.newGoal",
              "cushion"
            ]
          },
          {
            "next": "welcome",
            "q": "No thanks",
            "a": "\"Oh well, your loss!\" the guard looks slightly bemused.",
            "silent": true
          }
        ],
        "foundEggs": [
          "|So, as you know, dragon eggs are the most beautiful eggs in the world, each one unique in colour and texture, each one a work of art, like an intricately carved gem stone, each one so rare to be considered priceless.\"",
          {
            "next": "welcome",
            "q": "So why did he leave one behind?",
            "a": "The guard gasps, \"You really do know this story!",
            "silent": true,
            "cond": [
              "isTrig",
              "foundNest"
            ],
            "exec": [
              "exec",
              "objects.guard.talk.endOfTale"
            ]
          },
          {
            "next": "welcome",
            "q": "You didn't take the Eggs did you?",
            "a": "The guard looks at his feet. \"Yes\" he sobbed.",
            "silent": true,
            "exec": [
              "exec",
              "objects.guard.talk.endOfTale"
            ]
          },
          {
            "next": "welcome",
            "q": "What happened next?",
            "a": "\"Then... then...\", the guard looks at his feet.",
            "silent": true,
            "exec": [
              "exec",
              "objects.guard.talk.endOfTale"
            ]
          }
        ],
        "whatFound": [
          "|Of course we should have known the dragon was not there, she always swoops down from the mountain and is seen around the village most days. But still we were scared, and we crept in cautiously. But what do you think we found?\"",
          {
            "next": "foundEggs",
            "q": "A Golden nest of Dragon Eggs?",
            "a": "\"You... Know about the Eggs?\"",
            "cond": [
              "isTrig",
              "foundNest"
            ]
          },
          {
            "next": "foundEggs",
            "q": "Loads of Gold?",
            "a": "\"Ha, good guess, and you would be right\" answers guard now with his face to the bars \"But so much more... The gold the dragon was hording, it was for its nest! And in that nest were five huge dragon eggs!\"."
          },
          {
            "next": "foundEggs",
            "q": "Was Griffpatch hiding back there?",
            "a": "The guard looks at you blankly... \"No.\" he replies, \"The gold the dragon was hording, it was for its nest! And in that nest were five huge dragon eggs!\"."
          }
        ],
        "endOfTale": [
          [
            "say",
            "\"The King then ordered us to take the Eggs, so we each take one in our arms, but there were just four of us so we had to leave one egg behind.\" he wipes his eyes."
          ],
          [
            "anyKey"
          ],
          [
            "say",
            "|\"That evening the very mountain shook with the fury of the dragon!\" the guard whispered, a look of fear coming to his eyes, \"We were terrified, but the morning came and silence had returned to the village. But since that day the dragon hasn't been seen again.\"."
          ],
          [
            "trig",
            "eggThief",
            1
          ]
        ],
        "welcome": [
          "The guard looks up from the floor where he is sitting.",
          {
            "q": "So where are the Eggs now?",
            "a": "\"The King was so scared of what he'd done that he decided he would keep just a single egg for himself, but the rest he would present as gifts to his three most powerful allies.\"",
            "cond": [
              "isTrig",
              "eggThief",
              1
            ],
            "exec": [
              [
                "exec",
                "scripts.newGoal",
                "eggKing"
              ],
              [
                "trig",
                "eggThief",
                2
              ]
            ]
          },
          {
            "next": "scepter",
            "q": "Where is the Kings Egg?",
            "cond": [
              "isTrig",
              "eggThief",
              2
            ]
          },
          {
            "q": "Who are the Kings three allies?",
            "a": "Well, I'm not entirely sure, but the rumors I've heard are that he gave them to the Kings of the Sea, the Clouds, and the Bog.",
            "cond": [
              "isTrig",
              "eggThief",
              2
            ],
            "exec": [
              [
                "anyKey"
              ],
              [
                "exec",
                "scripts.newGoal",
                "eggSea"
              ],
              [
                "exec",
                "scripts.newGoal",
                "eggCloud"
              ],
              [
                "exec",
                "scripts.newGoal",
                "eggBog"
              ]
            ]
          },
          {
            "q": "Why did they imprison you?",
            "a": "\"Oh I'm so stupid\" he whimpers, \"I always speak before I think, what a noodle I am, and now look where it has got me!\"",
            "cond": [
              "isNotTrig",
              "eggThief"
            ]
          },
          {
            "next": "shouldNot",
            "q": "What were you saying when they took you away?",
            "a": "\"Just that, oh, the last time we saw the dragon was... was... Well, when the King and his men went and took... Oh dear, I shouldn't be telling you.\".",
            "cond": [
              "isNotTrig",
              "eggThief"
            ]
          },
          {
            "q": "How long are they going to keep you locked up?",
            "cond": [
              "isNotTrig",
              "eggThief"
            ],
            "exec": [
              [
                "if",
                [
                  "isNotTrig",
                  "foundWire"
                ],
                [
                  "say",
                  "\"I've no idea.\" he sighs, \"I had thought I might escape! I had a bit of ^wire^ I was using to try to pick the dungeon lock with, but it wasn't nearly strong enough. Look - it's still in the lock! These dungeon locks were made by 'Iron Will' of Barleyport himself.\" he sighs \"The strongest locks always came from Barleyport.\""
                ],
                [
                  "say",
                  "\"I've no idea.\" he sighs, \"I had thought I might escape, but these dungeon locks were made by 'Iron Will' of Barleyport himself.\" he sighs \"The strongest locks always came from Barleyport.\""
                ]
              ],
              [
                "exec",
                "scripts.newGoal",
                "guard"
              ]
            ]
          },
          {
            "next": "done",
            "q": "Bye.",
            "a": "\"Don't be a stranger... I appreciate the company.\""
          }
        ]
      },
      "detail": "It's the ^guard^ from the throne room! He's sitting shivering behind the ^iron bars^ of the ^dungeon cell^.",
      "title": "^Imprisoned Guard^",
      "smell": "I can smell something pretty bad... but then it could just be this room!"
    },
    "wildPidgey": {
      "take": "There's only one way to catch a Pokemon of this size... And that's in a ^Pokeball^!",
      "pre": "a",
      "name": "pidgey",
      "eat": "I think this bird is more likely to eat me!",
      "detail": "The huge ^Wild Pidgey^ is hungrily pecking at the seeds you scattered around the base of the old Oak Tree.",
      "title": "huge ^Wild Pidgey^",
      "smell": "Smells like chicken...?"
    },
    "coins2": {
      "pre": "2",
      "name": "coin",
      "eat": "Did your Mother never teach you not to put coins in your mouth?",
      "detail": "The coins are in mint condition, oh so shiny like they'd been polished up. Even so, they are sadly not worth a whole lot... but still... Who doesn't love a shiny coin!",
      "title": "^Coins^",
      "smell": "They have that weird metallic smell that tends to rub off on your fingers after holding them for too long."
    },
    "vegetables": {
      "take": "Seriously... you don't understand... When I said they were unnaturally huge - I meant it!",
      "name": "vegetables",
      "eat": "Tempting! But I wouldn't know where to begin! They are so huge!",
      "detail": "These ^vegetables^ are the largest ones you've ever seen! Some come up to your waist, others lie flat on the group in heaps a few metres long! How crazy!?!",
      "list": false,
      "smell": "They smell very earthy!",
      "room": "witchCottage"
    },
    "diamondEgg": {
      "pre": "a",
      "afterTake": [
        "goal",
        "eggSea"
      ],
      "name": "egg",
      "kings": true,
      "eat": "This ^egg^ is not for consumption!",
      "detail": "It's a large diamond like egg. The surface reflects all the colours of the rainbow.",
      "title": "^Diamond Egg^",
      "smell": "To be honest, the egg doesn't really smell of anything in particular.",
      "full": "Diamond Egg"
    },
    "apple": {
      "pre": "an",
      "name": "apple",
      "detail": "It's a shiny red ^apple^.",
      "title": "^apple^",
      "actions": [
        {
          "action": [
            "eat",
            "apple"
          ],
          "exec": [
            [
              "say",
              "Yum, crisp and delicious!"
            ],
            [
              "swapObject",
              "apple",
              "appleCore"
            ]
          ]
        }
      ],
      "room": "inventory"
    },
    "oldLady": {
      "take": "I could perhaps almost manage to lift her, but I don't feel like carrying her round.",
      "pre": "an",
      "name": "lady",
      "eat": "Well, it would make an interesting ending to the rhyme :)",
      "talk": {
        "init": "welcome",
        "welcome": [
          "The old lady is looking at you with panicky eyes and clutching her throat!",
          {
            "next": "done",
            "q": "I've brought you something!",
            "a": "\"Quickly!\" cries the old lady, \"Give it to me!\". She holds out her hands...",
            "cond": [
              "getJSONAttr",
              "objects.oldLady.talked"
            ]
          },
          {
            "q": "What's wrong?",
            "a": "\"A fly... a fly!\" she gurgles... \"I swallowed a huge black fly!\""
          },
          {
            "q": "A fly?",
            "a": "She waves her hands around her head \"Yes, yes... it flew in the window and just as I went to tell it to buzz off it flew right down my throat, oh dear me! I'm done for - I can feel it buzzing around in my belly!!!\""
          },
          {
            "q": "Can I help?",
            "a": "She looks pleadingly at you, \"Yes... please help me. I can feel it still buzzing around in my belly! Can you find a cure?\"."
          },
          {
            "next": "done",
            "q": "Bye for now!",
            "a": "\"Oh... it buzzes in me belly, you must help me! Anything is better than this!\"",
            "exec": [
              [
                "setJSONAttr",
                "objects.oldLady.talked",
                true
              ],
              [
                "exec",
                "scripts.newGoal",
                "oldLady"
              ]
            ]
          }
        ]
      },
      "detail": "She's sitting in an old arm chair clutching at her throat and muttering 'I swallowed a fly! Will this be the end of me?'",
      "title": "^old Lady^ (holding her throat)",
      "smell": "Oooh - old lady smell!",
      "scripts": {
        "giveSpider": [
          "if",
          [
            "isPresent",
            "spider"
          ],
          [
            [
              "say",
              "You hand the hairy spider over to the old lady who without hesitation snatches it up and shovels it into her mouth!"
            ],
            [
              "trig",
              "hasCoin"
            ],
            [
              "setObjectAttr",
              "spider",
              "room",
              "bin"
            ],
            [
              "anyKey"
            ],
            [
              "say",
              "|The old lady's shoulders relax and a huge smile slowly forms across her lips... \"Oh yes...\" she sighs \"That really hits the spot! I can feel that beauty getting to work right away. Thank you child, you saved me!! Here, I must give you something...\""
            ],
            [
              "anyKey"
            ],
            [
              "say",
              "|At this she pulls out a little leather purse, opens it with a snap and after a short rummage two ^shiny coins^ materialize between her wrinkled fingers. \"These are for you.\" she smiles."
            ],
            [
              "setObjectAttr",
              "coins2",
              "room",
              "inventory"
            ],
            [
              "setObjectAttr",
              "oldLady",
              "room",
              "bin"
            ],
            [
              "setObjectAttr",
              "oldLady2",
              "room",
              "@room"
            ],
            [
              "setJSONAttr",
              "objects.oldLady.talk.init",
              "spider"
            ],
            [
              "goal",
              "oldLady"
            ]
          ],
          [
            "say",
            "I don't have a spider?"
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "give",
            "spider"
          ],
          "exec": [
            "exec",
            "objects.oldLady.scripts.giveSpider"
          ]
        },
        {
          "action": [
            "use",
            "spider",
            "lady"
          ],
          "exec": [
            "exec",
            "objects.oldLady.scripts.giveSpider"
          ]
        },
        {
          "action": [
            "give",
            "@1"
          ],
          "exec": [
            "say",
            "\"No no...\" she coughs \"That won't help! Oh it's buzzing in my belly!!!\""
          ]
        }
      ],
      "room": "cottage"
    },
    "beans": {
      "pre": "some",
      "useWith": true,
      "name": "beans",
      "eat": "You nibble one, but to be honest, I'm not sure they are not a little poisonous until cooked? I could be wrong... I'll have to google it later ;)",
      "detail": "They're bright purple ^beans^.",
      "title": "^beans^",
      "smell": "The ^beans^ smell very... fresh!",
      "scripts": {
        "plantBeans": [
          "if",
          [
            "equals",
            "@room",
            "vegPatch"
          ],
          [
            "say",
            "I just found them here, I don't want to plant them again just yet."
          ],
          [
            "if",
            [
              "equals",
              "@room",
              "forestGlade"
            ],
            [
              "say",
              "You push one bean into the fertile ^earth^. \"There little bean... Grow!!!\" Unsurprisingly nothing happens... It was just an ordinary bean after all! But well, you still have a few left."
            ],
            [
              "say",
              "I don't want to plant them here!"
            ]
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "beans",
            "soil"
          ],
          "exec": [
            "exec",
            "objects.beans.scripts.plantBeans"
          ]
        },
        {
          "action": [
            "soil",
            "beans"
          ],
          "exec": [
            "exec",
            "objects.beans.scripts.plantBeans"
          ]
        },
        {
          "action": [
            "plant",
            "beans"
          ],
          "exec": [
            "exec",
            "objects.beans.scripts.plantBeans"
          ]
        },
        {
          "action": [
            "use",
            "beans"
          ],
          "exec": [
            "exec",
            "objects.beans.scripts.plantBeans"
          ]
        }
      ]
    },
    "cat": {
      "pre": "a",
      "name": "cat",
      "eat": "Did you not have breakfast this morning or something?",
      "talk": {
        "init": "default",
        "default": [
          "The cat looks at you curiously...",
          {
            "q": "Hey little kitty!",
            "a": "\"Meow...?\""
          },
          {
            "q": "You like fish don't you!",
            "a": "\"Purrrr-r-r-r-r\" the cat appears to agree most wholeheartedly!"
          },
          {
            "q": "Are you hungry?",
            "a": "\"Meow!!!\""
          },
          {
            "next": "done",
            "q": "Bye...",
            "a": "\"Meow.\""
          }
        ]
      },
      "detail": "The ^cat^ is sitting on the bank of the stream watching little tiddler ^fishes^ swimming in the shallows. Every so often it flicks out a paw and bats one of the little fishes... But they are so small they easily get away.",
      "title": "^black cat^",
      "smell": "Smells like a cat!",
      "scripts": {
        "fishTick": [
          "if",
          [
            "isTrig",
            "catFish",
            1
          ],
          [
            "if",
            [
              "equals",
              "@room",
              "square"
            ],
            [
              "if",
              [
                "equals",
                [
                  "getObjectAttr",
                  "cat",
                  "room"
                ],
                "@room"
              ],
              [
                [
                  "say",
                  "|The ^cat^ pounces on the ^fish^ and gobbles it right up! It then comes over to you and climbs back up into your arms."
                ],
                [
                  "setObjectAttr",
                  "cat",
                  "room",
                  "inventory"
                ],
                [
                  "setObjectAttr",
                  "piranha",
                  "room",
                  "bin"
                ],
                [
                  "clearTrig",
                  "catFish"
                ]
              ],
              [
                [
                  "say",
                  "|With a plop the ^Piranha^ manages to hop back into the ^Pool^."
                ],
                [
                  "setObjectAttr",
                  "piranha",
                  "room",
                  "bin"
                ],
                [
                  "clearTrig",
                  "catFish"
                ]
              ]
            ]
          ]
        ],
        "useCat": [
          "if",
          [
            "and",
            [
              "isNotTrig",
              "catFish"
            ],
            [
              "equals",
              "@room",
              "square"
            ],
            [
              "isPresent",
              "cat"
            ]
          ],
          [
            [
              "trig",
              "catFish",
              1
            ],
            [
              "setObjectAttr",
              "cat",
              "room",
              "@room"
            ],
            [
              "say",
              "You drop the ^cat^ down next to the ^pool^. He peers intently into the swirling water, eyes darting after the circling ^fish^..."
            ],
            [
              "anyKey"
            ],
            [
              "say",
              "|Suddenly the ^cat^'s paw darts forward and with a splash, sends a ^Piranha^ flapping on to the pavement!"
            ],
            [
              "setObjectAttr",
              "piranha",
              "room",
              "@room"
            ],
            [
              "timeout",
              2,
              [
                "exec",
                "objects.cat.scripts.fishTick"
              ]
            ]
          ],
          [
            "say",
            "You stroke the ^cat^'s fur and he appears to very much enjoy it as his tail curls around your hand at each stroke and he lets out a contented purr."
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "take",
            "cat"
          ],
          "cond": [
            "isNotTrig",
            "gotCat"
          ],
          "exec": [
            [
              "say",
              "The ^cat^ is so busy trying to flick little ^fishes^ out the stream that it doesn't notice you approach, however as you stoop to pick it up it looks up and happily jumps into your arms. What a nice cat! \"Purr...\" says the cat!"
            ],
            [
              "trig",
              "gotCat"
            ],
            [
              "setJSONAttr",
              "objects.cat.detail",
              "The cat has jet black, sparkling fur and seems very friendly."
            ],
            [
              "setObjectAttr",
              "cat",
              "room",
              "inventory"
            ]
          ]
        },
        {
          "action": [
            "use",
            "cat"
          ],
          "exec": [
            "exec",
            "objects.cat.scripts.useCat"
          ]
        },
        {
          "action": [
            "drop",
            "cat"
          ],
          "cond": [
            "equals",
            "@room",
            "square"
          ],
          "exec": [
            "exec",
            "objects.cat.scripts.useCat"
          ]
        },
        {
          "action": [
            "give",
            "cat"
          ],
          "cond": [
            "equals",
            "@room",
            "square"
          ],
          "exec": [
            "exec",
            "objects.cat.scripts.useCat"
          ]
        }
      ]
    },
    "cardboardBox": {
      "take": "It's too big for me!",
      "pre": "a",
      "name": "box",
      "title": "large ^cardboard box^",
      "scripts": {
        "examBox": [
          "if",
          [
            "isTrig",
            "examBox"
          ],
          [
            "say",
            "There's nothing else in the box"
          ],
          [
            [
              "say",
              "You pull open the box's lid and find within it a ^golden harp^!"
            ],
            [
              "setObjectAttr",
              "magicHarp",
              "room",
              "@room"
            ]
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "exam",
            "box"
          ],
          "exec": [
            "exec",
            "objects.cardboardBox.scripts.examBox"
          ]
        },
        {
          "action": [
            "open",
            "box"
          ],
          "exec": [
            "exec",
            "objects.cardboardBox.scripts.examBox"
          ]
        }
      ]
    },
    "dwarf": {
      "take": "He may be a ^dwarf^, and therefore not very large, but seriously, he isn't 'that' small!",
      "pre": "a",
      "name": "dwarf",
      "eat": "Cannibalism isn't my thing!",
      "talk": {
        "thanks": [
          "\"My dear, dear friend!\" cheers the Dwarf.",
          {
            "q": "How's that Pokemon?",
            "a": "His eyes sparkle, \"He's the best!\" he grins, \"He's a wonder!!!\"."
          },
          {
            "next": "theMap",
            "q": "I found a parchment with directions in your storeroom?",
            "cond": [
              "isTrig",
              "foundMap"
            ]
          },
          {
            "next": "done",
            "q": "Bye.",
            "a": "\"Good day my friend!\""
          }
        ],
        "init": "welcome",
        "theMap": [
          "\"A parchment?\", Warbeard looks at you quizzically, then he leans back thoughtfully \"...with directions on it?\"",
          {
            "next": "thanks",
            "q": "Is it a treasure map?",
            "a": "\"Well... Yes, it probably is! But it must have got lost in my back storeroom. Well, you keep it now - I expect you will have more luck with it than I!\" he chuckles.",
            "silent": true
          },
          {
            "next": "thanks",
            "q": "Do you know where it leads?",
            "a": "\"I'm sorry no! It must have got lost in all my junk a long time back, but well, you keep it, see where it leads you!\"",
            "silent": true
          }
        ],
        "task": [
          "\"Hello friend, Any luck catching the Wild Pidgey from the village gardens?\" enquires the dwarf.",
          {
            "next": "done",
            "q": "Yes! I have it!",
            "a": "The dwarf jumps to his feet, his chair clattering over \"YOU CAUGHT IT!!!\" he barks excitedly, \"Give it here, give it here! Give me the ^pokeball^\".",
            "cond": [
              "isPresent",
              "pokeballFull"
            ]
          },
          {
            "next": "done",
            "q": "No, Sorry not yet",
            "a": "The dwarf sighs and slumps back in his chair, but then looks up \"Well, I still have faith in you... You'll do it!\""
          }
        ],
        "notGood": [
          "\"Not good! You see, I haven't even managed to catch a single pokemon myself yet\". The dwarf's forehead slumps on to his desk and he starts to sob.",
          {
            "next": "done",
            "q": "I'll catch you a Pokemon!",
            "a": "The dwarf looks up quickly, \"Really?\" he stutters, \"You'd do that? Well, look, There's a seriously huge ^Wild Pidgey^ in the village gardens.\" He rolls a Pokeball on to the desk. \"See what you can do?\".",
            "exec": [
              [
                "setJSONAttr",
                "objects.dwarf.talk.init",
                "task"
              ],
              [
                "setObjectAttr",
                "pokeball",
                "room",
                "@room"
              ],
              [
                "anykey"
              ],
              [
                "exec",
                "scripts.newGoal",
                "pokemon"
              ],
              [
                "say",
                "|The ^Pokeball^ is on the desk."
              ]
            ]
          },
          {
            "next": "done",
            "q": "That's just too bad",
            "a": "\"Yeah, I know!\" sobs the dwarf as his head falls in to his thick hands."
          }
        ],
        "welcome": [
          "\"She's gone.\" the dwarf blurts out, \"Sorry you ain't going to see her today... Not ever!\". He turns sadly away from you.",
          {
            "q": "Are you ok?",
            "a": "The dwarf sniffs loudly then answers \"No, not really... My business is ruined... with her gone.\"",
            "repeat": false
          },
          {
            "next": "gone",
            "q": "Who's gone?"
          },
          {
            "next": "done",
            "q": "Bye then!",
            "a": "The dwarf slumps down on his desk and sobs to himself."
          }
        ],
        "poster": [
          "The dwarf looks at the poster and sighs. \"Well, I was trying to start a new line of business, a pokemon training club.\"",
          {
            "q": "A pokemon training club?",
            "a": "\"Yes, well... you see this shop happens to be a pokemon gym? So naturally I feel this could work.\""
          },
          {
            "next": "notGood",
            "q": "How's the club going?"
          }
        ],
        "local": [
          "The dwarf looks miffed, \"Oh... well... then you already know who's gone :(\"",
          {
            "next": "foreign",
            "q": "Sorry, I really don't",
            "exec": [
              "setJSONAttr",
              "objects.dwarf.talk.init",
              "foreign"
            ]
          },
          {
            "next": "done",
            "q": "Yeah I do!",
            "a": "\"Well then you just leave me alone ok!\". The ^dwarf^ is not looking best pleased."
          }
        ],
        "gone": [
          "The dwarf frowns. \"The dragon of course... you ain't from around here are you?\"",
          {
            "next": "foreign",
            "q": "No, I'm not",
            "exec": [
              "setJSONAttr",
              "objects.dwarf.talk.init",
              "foreign"
            ]
          },
          {
            "next": "local",
            "q": "Yes I am!"
          }
        ],
        "foreign": [
          "\"Our famous dragon, the one people come to see... She's not been sighted for months!\"",
          {
            "q": "A dragon?",
            "a": "\"Yes, of course.\" he points at the ^posters^ around the room, \"Take a good look at these, Oh our town is famous for its fiery dragon..! Well... was famous.\""
          },
          {
            "q": "Where is the dragon?",
            "a": "\"Well, she used to come sweeping down from the southern mountains, perhaps she's still up there?\""
          },
          {
            "q": "What's your business?",
            "a": "\"I take people around the village for the dragon experience\". He looks sad again, \"that was until she stopped turning up\"."
          },
          {
            "next": "poster",
            "q": "Why do you have a pokemon poster?",
            "cond": [
              "isTrig",
              "dwarfPoster"
            ]
          },
          {
            "next": "done",
            "q": "Bye",
            "a": "\"Well bye, Hey... don't forget to take a look at my ^posters^!\" concludes the dwarf.",
            "cond": [
              "isNotTrig",
              "dwarfPoster"
            ]
          },
          {
            "next": "done",
            "q": "Bye",
            "a": "\"Well, thanks for popping by anyhow.\" concludes the dwarf.",
            "cond": [
              "isTrig",
              "dwarfPoster"
            ]
          }
        ]
      },
      "detail": "He's quite large, as ^dwarf^s go anyhow. His grey hair is pulled back in a ponytail but his beard is hanging like a tangled mop down his front.",
      "title": "^Dwarf^",
      "list": false,
      "smell": "The dwarf looks at you suspiciously as you bend over and sniff at him... But for your information, he smells, as expected, of ^dwarf^ (not so pleasant to your refined nose).",
      "actions": [
        {
          "action": [
            "give",
            "pokeball"
          ],
          "exec": [
            "if",
            [
              "isPresent",
              "pokeballFull"
            ],
            [
              [
                "say",
                "With an almost stunned look, the ^dwarf^ lifts the Pokeball out of your hands and raises it to his face. Looking into the ball he breaths the words \"Overall, this ^Wild Pidgey^ is a wonder! What a breathtaking Pokemon!\""
              ],
              [
                "anyKey"
              ],
              [
                "say",
                "|The dwarf looks up at you with a serious face \"My friend\" he says, \"You did it, you really did it! This will be a new start for me, so... I must repay you. If you will, then enter my ^Storeroom^ behind the curtains, I keep all sorts from my travels in there, and you can take whatever you need?\"."
              ],
              [
                "setObjectAttr",
                "pokeballFull",
                "room",
                "bin"
              ],
              [
                "trig",
                "dwarfBackRoom"
              ],
              [
                "setJSONAttr",
                "objects.dwarf.talk.init",
                "thanks"
              ]
            ],
            [
              "if",
              [
                "isPresent",
                "pokeball"
              ],
              [
                "say",
                "You go to return the empty ^pokeball^, but the ^dwarf^ pushes it back to you \"No you keep trying!\" he says, \"You MUST help me catch that Pidgey in the village park!"
              ],
              [
                "say",
                "But I don't have a ^pokeball^ in my possession?"
              ]
            ]
          ]
        }
      ],
      "room": "shopDwarf"
    },
    "merKing": {
      "take": "You can't pick up ^king^s...",
      "name": "king",
      "eat": "Mer-^king^ and chips :) - Nice thought... not going to happen!",
      "talk": {
        "init": "welcome",
        "no": [
          "The ^king^ laughs, \"Of course you can! I mean... why would I want this... beautiful, priceless... one of a kind ^diamond egg^. NO OF COURSE YOU MAN NOT HAVE IT!!! Well... unless...\" he puzzles.",
          {
            "next": "unless",
            "q": "Unless... unless what?"
          }
        ],
        "unless": [
          "The king waves a hand, \"No no, there's no way you could help, don't trouble yourself...\" he eyes you as if hoping you'll bite.",
          {
            "next": "story",
            "q": "I can, I can help!"
          },
          {
            "next": "story",
            "q": "What do you need..."
          },
          {
            "next": "story",
            "q": "Oh well... if there's nothing I can do...",
            "a": "The king jumps forward, \"No wait... maybe there is!\" he shouts."
          }
        ],
        "welcome": [
          "\"Welcome my beautiful royal mer-friend!\" greets the King, \"I am King Bubbles.\"",
          {
            "q": "Hello King Bubbles!",
            "a": "\"Yes, hello and hello!\" he toots."
          },
          {
            "q": "Have you seen any dragon eggs?",
            "a": "The King slowly and purposefully looks down at his hand in which he holds an amazing ^diamond egg^, then he looks back up at you, \"Like 'this' one?\" he raises an eyebrow.",
            "cond": [
              "isNotPresent",
              "diamondEgg"
            ],
            "exec": [
              "setObjectAttr",
              "diamondEgg",
              "room",
              "@room"
            ]
          },
          {
            "next": "no",
            "q": "Can I have that egg please?",
            "cond": [
              "isPresent",
              "diamondEgg"
            ]
          },
          {
            "next": "done",
            "q": "I have found a better trident!",
            "a": "The ^king^ shouts \"You have!!!\" and starts to jump around excitedly, \"I can't believe it... Give it here, give it here!\"",
            "cond": [
              "isTrig",
              "findTrident"
            ]
          },
          {
            "next": "done",
            "q": "Bye!",
            "a": "The ^king^ nods"
          }
        ],
        "story": [
          "\"Ok look\" he draws closer to you, and lowers his voice \"I was visiting King Triton's realm just last month. I was hoping to wave my new dragon ^egg^ in his face, but he just laughed and planted his golden trident in the ground (as he likes to do) and I couldn't help notice his smug gaze settle on my...\" at this point he almost spat out the words \"my ^gold bidant^!\".",
          {
            "q": "So his fork has 3 prongs?",
            "a": "The king jumps up and down \"Yes, YES! THREE prongs, that's why it's called a Trident. I need something more impressive, bigger... or with more prongs, something that speaks of power! Get me this and the egg is yours!"
          },
          {
            "q": "Where can I get one from?",
            "a": "\"Well I don't know that, I'm a king not a... a...\" the king looks fumbles for words, \"not a weapon finding minion!!!\" he concludes."
          },
          {
            "next": "done",
            "q": "OK! I am on it!!!",
            "a": "\"Really?\" the king looks ecstatic, \"This is GREAT!!!\" he exclaims \"This is very exciting! Well... go on then, off you go!\" he waves you towards the ^exit^.",
            "exec": [
              [
                "trig",
                "findTrident"
              ],
              [
                "exec",
                "scripts.newGoal",
                "trident"
              ]
            ]
          }
        ]
      },
      "list": false,
      "smell": "This ^King^ smells of fish!",
      "actions": [
        {
          "action": [
            "exam",
            "king"
          ],
          "exec": [
            "if",
            [
              "isTrig",
              "gotDiamond"
            ],
            [
              [
                "say",
                "The ^King^ is wearing a fine gold crown, a gold chain around his neck, a cloak of shimmering green, and is proudly waving a golden four pronged fork about his head and making noises like a lightsaber."
              ]
            ],
            [
              [
                "say",
                "The ^King^ is wearing a fine gold crown, a gold chain around his neck, a cloak of shimmering green, and is holding a ^golden bident^ in one hand and is a ^diamond egg^ in his other hand."
              ],
              [
                "setObjectAttr",
                "diamondEgg",
                "room",
                "@room"
              ]
            ]
          ]
        },
        {
          "action": [
            "exam",
            "bident"
          ],
          "exec": [
            "say",
            "It's like a trident (three pronged fork), but it only has two prongs instead of three. But it is made of solid gold and looks pretty sweet all the same!"
          ]
        },
        {
          "action": [
            "take",
            "bident"
          ],
          "exec": [
            "say",
            "I can't... The ^King^ is holding it!"
          ]
        },
        {
          "action": [
            "take",
            "egg"
          ],
          "cond": [
            "getObjectAttr",
            "diamondEgg",
            "kings"
          ],
          "exec": [
            "say",
            "I can't... The ^King^ is holding it!"
          ]
        },
        {
          "action": [
            "give",
            "crown"
          ],
          "exec": [
            "say",
            "You offer the ^king^ your crown, but he pushes it back \"No, no... I have plenty of golden crowns\" he sighs... \"I need an upgrade to my Bident!\""
          ]
        },
        {
          "action": [
            "give",
            "fork"
          ],
          "cond": [
            "isPresent",
            "fork"
          ],
          "exec": [
            "say",
            "You pull out the garden ^fork^ and present it to the ^King^. The King doesn't look overly pleased... \"What is this?\" he retorts, \"This does not look even remotely impressive! I am looking for something splendid! Perhaps made of Gold?\" he adds with a hopeful expression."
          ]
        },
        {
          "action": [
            "give",
            "fork"
          ],
          "cond": [
            "isPresent",
            "goldenFork"
          ],
          "exec": [
            [
              "say",
              "You pull out the ^golden fork^ and present it to the ^King^.|He flinches... then grabs the fork from your hands|\"It's...\" he gapes, \"It's... a golden trident, NO!\" he stammers, \"FOUR... four prongs... what IS IT!!! A golden... Quadent?\". The ^kings^ face is a picture of devotion as he pulls the fork close to his chest."
            ],
            [
              "anyKey"
            ],
            [
              "say",
              "\"This is it!\" he says simply, \"How could King Triton compete with this?\" he laughs. \"You may take the ^Egg^, it's yours!\"."
            ],
            [
              "goal",
              "trident"
            ],
            [
              "anyKey"
            ],
            [
              "say",
              "|The ^diamond egg^ rests on the floor by your feet."
            ],
            [
              "setObjectAttr",
              "goldenFork",
              "room",
              "bin"
            ],
            [
              "setObjectAttr",
              "diamondEgg",
              "kings",
              false
            ],
            [
              "trig",
              "gotDiamond"
            ]
          ]
        }
      ],
      "room": "corralCastle"
    },
    "stump": {
      "take": "You pull with all your might, but it's firmly rooted into the bog.",
      "pre": "a",
      "name": "stump",
      "eat": "I don't think so!",
      "detail": "It's a gnarled old ^tree stump^. Smells of rotting bark!",
      "title": "withered ^tree stump^",
      "smell": "Smells of damp rotting bark!",
      "room": "bog4"
    },
    "map": {
      "pre": "a",
      "name": "map",
      "eat": "EAT THE MAP! You're kidding... think of all the time griffpatch must have spent drawing it!",
      "detail": "It's a rather nice ^map^ of the village of the fiery dragon. If you pick it up then I could look at it better.",
      "title": "^map^",
      "actions": [
        {
          "action": [
            "exam",
            "map"
          ],
          "cond": [
            "isHeld",
            "map"
          ],
          "exec": [
            [
              "say",
              "You look at the ^map^."
            ],
            [
              "showMap"
            ]
          ]
        },
        {
          "action": [
            "read",
            "map"
          ],
          "cond": [
            "isHeld",
            "map"
          ],
          "exec": [
            [
              "say",
              "You look at the ^map^."
            ],
            [
              "showMap"
            ]
          ]
        },
        {
          "action": [
            "show",
            "map"
          ],
          "cond": [
            "isHeld",
            "map"
          ],
          "exec": [
            [
              "say",
              "You look at the ^map^."
            ],
            [
              "showMap"
            ]
          ]
        }
      ],
      "room": "inventory"
    },
    "bogBeast": {
      "take": "This creature is way to OP for me to pick up!",
      "pre": "the",
      "msg1": "As you approach the ^beast^ it turns it head sideways and fixes you with one of it's huge unblinking, beady eyes. Then without warning the huge beak plunges down from above and you have to jump back to avoid being skewered! This is not as easy as I had hoped!",
      "name": "beast",
      "talk": {
        "init": "welcome",
        "welcome": [
          "The huge bird turns its head and fixes you with one, large, beady eye...",
          {
            "q": "Hi huge Bog Beast?",
            "a": "The bird doesn't move, just keeps staring straight at you."
          },
          {
            "q": "So, what you sitting on?",
            "a": "The bird doesn't move, just keeps staring straight at you."
          },
          {
            "q": "You like it here in this bog?",
            "a": "The bird doesn't move, just keeps staring straight at you."
          },
          {
            "next": "done",
            "q": "Never mind!",
            "a": "The bird doesn't move, just keeps staring straight at you."
          }
        ]
      },
      "detail": "On closer inspection, the ^Bog Beast^ appears to have the form of a gigantic chicken. Aloft it's mighty ratcheting head sits a dainty ^silver crown^. You notice that it appears to be sitting on what looks like a ^clutch of eggs^.",
      "title": "^Bog Beast^",
      "list": false,
      "actions": [
        {
          "action": [
            "exam",
            "crown"
          ],
          "exec": [
            "say",
            "Apparently, this is some kind of huge royal chicken...? Yep, Don't ask me!"
          ]
        },
        {
          "action": [
            "exam",
            "eggs"
          ],
          "exec": [
            "say",
            [
              "getObjectAttr",
              "bogBeast",
              "msg1"
            ]
          ]
        },
        {
          "action": [
            "take",
            "eggs"
          ],
          "exec": [
            "say",
            [
              "getObjectAttr",
              "bogBeast",
              "msg1"
            ]
          ]
        },
        {
          "action": [
            "walk",
            "eggs"
          ],
          "exec": [
            "say",
            [
              "getObjectAttr",
              "bogBeast",
              "msg1"
            ]
          ]
        },
        {
          "action": [
            "walk",
            "beast"
          ],
          "exec": [
            "say",
            [
              "getObjectAttr",
              "bogBeast",
              "msg1"
            ]
          ]
        },
        {
          "action": [
            "use",
            "shield"
          ],
          "exec": [
            "if",
            [
              "isPresent",
              "shield"
            ],
            [
              [
                "say",
                "With some effort you hoist the heavy shield above your head and proceed towards the monstrous ^chicken^..."
              ],
              [
                "anyKey"
              ],
              [
                "exec",
                "scripts.walkTo",
                "underBogBeast"
              ]
            ],
            [
              "say",
              "I could really do with a real shield right now!!!"
            ]
          ]
        }
      ],
      "room": "bog7"
    },
    "goldenManPre": {
      "pre": "a",
      "name": "statue",
      "eat": "I don't tend to eat large golden objects...",
      "title": "^Golden Statue^",
      "scripts": {
        "exam": [
          [
            "say",
            "The golden statue is of a ^man^ with heavy clothes. He's standing at the very peak of the mountain as if looking out over the scene and the village below... You are just starting to contemplate who might have built such a thing up here when his eyes blink!"
          ],
          [
            "swapObject",
            "goldenManPre",
            "goldenMan"
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "exam",
            "statue"
          ],
          "exec": [
            "exec",
            "objects.goldenManPre.scripts.exam"
          ]
        },
        {
          "action": [
            "take",
            "statue"
          ],
          "exec": [
            [
              "say",
              "You attempt to lift the statue... but then realise something is not as it seemed..."
            ],
            [
              "exec",
              "objects.goldenManPre.scripts.exam"
            ]
          ]
        },
        {
          "action": [
            "smell",
            "statue"
          ],
          "exec": [
            [
              "say",
              "You give the statue a sniff... but then realise something is not as it seemed..."
            ],
            [
              "exec",
              "objects.goldenManPre.scripts.exam"
            ]
          ]
        },
        {
          "action": [
            "talk",
            "statue"
          ],
          "exec": [
            [
              "say",
              "\"Hello statue\" you say, but then notice something is not as it seemed..."
            ],
            [
              "exec",
              "objects.goldenManPre.scripts.exam"
            ]
          ]
        }
      ],
      "room": "mountainPeak"
    },
    "emeraldEgg": {
      "pre": "an",
      "afterTake": [
        "goal",
        "eggCloud"
      ],
      "name": "egg",
      "eat": "This ^egg^ is not for consumption!",
      "detail": "It's a large emerald coloured egg. This egg is quite angular like a cut stone and luminous green.",
      "title": "^Emerald Egg^",
      "smell": "To be honest, the egg doesn't really smell of anything in particular.",
      "room": "giantsTable",
      "full": "Emerald Egg"
    },
    "goldenHat": {
      "pre": "a",
      "name": "hat",
      "eat": "It's too beautiful to be eaten!",
      "detail": "It's a very shiny, golden witches ^hat^ with a wide rim.",
      "title": "large ^golden hat^",
      "actions": [
        {
          "action": [
            "give",
            "hat"
          ],
          "cond": [
            "isPresent",
            "witch"
          ],
          "exec": [
            "say",
            "The witch eyes the hat suspiciously... \"What's this?\" she cackles, \"A golden witches hat? What respectable witch would be seen in that! No thank you\"."
          ]
        }
      ]
    },
    "egg1": {
      "pre": "a",
      "name": "egg",
      "detail": "It's a huge ruby coloured ^egg^, at least a foot high and standing vertically in the golden ^nest^. The colour is astonishingly vibrant even in this dark light, perhaps it even glowed? The texture is also amazing as it is roughened in a lattice pastern, perhaps resembling scales.",
      "title": "huge ^ruby egg^",
      "scripts": {
        "dragon": [
          [
            "say",
            "|Suddenly, in an explosion of movement, an enormous reptilian body drops from the shadows causing the smoke to thrash around you"
          ],
          [
            "goal",
            "dragon"
          ],
          [
            "anyKey"
          ],
          [
            "setJSONAttr",
            "rooms.cavern.walk.n",
            "caveDragon"
          ],
          [
            "talk",
            "objects.dragon.talk"
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "take",
            "egg"
          ],
          "exec": [
            "exec",
            "objects.egg1.scripts.dragon"
          ]
        },
        {
          "action": [
            "exam",
            "egg"
          ],
          "exec": [
            [
              "say",
              [
                "getObjectAttr",
                "egg1",
                "detail"
              ]
            ],
            [
              "anykey"
            ],
            [
              "exec",
              "objects.egg1.scripts.dragon"
            ]
          ]
        },
        {
          "action": [
            "eat",
            "egg"
          ],
          "exec": [
            [
              "say",
              "You approach the egg..."
            ],
            [
              "anykey"
            ],
            [
              "exec",
              "objects.egg1.scripts.dragon"
            ]
          ]
        },
        {
          "action": [
            "smell",
            "egg"
          ],
          "exec": [
            [
              "say",
              "You approach the egg..."
            ],
            [
              "anykey"
            ],
            [
              "exec",
              "objects.egg1.scripts.dragon"
            ]
          ]
        }
      ],
      "full": "ruby egg"
    },
    "mouseTail": {
      "pre": "a",
      "name": "tail",
      "detail": "The ^tail^ is long, thick, covered in a course hair and has a distinctly pink colouration. It's poking out of the shivering pile of ^straw^.",
      "title": "long ^pink tail^",
      "scripts": {
        "takeTail": [
          [
            "say",
            "There's a loud, high pitched squeak and the ^tail^ instantly disappears into the ^straw^ pile (which starts to quiver all the more violently)."
          ],
          [
            "setObjectAttr",
            "mouseTail",
            "room",
            "bin"
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "take",
            "tail"
          ],
          "exec": [
            "exec",
            "objects.mouseTail.scripts.takeTail"
          ]
        },
        {
          "action": [
            "kick",
            "tail"
          ],
          "exec": [
            "exec",
            "objects.mouseTail.scripts.takeTail"
          ]
        },
        {
          "action": [
            "push",
            "tail"
          ],
          "exec": [
            "exec",
            "objects.mouseTail.scripts.takeTail"
          ]
        },
        {
          "action": [
            "pull",
            "tail"
          ],
          "exec": [
            "exec",
            "objects.mouseTail.scripts.takeTail"
          ]
        },
        {
          "action": [
            "use",
            "tail"
          ],
          "exec": [
            "exec",
            "objects.mouseTail.scripts.takeTail"
          ]
        },
        {
          "action": [
            "talk",
            "tail"
          ],
          "exec": [
            "say",
            "\"Hello...? Is there someone in there?\",|the straw stops quivering for a moment and then a little voice squeaks \"so hungry...\" and then the ^straw^ starts shivering again."
          ]
        }
      ],
      "room": "giantMouseHole",
      "full": "pink tail"
    },
    "tail": {
      "pre": "a",
      "name": "tail",
      "eat": "Now if only I could locate an equally large portion of chips?",
      "detail": "It's a good 4 to 5 feet long and quite ridiculous that I'm able to carry it around with me at all! What is interesting is that it appears to be mostly hollow like a huge shimmering, scaled rubber glove and gives the impression that this end may accommodate ones legs?",
      "title": "huge ^fish tail^",
      "smell": "It smells like a huge cod!",
      "actions": [
        {
          "action": [
            "use",
            "tail"
          ],
          "exec": [
            "if",
            [
              "isTrig",
              "wearTail"
            ],
            [
              "say",
              "You are already wearing it!"
            ],
            [
              "if",
              [
                "equals",
                "@room",
                "shallows"
              ],
              [
                [
                  "say",
                  "You sit down in the shallow waves and pull the tail over your feet and then up your legs. The inside is cold and a little damp feeling, but not so unpleasant or uncomfortable. The tail snaps snugly around your waist and... what do you know - You look just like a mer-person!!"
                ],
                [
                  "anyKey"
                ],
                [
                  "set",
                  "@room",
                  "shallows2"
                ],
                [
                  "moveAllObjects",
                  "shallows",
                  "shallows2"
                ],
                [
                  "trig",
                  "wearTail"
                ],
                [
                  "exec",
                  "scripts.look"
                ]
              ],
              [
                [
                  "say",
                  "You sit down and pull the tail over your feet and then up your legs. The inside is cold and a little damp feeling, but not so unpleasant or uncomfortable. The tail snaps snugly around your waist and... what do you know - You look just like a mer-person!!"
                ],
                [
                  "anyKey"
                ],
                [
                  "say",
                  "|Hmm... except you are stranded on land... and it's incredibly difficult to move around without any legs. You are forced to remove the tail once more."
                ]
              ]
            ]
          ]
        },
        {
          "action": [
            "drop",
            "tail"
          ],
          "cond": [
            "isTrig",
            "wearTail"
          ],
          "exec": [
            "say",
            "You can't drop the ^tail^ because you are wearing it!"
          ]
        },
        {
          "action": [
            "throw",
            "tail"
          ],
          "cond": [
            "isTrig",
            "wearTail"
          ],
          "exec": [
            "say",
            "You can't throw the ^tail^ because you are wearing it!"
          ]
        },
        {
          "action": [
            "exam",
            "tail"
          ],
          "cond": [
            "isTrig",
            "wearTail"
          ],
          "exec": [
            "say",
            "Wow, the ^tail^ you are wearing is amazingly powerful, you give it a huge flick and it sends you speeding through the water like a dolphin!"
          ]
        }
      ],
      "full": "fish tail"
    },
    "scepter": {
      "pre": "the",
      "name": "scepter",
      "eat": "Yeah right... Who does that?",
      "detail": "It's like a huge golden Egg on a stick. In fact, I think it IS an ^egg^ on a stick! If you give it a push I'm sure it would come right off!",
      "title": "Kings ^Scepter^",
      "smell": "Smells a bit suspicious!",
      "scripts": {
        "pullEgg": [
          [
            "swapObject",
            "scepter",
            "goldenEgg"
          ],
          [
            "setObjectAttr",
            "scepterHandle",
            "room",
            "@room"
          ],
          [
            "say",
            "You give the ^handle^ of the ^Scepter^ a pull and it comes clean off leaving you with a large ^Golden Egg^!"
          ],
          [
            "goal",
            "eggKing"
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "pull",
            "scepter"
          ],
          "exec": [
            "exec",
            "objects.scepter.scripts.pullEgg"
          ]
        },
        {
          "action": [
            "push",
            "scepter"
          ],
          "exec": [
            "exec",
            "objects.scepter.scripts.pullEgg"
          ]
        },
        {
          "action": [
            "break",
            "scepter"
          ],
          "exec": [
            "exec",
            "objects.scepter.scripts.pullEgg"
          ]
        },
        {
          "action": [
            "pull",
            "egg"
          ],
          "exec": [
            "exec",
            "objects.scepter.scripts.pullEgg"
          ]
        },
        {
          "action": [
            "push",
            "egg"
          ],
          "exec": [
            "exec",
            "objects.scepter.scripts.pullEgg"
          ]
        },
        {
          "action": [
            "take",
            "egg"
          ],
          "exec": [
            "exec",
            "objects.scepter.scripts.pullEgg"
          ]
        }
      ],
      "room": "castleTreasury"
    },
    "torch": {
      "pre": "a",
      "light": true,
      "name": "torch",
      "eat": "I've seen it done at the circus, but it's not really my idea of fun.",
      "detail": "The ^torch^ is flaming beautifully... somehow it just never seems to go out :)",
      "title": "^flaming torch^",
      "smell": "The smoke tickles your throat and makes you cough!"
    },
    "necklace": {
      "pre": "the",
      "name": "necklace",
      "eat": "Yeah right... Who does that?",
      "detail": "The necklace is made of heavy golden chain and weighs a ton!",
      "title": "Kings ^Chain Necklace^",
      "smell": "Smells expensive!",
      "actions": [
        {
          "action": [
            "wear",
            "necklace"
          ],
          "exec": [
            "say",
            "You try it on, but quickly remove it... It looked good, but you don't want to be caught wearing it in public after all!"
          ]
        },
        {
          "action": [
            "use",
            "necklace"
          ],
          "exec": [
            "say",
            "You try it on, but quickly remove it... It looked good, but you don't want to be caught wearing it in public after all!"
          ]
        }
      ],
      "room": "castleTreasury"
    },
    "beanstalk": {
      "take": "What... you kid?",
      "pre": "the",
      "name": "beanstalk",
      "eat": "You sink your teeth into one tendril of the huge beanstalk. Boy is it tough!",
      "detail": "The ^beanstalk^ is ridiculously OP! It reached high, high into the sky and appears to come to an end in that solid looking ^cloud^... suspicious yet handy!",
      "title": "^bean stalk^",
      "list": false,
      "smell": "Smells like a green grocers.",
      "scripts": {
        "climb": [
          [
            "say",
            "And so it begins, your epic journey up the ^beanstalk^! You reach up and hoist yourself onto the first leaf."
          ],
          [
            "anyKey"
          ],
          [
            "say",
            "|(1 hours later...)"
          ],
          [
            "anyKey"
          ],
          [
            "exec",
            "scripts.walkTo",
            "beanstalk"
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "climb",
            "beanstalk"
          ],
          "exec": [
            "exec",
            "objects.beanstalk.scripts.climb"
          ]
        },
        {
          "action": [
            "walk",
            "beanstalk"
          ],
          "exec": [
            "exec",
            "objects.beanstalk.scripts.climb"
          ]
        },
        {
          "action": [
            "u"
          ],
          "exec": [
            "exec",
            "objects.beanstalk.scripts.climb"
          ]
        }
      ]
    },
    "cabbages": {
      "take": "There's nothing left of them but stumps - That fat ^bunny^ is surely to blame!",
      "pre": "rows of",
      "name": "cabbage",
      "eat": "There's nothing left of them but stumps - That fat ^bunny^ is surely to blame!",
      "detail": "There's nothing left of them but stumps - That fat ^bunny^ is surely to blame!",
      "title": "^ravaged cabbages^",
      "list": false,
      "smell": "They smell... like raw cabbage!",
      "room": "vegPatch"
    },
    "hookingCane": {
      "pre": "a",
      "useWith": true,
      "name": "cane",
      "eat": "Never! I'm dead proud of this tool!",
      "detail": "It's a nice long bamboo ^garden cane^ with a ^hook^ pushed into one end.",
      "title": "^hooked cane^",
      "smell": "Hmm... Smells of garden!",
      "scripts": {
        "hookRing": [
          "if",
          [
            "equals",
            "@room",
            "square"
          ],
          [
            [
              "say",
              "Slowly you reach down into the ^pool^ using the ^hooked cane^. For a moment even the Piranhas seem to stop and watch as you carefully slide the end of the wire hook through the loop of the ring."
            ],
            [
              "anyKey"
            ],
            [
              "say",
              "|And then you have it there in your hand! The ^Ring^."
            ],
            [
              "setObjectAttr",
              "hookingCane",
              "room",
              "bin"
            ],
            [
              "trig",
              "gotRing"
            ],
            [
              "setObjectAttr",
              "ring",
              "room",
              "inventory"
            ]
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "cane",
            "pool"
          ],
          "cond": [
            "isNotTrig",
            "gotRing"
          ],
          "exec": [
            "say",
            "Please be more specific... What do you want to hook from the pool?"
          ]
        },
        {
          "action": [
            "pool",
            "cane"
          ],
          "cond": [
            "isNotTrig",
            "gotRing"
          ],
          "exec": [
            "say",
            "Please be more specific... What do you want to hook from the pool?"
          ]
        },
        {
          "action": [
            "cane",
            "fish"
          ],
          "cond": [
            "isNotTrig",
            "gotRing"
          ],
          "exec": [
            "say",
            "You try to hook a fish, but they are just too fast!"
          ]
        },
        {
          "action": [
            "fish",
            "cane"
          ],
          "cond": [
            "isNotTrig",
            "gotRing"
          ],
          "exec": [
            "say",
            "You try to hook a fish, but they are just too fast!"
          ]
        },
        {
          "action": [
            "cane",
            "coin"
          ],
          "cond": [
            "isNotTrig",
            "gotRing"
          ],
          "exec": [
            "say",
            "You try to hook a coin, but it's impossible!"
          ]
        },
        {
          "action": [
            "coin",
            "cane"
          ],
          "cond": [
            "isNotTrig",
            "gotRing"
          ],
          "exec": [
            "say",
            "You try to hook a coin, but it's impossible!"
          ]
        },
        {
          "action": [
            "cane",
            "ring"
          ],
          "cond": [
            "isNotTrig",
            "gotRing"
          ],
          "exec": [
            "exec",
            "objects.hookingCane.scripts.hookRing"
          ]
        },
        {
          "action": [
            "ring",
            "cane"
          ],
          "cond": [
            "isNotTrig",
            "gotRing"
          ],
          "exec": [
            "exec",
            "objects.hookingCane.scripts.hookRing"
          ]
        },
        {
          "action": [
            "wire",
            "ring"
          ],
          "cond": [
            "isNotTrig",
            "gotRing"
          ],
          "exec": [
            "exec",
            "objects.hookingCane.scripts.hookRing"
          ]
        },
        {
          "action": [
            "ring",
            "wire"
          ],
          "cond": [
            "isNotTrig",
            "gotRing"
          ],
          "exec": [
            "exec",
            "objects.hookingCane.scripts.hookRing"
          ]
        }
      ]
    },
    "magicBeans": {
      "pre": "some",
      "useWith": true,
      "name": "beans",
      "eat": "Nope... I'm not going to eat my magic beans!",
      "detail": "These ^beans^ are now rather lively and are practically jiggling around in your hand! Now I just need to find the right place to plant them!",
      "title": "^magic beans^",
      "smell": "The ^beans^ smell very... magic!!!",
      "scripts": {
        "plantBeans": [
          "if",
          [
            "equals",
            "@room",
            "forestGlade"
          ],
          [
            [
              "say",
              "You push the ^magic beans^ into the fertile ^earth^ and stand back, expectant."
            ],
            [
              "anyKey"
            ],
            [
              "say",
              "|Suddenly the earth begins to shake..."
            ],
            [
              "anyKey"
            ],
            [
              "say",
              "|Then it stops..."
            ],
            [
              "anyKey"
            ],
            [
              "say",
              "|\"What! Is that it...?\" you begin to think, when suddenly the earth burst open and the most ridiculously powerful ^beanstalk^ erupts into the sky showering you with dirt as it goes."
            ],
            [
              "setJSONAttr",
              "rooms.forestGlade.descAttr",
              "desc2"
            ],
            [
              "setObjectAttr",
              "magicBeans",
              "room",
              "bin"
            ],
            [
              "setObjectAttr",
              "beanstalk",
              "room",
              "forestGlade"
            ],
            [
              "trig",
              "beanstalk"
            ],
            [
              "goal",
              "plantBeans"
            ]
          ],
          [
            "say",
            "You know... I'm going to look out for a special place to plant these ^magic beans^."
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "beans",
            "soil"
          ],
          "exec": [
            "exec",
            "objects.magicBeans.scripts.plantBeans"
          ]
        },
        {
          "action": [
            "soil",
            "beans"
          ],
          "exec": [
            "exec",
            "objects.magicBeans.scripts.plantBeans"
          ]
        },
        {
          "action": [
            "plant",
            "beans"
          ],
          "exec": [
            "exec",
            "objects.magicBeans.scripts.plantBeans"
          ]
        },
        {
          "action": [
            "use",
            "beans"
          ],
          "exec": [
            "exec",
            "objects.magicBeans.scripts.plantBeans"
          ]
        }
      ]
    },
    "rabbitCloud": {
      "take": "How? Even if I wanted it, it's just a gas!",
      "pre": "a",
      "name": "cloud",
      "eat": "I refuse to even open my mouth in its presence!",
      "detail": "No no no... this can't exist!!! I can't believe I can actually... see it! (although I think it's starting to dissipate? You can only hope!",
      "title": "smelly cabbage ^fart cloud^",
      "smell": "I don't need to smell it... It's all around me and it smells... VERY VERY BAD! Like some kind of toxic cabbage chemical weapon!"
    },
    "bucketSeaWater": {
      "pre": "a",
      "useWith": true,
      "name": "bucket",
      "detail": "It's a bright blue plastic ^bucket^ full of salty sea water.",
      "title": "^bucket of sea water^",
      "smell": "You can smell... salty sea water!",
      "actions": [
        {
          "action": [
            "bucket",
            "pool"
          ],
          "exec": [
            "exec",
            "objects.bucket.scripts.useBucketPool",
            "bucketSeaWater"
          ]
        },
        {
          "action": [
            "pool",
            "bucket"
          ],
          "exec": [
            "exec",
            "objects.bucket.scripts.useBucketPool",
            "bucketSeaWater"
          ]
        }
      ]
    },
    "fork": {
      "pre": "a",
      "useWith": true,
      "name": "fork",
      "eat": "I could perhaps eat things with it...? But even that would be a little on the impracticable side!",
      "detail": "The ^Garden Fork^ is a four pronged affair with a dark green plastic handle and a wooden shaft.",
      "title": "^Garden Fork^",
      "smell": "You know... it just doesn't really smell of anything!",
      "room": "shed"
    },
    "swing": {
      "take": "You take the ^rope swing^ in your hands and give it a pull... It's firmly attached to the branch above!",
      "name": "swing",
      "eat": "I wouldn't know where to start!",
      "detail": "The ^swing^ has been made from a thick plaited rope knotted over a branch that overhangs the stream. A large knot in the rope serves as a seat.",
      "list": false,
      "smell": "Smells of damp rotting bark!",
      "scripts": {
        "swing": [
          "say",
          "You climb onto the large knot that makes up the seat of the swing and push off the bank... Woo-hoo!!!! You swing out over the water, spinning as you go, and then inevitably swoop back to the shore once more. That was fun!"
        ]
      },
      "actions": [
        {
          "action": [
            "swing"
          ],
          "strict": true,
          "exec": [
            "exec",
            "objects.swing.scripts.swing"
          ]
        },
        {
          "action": [
            "use",
            "swing"
          ],
          "exec": [
            "exec",
            "objects.swing.scripts.swing"
          ]
        },
        {
          "action": [
            "swing",
            "swing"
          ],
          "exec": [
            "exec",
            "objects.swing.scripts.swing"
          ]
        },
        {
          "action": [
            "climb",
            "swing"
          ],
          "exec": [
            "exec",
            "objects.swing.scripts.swing"
          ]
        },
        {
          "action": [
            "push",
            "swing"
          ],
          "exec": [
            "say",
            "You push the rope ^swing^ and it arcs out over stream and then swings back again into your hand."
          ]
        }
      ],
      "room": "forest3"
    },
    "fishmonger": {
      "take": "Are you still trying to pick everything up???",
      "pre": "the",
      "name": "fishmonger",
      "eat": "I'd much sooner eat one of his fishes!",
      "talk": {
        "init": "welcome",
        "default": [
          "The fishmonger sighs, I wish people would come back to our village.",
          {
            "q": "Why have people stopped coming?",
            "a": "The fishmonger looks at you, \"It's the Dragon, or the lack of her.\" he half chuckles, then looks glum, \"Without the Dragon making her daily swoops over our village, entertaining the visitors, well... they just stopped coming didn't they.\""
          },
          {
            "q": "What's that empty fish tank?",
            "a": "\"Oh, I used to keep some tropical fishes in there. The customers liked them you see.\" explained the Fishmonger."
          },
          {
            "next": "fishTail",
            "q": "What's with that tail in the display case?",
            "cond": [
              "isTrig",
              "seenTail"
            ]
          },
          {
            "q": "Can I have that tail?",
            "a": "He looks around, \"Well, its twitching does rather spook the customers... Listen.\" he learns forward, \"If you can bring me a nice, say, tropical fish? A living one you understand for my tank, then I'll give you the tail.\".",
            "cond": [
              "isTrig",
              "seenTail"
            ],
            "exec": [
              "exec",
              "scripts.newGoal",
              "fish"
            ]
          },
          {
            "next": "done",
            "q": "Bye...!",
            "a": "Come back again any time!"
          }
        ],
        "fishTale3": [
          "Within the net, half hidden by the thrashing fish, was a Manfish. He was half man, half fish, had this huge tail, they all saw it! But then the lighting flashes and the men are half blinded... And when they look back... the Manfish is gone!\"",
          {
            "next": "default",
            "q": "Gone...?",
            "a": "\"Yes... Gone.\" the fishmonger sweeps his hand slowly across his stall. \"But... not all gone. No, still in the net is his tail. That's not the only weird thing that happened that day, when the fishing boat returned to shore, it had one more crew member than they expected! Never did understand where he did come from either.\" the fishmonger scratched his head.",
            "silent": true
          }
        ],
        "fishTale2": [
          "He looks pleased, then continues, \"So one stormy night one fishing boat is being battered by the waves (did I say it was raining? yes, ok), and the men are struggling to pull up their nets, water is crashing over the deck, the men are tired, and soaked to the bone. So they are pulling in those nets, they finally heave them bursting with fish on to the deck, and what do you think they saw?!\", the fishmonger looks at you expectantly...",
          {
            "next": "fishTale3",
            "q": "Some fish...?",
            "a": "Well yes, yes, but more than that."
          },
          {
            "next": "fishTale3",
            "q": "A huge twitching fish tail?",
            "a": "No no no, you're jumping ahead."
          },
          {
            "next": "fishTale3",
            "q": "Was it Griffpatch?",
            "a": "Who's that? Griffpatch? No, not Griffpatch."
          }
        ],
        "fishTale": [
          "He fixes you with a serious stare... \"Oh now THAT is a crazy tail...\" he pauses then bursts into fits of laughter... \"Tail...?  Tail... do you get it! ha ha!\".",
          {
            "next": "fishTale2",
            "q": "Yeah I get it... Tail, Tale? Good one"
          },
          {
            "next": "done",
            "q": "No, was that supposed to be a joke?",
            "a": "He looks a little put out... \"Well, if you can't take a joke, good day to you.\""
          }
        ],
        "fishTail": [
          "He turns around and looks proudly at the display case, \"Isn't he a beauty!\" we whispers, he turns back to you, \"I thought it might draw in a few customers?",
          {
            "next": "fishTale",
            "q": "Where did you get it from?"
          }
        ],
        "welcome": [
          "\"Fishes! Get your Fish here!\" announces the Fishmonger in a loud voice.",
          {
            "next": "default",
            "q": "How's business?",
            "a": "\"Not so good sadly, people just aren't coming to our village anymore.",
            "silent": true,
            "exec": [
              "setJSONAttr",
              "objects.fishmonger.talk.init",
              "default"
            ]
          },
          {
            "next": "default",
            "q": "Why don't you have more fish to sell?",
            "a": "\"Well...\" sighs the fishmonger, \"It would be a waste to have all that fish since I'm not selling much these days\".",
            "exec": [
              "setJSONAttr",
              "objects.fishmonger.talk.init",
              "default"
            ]
          },
          {
            "next": "done",
            "q": "Bye...!",
            "a": "Come back again any time!"
          }
        ]
      },
      "detail": "He's a tall, well built man in heavy, white overalls and a blue and white striped apron.",
      "title": "^Fishmonger^",
      "list": false,
      "smell": "Fish fish fish... that's all I smell!",
      "scripts": {
        "givePiranha": [
          "if",
          [
            "isPresent",
            "bucketPiranha"
          ],
          [
            [
              "say",
              "You hand the ^bucket^ over the stall to the ^Fishmonger^ who peers inside. \"Well saints alive!\" he gasps, \"This is exactly what I needed for me fish tank!\", He takes the bucket and stashes it behind his stall."
            ],
            [
              "goal",
              "fish"
            ],
            [
              "anyKey"
            ],
            [
              "say",
              "|\"So, I guess you'll be wanting this creepy thing then?\" at this he reaches up to the sign above his head which right on cue gives a rather large twitch."
            ],
            [
              "anyKey"
            ],
            [
              "say",
              "|\"A few moments later the display box lies empty and the the large ^fish tail^ is lying on the counter in front of you. \"There you go! And may it do you more favor than it's done me, Ha!\" he chuckles."
            ],
            [
              "setObjectAttr",
              "bucketPiranha",
              "room",
              "bin"
            ],
            [
              "setObjectAttr",
              "tail",
              "room",
              "@room"
            ],
            [
              "trig",
              "gotTail"
            ]
          ],
          [
            "say",
            "You don't have one to give him!"
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "give",
            "bucket"
          ],
          "exec": [
            "exec",
            "objects.fishmonger.scripts.givePiranha"
          ]
        },
        {
          "action": [
            "give",
            "fish"
          ],
          "exec": [
            "exec",
            "objects.fishmonger.scripts.givePiranha"
          ]
        }
      ],
      "room": "fishmongersStall"
    },
    "witch": {
      "take": "I can't pick up the witch!",
      "pre": "a",
      "name": "witch",
      "eat": "Is eating witches a good thing? I think I'll pass...",
      "talk": {
        "init": "welcome",
        "hugeVeg": [
          "\"What these little things...?\" she looks around with a cracked grin \"No, these are just the diddly ones! The tweeniest, mini-squeeny ones?!?\" she breaks into a cackling laugh.",
          {
            "q": "You have bigger vegetables than these...?",
            "a": "She raises her arms as high and wide as her old witch body can manage and shouts \"Yes, Yes! My next batch will be 10 times as large I'm sure!"
          },
          {
            "q": "How do you grow them?",
            "a": "She screws up her face, then flashes her eyes wide \"MAGIC!!!\" she cackles \"Magic of course child...\" and then as she turns and rests a hand on her ^cauldron^ \"and well, I just dip the seeds in my special potion of course!\"."
          },
          {
            "q": "Why do you grow huge vegetables?",
            "a": "The witch frowns \"Well.\" she says a little hurt \"Don't the muggles 'want' my huge vegetables? They are very nutritious? I plan to sell them for a very reasonable price? Well, she sighs I always have my ^hat business^ to fall back on I suppose if I have miscalculated\" she taps her hat thoughtfully.",
            "exec": [
              "trig",
              "hatBusiness"
            ]
          },
          {
            "q": "Can I buy a huge potato?",
            "a": "The witch brightens up instantly, \"There you go!!! You see!!!\" she cackles \"Even you want one! I knew it... didn't I tell you. But, no\" she admits \"No, these ones are not for sale, they are too small.\"",
            "cond": [
              "isTrig",
              "hatBusiness"
            ]
          },
          {
            "next": "welcome",
            "q": "Enough of vegetables already...",
            "a": "\"Humph\" snorts the witch.",
            "silent": true
          }
        ],
        "wrapItUp": [
          "\"Oh you like it?\" she looks happy, \"It's very reasonable too, only 200 groats, should I wrap it up for you?\"",
          {
            "next": "welcome",
            "q": "Oh dear... Sorry I can't afford that",
            "silent": true,
            "exec": [
              "say",
              [
                "getJSONAttr",
                "objects.witch.talk.returnHatStr"
              ]
            ]
          }
        ],
        "returnHatStr": "The witch's shoulders sink, \"Oh... that is a shame. Well, I'll quickly pop it back - excuse me a moment.\". The witch leans around a door and throws the hat onto a table in the backroom.",
        "hats": [
          "\"Why yes!\" she answers, \"I specialise in them, but I only have the one in stock right now...\" she looks thoughtful.",
          {
            "q": "Only one hat?",
            "a": "\"Yes, just one. I've been so excited working on the veggies that I've quite let the hat trade slip! I really need to order some new ones in.\" she replies."
          },
          {
            "next": "done",
            "q": "May I see the hat?",
            "exec": [
              "exec",
              "objects.witch.scripts.seeHat"
            ]
          },
          {
            "next": "welcome",
            "q": "I'm not interested in hats.",
            "a": "\"Suit yourself\" she snorts."
          }
        ],
        "welcome": [
          "\"Hello my child\" the witch chirps revealing the few remaining blackened teeth as her lips draw back into what can only be assumed is a smile.",
          {
            "q": "So you're a witch?",
            "a": "\"Bingo!\" she cackles, \"Top marks for observation!\""
          },
          {
            "next": "hugeVeg",
            "q": "Huge Vegetables?"
          },
          {
            "q": "What's in the Cauldron?",
            "a": "The witch stares deep into the bubbling cauldron with a look of deep satisfaction \"This is my best... \" she screws up her face \"BEST\" and relaxes \"batch of veg-growing potion I've ever made. A quick dip in this the little seeds will be practically jumping with energy!\""
          },
          {
            "next": "hats",
            "q": "So... You sell hats?",
            "cond": [
              "isTrig",
              "hatBusiness"
            ]
          },
          {
            "next": "done",
            "q": "Ok, Bye!",
            "a": "\"You don't want to stay?\" the witch asks after you."
          }
        ],
        "bringHat": [
          "|Seconds later, she reemerges holding a large black hat, \"Here it is!\" she announces setting it down on a table for you to look at. \"So what do you think?\"",
          {
            "q": "It's very... black?",
            "a": "\"Well yes, I only sell black hats of course.\""
          },
          {
            "q": "Does it come in any other colour?",
            "a": "Well, I did see some dark grey hats in a recent mail-order catalogue, but I thought they were a bit too daring for my taste.\""
          },
          {
            "next": "wrapItUp",
            "q": "It's great!"
          },
          {
            "next": "welcome",
            "q": "Sorry, it's not for me.",
            "silent": true,
            "exec": [
              "say",
              [
                "getJSONAttr",
                "objects.witch.talk.returnHatStr"
              ]
            ]
          }
        ]
      },
      "detail": "She's not the prettiest sight to behold, but she's standard witch material. She has the hat, the cloak... that wart! Oh yeah, she's all there!",
      "title": "Haggard ^Old Witch^",
      "smell": "It's hard to tell what with the rather rotten smell coming from the bubbling ^cauldron^ in the centre of the room.",
      "scripts": {
        "seeHat": [
          [
            "say",
            "She hesitates, looking around the room, \"Yes, yes... But I just have to fetch it... please don't touch anything! I won't be a moment!\", she shuffles into the back room."
          ],
          [
            "anyKey"
          ],
          [
            "if",
            [
              "OR",
              [
                "isNotTrig",
                "hatIsOut"
              ],
              [
                "equals",
                [
                  "getObjectAttr",
                  "hat",
                  "room"
                ],
                "witchBackRoom"
              ]
            ],
            [
              [
                "talk",
                "objects.witch.talk",
                "bringHat"
              ],
              [
                "trig",
                "hatIsOut"
              ],
              [
                "setObjectAttr",
                "hat",
                "room",
                "witchBackRoom"
              ]
            ],
            [
              [
                "say",
                "|You hear the witch shuffling around in the back room and a few confused grunts..."
              ],
              [
                "setObjectAttr",
                "witch",
                "room",
                "bin"
              ],
              [
                "trig",
                "witchGone"
              ]
            ]
          ]
        ]
      },
      "room": "witchCottage"
    },
    "amberEgg": {
      "pre": "an",
      "afterTake": [
        "goal",
        "eggBog"
      ],
      "name": "egg",
      "eat": "This ^egg^ is not for consumption!",
      "detail": "It's a large amber coloured egg. This egg is smooth on the outside and mildly translucent (as amber tends to be) and you can make out the dark silhouette of something shifting deep within.",
      "title": "^Amber Egg^",
      "smell": "To be honest, the egg doesn't really smell of anything in particular.",
      "room": "underBogBeast",
      "full": "Amber Egg"
    },
    "cauldron": {
      "take": "It's full of bubbling liquid, I daren't even try to lift it!",
      "useWith": true,
      "name": "cauldron",
      "eat": "Although there's a chance that whatever is in that ^cauldron^ is edible, I won't be risking it thank you very much.",
      "detail": "The ^Cauldron^ is made of thick cast iron and is filled with a thick, bubbling, dark violet liquid... It doesn't smell very nice!",
      "list": false,
      "smell": "Ooh.. Gosh, you have to catch your breath... It gets right up your nose, and not in any good way!",
      "scripts": {
        "beansCauldron": [
          "if",
          [
            "isPresent",
            "beans"
          ],
          [
            "if",
            [
              "isTrig",
              "witchGone"
            ],
            [
              [
                "say",
                "You carefully dip the ^beans^ into the thick bubbling liquid... As the ^beans^ touch the surface there is a dramatic whoosh of steam followed by a flash of light (and the distant meow of a cat)."
              ],
              [
                "swapObject",
                "beans",
                "magicBeans"
              ],
              [
                "goal",
                "dipBeans"
              ],
              [
                "exec",
                "scripts.newGoal",
                "plantBeans"
              ]
            ],
            [
              [
                "say",
                "\"Excuse ME!!!\" snaps the witch pushing back your hand even before you had the chance to raise it... \"Use of my magic ^cauldron^ is strictly forbidden!\"."
              ],
              [
                "exec",
                "scripts.newGoal",
                "dipBeans"
              ]
            ]
          ],
          [
            "say",
            "What beans?"
          ]
        ]
      },
      "actions": [
        {
          "action": [
            "beans",
            "cauldron"
          ],
          "exec": [
            "exec",
            "objects.cauldron.scripts.beansCauldron"
          ]
        },
        {
          "action": [
            "cauldron",
            "beans"
          ],
          "exec": [
            "exec",
            "objects.cauldron.scripts.beansCauldron"
          ]
        },
        {
          "action": [
            "drop",
            "beans"
          ],
          "exec": [
            "exec",
            "objects.cauldron.scripts.beansCauldron"
          ]
        },
        {
          "action": [
            "dip",
            "beans"
          ],
          "exec": [
            "exec",
            "objects.cauldron.scripts.beansCauldron"
          ]
        }
      ],
      "room": "witchCottage"
    },
    "magazine": {
      "take": "You can't, it's tied to one of the door knobs by a string.",
      "pre": "a",
      "name": "magazine",
      "eat": "Not sure I really want to... It looks quite grubby from many years of use!",
      "title": "^magazine^ on a string",
      "actions": [
        {
          "action": [
            "exam",
            "magazine"
          ],
          "exec": [
            [
              "say",
              "The front cover shows a beautiful witch astride a broomstick, robe flowing behind her and the most outrageously over-sized hat upon her head. The title reads \"Witch Hats is Which!\" and there's a post-it stuck to the front that reads \"MUST ORDER NEW HATS, ONLY 3, 2, 1 LEFT!!!\" - The 3 and 2 are crossed out..."
            ],
            [
              "trig",
              "hatBusiness"
            ]
          ]
        },
        {
          "action": [
            "open",
            "magazine"
          ],
          "exec": [
            [
              "say",
              "The inside is full of pages upon page of black witches hats... To be honest they all look the same to me! There is one that is perhaps a tad more grey than the other right on the back page!"
            ],
            [
              "trig",
              "hatBusiness"
            ]
          ]
        }
      ]
    },
    "spider": {
      "pre": "a",
      "name": "spider",
      "eat": "Oh come on... You're lucky I'm even holding this thing... I flat out refuse to eat it!",
      "detail": "Its a very creepy, large, black, hairy spider.",
      "title": "^hairy spider^",
      "smell": "I'm not putting it near my face!"
    }
  },
  "scripts": {
    "climbTree": [
      [
        "say",
        "You shimmy up the nearest tree trunk into the leafy trees. It's fun, but you can't get high enough to see any further so you climb back down."
      ]
    ],
    "preJump": [
      "if",
      [
        "isTrig",
        "wearTail"
      ],
      [
        [
          "say",
          "You remove your tail as you exit the water..."
        ],
        [
          "anyKey"
        ],
        [
          "clearTrig",
          "wearTail"
        ],
        [
          "moveAllObjects",
          "shallows2",
          "shallows"
        ]
      ]
    ],
    "newGoal": [
      "if",
      [
        "getJSONAttr",
        [
          "strJoin",
          "goals.",
          "@1",
          ".active"
        ]
      ],
      [],
      [
        [
          "setJSONAttr",
          [
            "strJoin",
            "goals.",
            "@1",
            ".active"
          ],
          true
        ],
        [
          "say",
          [
            "strJoin",
            "|* NEW ^GOAL^ ADDED: ",
            [
              "getJSONAttr",
              [
                "strJoin",
                "goals.",
                "@1",
                ".name"
              ]
            ],
            " *"
          ]
        ]
      ]
    ],
    "look": [
      [
        "clear"
      ],
      [
        "exec",
        [
          "strJoin",
          "rooms.",
          "@room",
          ".onEnter"
        ]
      ],
      [
        "look"
      ],
      [
        "exec",
        [
          "strJoin",
          "rooms.",
          "@room",
          ".afterEnter"
        ]
      ]
    ],
    "walkTo": [
      [
        "if",
        "@2",
        [
          [
            "say",
            "@2"
          ],
          [
            "wait",
            0.5
          ]
        ]
      ],
      [
        "set",
        "@room",
        "@1"
      ],
      [
        "exec",
        "scripts.look"
      ]
    ]
  },
  "triggers": {},
  "actions": [
    {
      "match": "room",
      "action": [
        "take",
        "@1"
      ],
      "exec": [
        "if",
        [
          "equals",
          [
            "getObjectAttr",
            "@1",
            "room"
          ],
          "inventory"
        ],
        [
          "say",
          "You are already carrying it!"
        ],
        [
          [
            "set",
            "@2",
            [
              "getObjectAttr",
              "@1",
              "take"
            ]
          ],
          [
            "if",
            "@2",
            [
              "say",
              "@2"
            ],
            [
              [
                "setObjectAttr",
                "@1",
                "room",
                "inventory"
              ],
              [
                "say",
                [
                  "strJoin",
                  "You take the ",
                  [
                    "getObjectAttr",
                    "@1",
                    "title"
                  ]
                ]
              ],
              [
                "exec",
                [
                  "getObjectPath",
                  "@1",
                  "afterTake"
                ]
              ]
            ]
          ]
        ]
      ]
    },
    {
      "match": "inventory",
      "action": [
        "drop",
        "@1"
      ],
      "exec": [
        "if",
        [
          "equals",
          [
            "getObjectAttr",
            "@1",
            "room"
          ],
          "inventory"
        ],
        [
          [
            "setObjectAttr",
            "@1",
            "room",
            "@room"
          ],
          [
            "say",
            "You drop it."
          ]
        ],
        [
          "say",
          "You are not carrying it!"
        ]
      ]
    },
    {
      "match": "inventory",
      "action": [
        "throw",
        "@1"
      ],
      "exec": [
        "if",
        [
          "equals",
          [
            "getObjectAttr",
            "@1",
            "room"
          ],
          "inventory"
        ],
        [
          [
            "setObjectAttr",
            "@1",
            "room",
            "@room"
          ],
          [
            "say",
            "You throw it."
          ]
        ],
        [
          "say",
          "You are not carrying it!"
        ]
      ]
    },
    {
      "action": [
        "exam",
        "@1"
      ],
      "exec": [
        [
          "set",
          "@2",
          [
            "getObjectAttr",
            "@1",
            "detail"
          ]
        ],
        [
          "if",
          "@2",
          [
            "say",
            "@2"
          ],
          [
            "say",
            "There's nothing out of the ordinary about it."
          ]
        ]
      ]
    },
    {
      "action": [
        "eat",
        "@1"
      ],
      "exec": [
        [
          "set",
          "@2",
          [
            "getObjectAttr",
            "@1",
            "eat"
          ]
        ],
        [
          "if",
          "@2",
          [
            "say",
            "@2"
          ],
          [
            "say",
            "I can't eat that!"
          ]
        ]
      ]
    },
    {
      "action": [
        "smell",
        "@1"
      ],
      "exec": [
        [
          "set",
          "@2",
          [
            "getObjectAttr",
            "@1",
            "smell"
          ]
        ],
        [
          "if",
          "@2",
          [
            "say",
            "@2"
          ],
          [
            "say",
            "I don't smell anything out of the ordinary."
          ]
        ]
      ]
    },
    {
      "action": [
        "talk",
        "@1"
      ],
      "exec": [
        [
          "set",
          "@2",
          [
            "getObjectPath",
            "@1",
            "talk"
          ]
        ],
        [
          "if",
          "@2",
          [
            "talk",
            "@2"
          ],
          [
            "say",
            "I don't know what to say!"
          ]
        ]
      ]
    },
    {
      "action": [
        "talk"
      ],
      "exec": [
        "say",
        "Talk to who...?"
      ]
    },
    {
      "action": [
        "eat"
      ],
      "exec": [
        "say",
        "I'm sorry, I don't know how to eat that."
      ]
    },
    {
      "action": [
        "sleep"
      ],
      "exec": [
        "say",
        "I'm really not that tired."
      ]
    },
    {
      "action": [
        "jump"
      ],
      "exec": [
        "say",
        "You leap around a bit... It's all good exercise."
      ]
    },
    {
      "action": [
        "die"
      ],
      "exec": [
        "say",
        "That doesn't sound like a very good plan!"
      ]
    },
    {
      "action": [
        "smell"
      ],
      "exec": [
        "say",
        "I don't smell anything out of the ordinary."
      ]
    },
    {
      "action": [
        "look"
      ],
      "strict": true,
      "exec": [
        "exec",
        "scripts.look"
      ]
    },
    {
      "action": [
        "take"
      ],
      "exec": [
        "say",
        "I'm sorry, I don't know how to pick that up."
      ]
    },
    {
      "action": [
        "inv"
      ],
      "exec": [
        "listObjectsInRoom",
        "inventory",
        "You are carrying",
        "Your hands are empty..."
      ]
    },
    {
      "action": [
        "exam"
      ],
      "exec": [
        "say",
        "I'm sorry, I don't know how to examine that."
      ]
    },
    {
      "action": [
        "n"
      ],
      "exec": [
        [
          "set",
          "@1",
          [
            "getJSONAttr",
            [
              "strJoin",
              "rooms.",
              "@room",
              ".walk.n"
            ]
          ]
        ],
        [
          "if",
          "@1",
          [
            [
              "say",
              "Going north..."
            ],
            [
              "wait",
              0.7
            ],
            [
              "set",
              "@room",
              "@1"
            ],
            [
              "exec",
              "scripts.look"
            ]
          ],
          [
            "say",
            "You can't go in that direction."
          ]
        ]
      ]
    },
    {
      "action": [
        "e"
      ],
      "exec": [
        [
          "set",
          "@1",
          [
            "getJSONAttr",
            [
              "strJoin",
              "rooms.",
              "@room",
              ".walk.e"
            ]
          ]
        ],
        [
          "if",
          "@1",
          [
            [
              "say",
              "Going east..."
            ],
            [
              "wait",
              0.7
            ],
            [
              "set",
              "@room",
              "@1"
            ],
            [
              "exec",
              "scripts.look"
            ]
          ],
          [
            "say",
            "You can't go in that direction."
          ]
        ]
      ]
    },
    {
      "action": [
        "s"
      ],
      "exec": [
        [
          "set",
          "@1",
          [
            "getJSONAttr",
            [
              "strJoin",
              "rooms.",
              "@room",
              ".walk.s"
            ]
          ]
        ],
        [
          "if",
          "@1",
          [
            [
              "say",
              "Going south..."
            ],
            [
              "wait",
              0.7
            ],
            [
              "set",
              "@room",
              "@1"
            ],
            [
              "exec",
              "scripts.look"
            ]
          ],
          [
            "say",
            "You can't go in that direction."
          ]
        ]
      ]
    },
    {
      "action": [
        "w"
      ],
      "exec": [
        [
          "set",
          "@1",
          [
            "getJSONAttr",
            [
              "strJoin",
              "rooms.",
              "@room",
              ".walk.w"
            ]
          ]
        ],
        [
          "if",
          "@1",
          [
            [
              "say",
              "Going west..."
            ],
            [
              "wait",
              0.7
            ],
            [
              "set",
              "@room",
              "@1"
            ],
            [
              "exec",
              "scripts.look"
            ]
          ],
          [
            "say",
            "You can't go in that direction."
          ]
        ]
      ]
    },
    {
      "action": [
        "d"
      ],
      "exec": [
        [
          "set",
          "@1",
          [
            "getJSONAttr",
            [
              "strJoin",
              "rooms.",
              "@room",
              ".walk.d"
            ]
          ]
        ],
        [
          "if",
          "@1",
          [
            [
              "say",
              "Going down..."
            ],
            [
              "wait",
              0.7
            ],
            [
              "set",
              "@room",
              "@1"
            ],
            [
              "exec",
              "scripts.look"
            ]
          ],
          [
            "say",
            "You can't go down from here."
          ]
        ]
      ]
    },
    {
      "action": [
        "u"
      ],
      "exec": [
        [
          "set",
          "@1",
          [
            "getJSONAttr",
            [
              "strJoin",
              "rooms.",
              "@room",
              ".walk.u"
            ]
          ]
        ],
        [
          "if",
          "@1",
          [
            [
              "say",
              "Going up..."
            ],
            [
              "wait",
              0.7
            ],
            [
              "set",
              "@room",
              "@1"
            ],
            [
              "exec",
              "scripts.look"
            ]
          ],
          [
            "say",
            "You can't go up from here."
          ]
        ]
      ]
    },
    {
      "action": [
        "exit"
      ],
      "exec": [
        [
          "set",
          "@1",
          [
            "getJSONAttr",
            [
              "strJoin",
              "rooms.",
              "@room",
              ".walk.exit"
            ]
          ]
        ],
        [
          "if",
          "@1",
          [
            [
              "say",
              "Going out..."
            ],
            [
              "wait",
              0.7
            ],
            [
              "set",
              "@room",
              "@1"
            ],
            [
              "exec",
              "scripts.look"
            ]
          ],
          [
            "say",
            "I don't know how to exit from here?"
          ]
        ]
      ]
    },
    {
      "action": [
        "out"
      ],
      "strict": true,
      "exec": [
        [
          "set",
          "@1",
          [
            "getJSONAttr",
            [
              "strJoin",
              "rooms.",
              "@room",
              ".walk.exit"
            ]
          ]
        ],
        [
          "if",
          "@1",
          [
            [
              "say",
              "Going out..."
            ],
            [
              "wait",
              0.7
            ],
            [
              "set",
              "@room",
              "@1"
            ],
            [
              "exec",
              "scripts.look"
            ]
          ],
          [
            "say",
            "I don't know how to exit from here?"
          ]
        ]
      ]
    },
    {
      "action": [
        "kick"
      ],
      "exec": [
        "say",
        "You can kick it all you like, but nothings going to happen."
      ]
    },
    {
      "action": [
        "shout"
      ],
      "exec": [
        "say",
        "I feel a little uncomfortable shouting my head off right now!"
      ]
    },
    {
      "action": [
        "hello"
      ],
      "exec": [
        "say",
        "If you want to talk to someone, then type 'talk' followed by their name."
      ]
    },
    {
      "action": [
        "bye"
      ],
      "exec": [
        "say",
        "Are you going somewhere...?"
      ]
    },
    {
      "action": [
        "griffpatch"
      ],
      "exec": [
        "say",
        "Are you talking about me? :)"
      ]
    },
    {
      "action": [
        "goals"
      ],
      "exec": [
        "listGoals"
      ]
    },
    {
      "action": [
        "help"
      ],
      "exec": [
        "say",
        "Example commands:|^i^ - (Short for Inventory) Tells you what you are carrying|^look^ - To describe where you are and where you can go.|^n^ - Walk north (also ^n^,^e^,^s^,^w^ and ^u^ & ^d^ for up and down)|^exam apple^ - Examine the apple (VERY IMPORTANT)|^take apple^ - Pick up an apple.|^talk to lady^ - Starts a conversation with someone.|^read sign^ - Read our what is on a sign.|^use key^ - To use a item|^Give apple to man^ - etc..."
      ]
    },
    {
      "action": [
        "tip"
      ],
      "exec": [
        "say",
        "Use the \"Look At\" command to examine EVERYTHING!!! You might have missed something."
      ]
    },
    {
      "action": [
        "wait"
      ],
      "strict": true,
      "exec": [
        "say",
        "Time passes..."
      ]
    },
    {
      "action": [
        "map"
      ],
      "strict": true,
      "exec": [
        "if",
        [
          "isHeld",
          "map"
        ],
        [
          [
            "say",
            "You look at the ^map^."
          ],
          [
            "showMap"
          ]
        ],
        [
          "say",
          "I need to be holding a map to be able to look at it."
        ]
      ]
    }
  ],
  "goals": {
    "eggBog": {
      "name": "Bog Egg",
      "active": false,
      "desc": "Retrieved the Egg from the Bog."
    },
    "eggs": {
      "name": "Return Dragon Eggs",
      "active": false,
      "desc": "Returned the 4 eggs to the dragon."
    },
    "trident": {
      "name": "Better Trident",
      "active": false,
      "desc": "Given Mer-King a better Trident"
    },
    "castle": {
      "name": "Visit Castle",
      "active": true,
      "desc": "Visited the Castle."
    },
    "pokemon": {
      "name": "Catch Pokemon",
      "active": false,
      "desc": "Caught a Wild Pidgey."
    },
    "guard": {
      "name": "Free Guard",
      "active": false,
      "desc": "Freed the Guard."
    },
    "dragon": {
      "name": "See Dragon",
      "active": true,
      "desc": "Seen the Dragon."
    },
    "royalty": {
      "name": "Only Royalty",
      "active": false,
      "desc": "Passed the Mer-Guard"
    },
    "dipBeans": {
      "name": "Dip Beans",
      "active": false,
      "desc": "You dipped the beans."
    },
    "quest": {
      "name": "Quest Complete",
      "active": false,
      "desc": "Quest Complete!"
    },
    "beggar": {
      "name": "Coin for Man",
      "active": false,
      "desc": "Gave a coin to the poor man."
    },
    "eggCloud": {
      "name": "Cloud Egg",
      "active": false,
      "desc": "Retrieved the Egg from the Clouds."
    },
    "cushion": {
      "name": "Kings Cushion",
      "active": false,
      "desc": "You got the kings key."
    },
    "oldLady": {
      "name": "Help Old Lady",
      "active": false,
      "desc": "Helped the old lady."
    },
    "fish": {
      "name": "Tropical Fish",
      "active": false,
      "desc": "Given Fishmonger a Tropical Fish."
    },
    "plantBeans": {
      "name": "Plant Beans",
      "active": false,
      "desc": "You planted the beans."
    },
    "eggKing": {
      "name": "King's Egg",
      "active": false,
      "desc": "Retrieved the Egg from the King."
    },
    "village": {
      "name": "Visit Village",
      "active": true,
      "desc": "Arrived at the village."
    },
    "eggSea": {
      "name": "Sea Egg",
      "active": false,
      "desc": "Retrieved the Egg from the Sea."
    }
  }
}